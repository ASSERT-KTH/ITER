bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	18	None	replace
2	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	18	None	replace
3	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	18	None	replace
4	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	18	None	replace
5	[BUG]  [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	97	None	replace
6	[BUG]  [BUGGY]  Name  p  =  parent.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	97	None	replace
7	[BUG]  [BUGGY]  Name  p  =  node.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  node.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  node.getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	97	None	replace
8	[BUG]  [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false,  parent);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false,  parent);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false,  parent);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	97	None	replace
9	[BUG]  [BUGGY]  Name  p  =  this.nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  this.nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  this.nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	97	None	replace
10	[BUG]  [BUGGY]  Name  p  =  parent.node.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.node.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.node.getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	97	None	replace
11	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	53	None	replace
12	[BUG]  [BUGGY]  int  numStubs  =  nameNode.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	53	None	replace
13	[BUG]  [BUGGY]  int  numStubs  =  parent.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	53	None	replace
14	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	53	None	replace
15	[BUG]  [BUGGY]  int  numStubs  =  names.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  names.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  names.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	53	None	replace
16	[BUG]  [BUGGY]  int  numStubs  =  name.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  name.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  name.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	53	None	replace
17	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getString();	  numStubs    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	37	None	replace
18	[BUG]  [BUGGY]  numStubs  =  n.node.getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  n.node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.node.getLastChild().getString();	  numStubs    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	37	None	replace
19	[BUG]  [BUGGY]  numStubs  =  parent.node.getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.node.getLastChild().getString();	  numStubs    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	37	None	replace
20	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	119	None	replace
21	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	119	None	replace
22	[BUG]  [BUGGY]  Node  p  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	119	None	replace
23	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_	  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	119	None	replace
24	[BUG]  [BUGGY]  NameNode  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	82	None	replace
25	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	82	None	replace
26	[BUG]  [BUGGY]  NameNode  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	82	None	replace
27	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	82	None	replace
28	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	82	None	replace
29	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	82	None	replace
30	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	120	None	replace
31	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	120	None	replace
32	[BUG]  [BUGGY]  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	55	None	replace
33	[BUG]  [BUGGY]  Node  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	55	None	replace
34	[BUG]  [BUGGY]  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	55	None	replace
35	[BUG]  [BUGGY]  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	55	None	replace
36	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    node    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
37	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	  Name    node    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
38	[BUG]  [BUGGY]  Name  node  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    node    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
39	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    node    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
40	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    node    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
41	[BUG]  [BUGGY]  Name  node  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    node    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
42	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	52	None	replace
43	[BUG]  [BUGGY]  int  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	52	None	replace
44	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	52	None	replace
45	[BUG]  [BUGGY]  int  numStubs  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	52	None	replace
46	[BUG]  [BUGGY]  int  numStubs  =  names.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  names.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  names.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	52	None	replace
47	[BUG]  [BUGGY]  int  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	52	None	replace
48	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs++;    	non-compiled	[CE]  not  a  statement	35	None	replace
49	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  int    numStubs++;    	non-compiled	[CE]  not  a  statement	35	None	replace
50	[BUG]  [BUGGY]  int  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs++;    	non-compiled	[CE]  not  a  statement	35	None	replace
51	[BUG]  [BUGGY]  int  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  int    numStubs++;    	non-compiled	[CE]  not  a  statement	35	None	replace
52	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	23	None	replace
53	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	23	None	replace
54	[BUG]  [BUGGY]  numStubs  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	59	None	replace
55	[BUG]  [BUGGY]  numStubs  =  p.refs.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	59	None	replace
56	[BUG]  [BUGGY]  Name  p  =  parent.getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	101	None	replace
57	[BUG]  [BUGGY]  Name  p  =  node.getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  node.getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  node.getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	101	None	replace
58	[BUG]  [BUGGY]  Name  p  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	101	None	replace
59	[BUG]  [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME  +  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME  +  1);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME  +  1);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	101	None	replace
60	[BUG]  [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getFirstChild().getString();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.refs.get(0).node.getFirstChild().getString();	  Name    nameNode    =    p.refs.get(0).node.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	93	None	replace
61	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(1).node.getFirstChild().getString();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(1).node.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(1).node.getFirstChild().getString();	  Name    nameNode    =    p.refs.get(0).node.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	93	None	replace
62	[BUG]  [BUGGY]  Name  nameNode  =  p.node.getFirstChild().getString();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.node.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.node.getFirstChild().getString();	  Name    nameNode    =    p.refs.get(0).node.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	93	None	replace
63	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(p.node.getFirstChild().getString());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(p.node.getFirstChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(p.node.getFirstChild().getString());	  Name    nameNode    =    p.refs.get(0).node.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	93	None	replace
64	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(n.node.getFirstChild().getString());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(n.node.getFirstChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(n.node.getFirstChild().getString());	  Name    nameNode    =    p.refs.get(0).node.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	93	None	replace
65	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    n    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
66	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	  Name    n    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
67	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    n    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
68	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    n    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
69	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Name    n    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
70	[BUG]  [BUGGY]  Name  n  =  parent.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  parent.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  parent.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    n    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
71	[BUG]  [BUGGY]  Name  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	43	None	replace
72	[BUG]  [BUGGY]  Name  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	43	None	replace
73	[BUG]  [BUGGY]  Name  p  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	43	None	replace
74	[BUG]  [BUGGY]  Name  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	43	None	replace
75	[BUG]  [BUGGY]  Name  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	43	None	replace
76	[BUG]  [BUGGY]  Name  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	43	None	replace
77	[BUG]  [BUGGY]  Name  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	43	None	replace
78	[BUG]  [BUGGY]  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	80	None	replace
79	[BUG]  [BUGGY]  numStubs  =  parent.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	80	None	replace
80	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	80	None	replace
81	[BUG]  [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	14	None	replace
82	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	14	None	replace
83	[BUG]  [BUGGY]  Name  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	14	None	replace
84	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	14	None	replace
85	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	14	None	replace
86	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	14	None	replace
87	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  addAfter,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  addAfter,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  addAfter,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	28	None	replace
88	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	28	None	replace
89	[BUG]  [BUGGY]  compiler.report(JSError.make(numStubs,  alias,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(numStubs,  alias,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(numStubs,  alias,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	28	None	replace
90	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	28	None	replace
91	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  parent,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	28	None	replace
92	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  numStubs,  UNSAFE_THIS));  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  numStubs,  UNSAFE_THIS));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  numStubs,  UNSAFE_THIS));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	28	None	replace
93	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().node.getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().node.getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().node.getString();	  numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	124	None	replace
94	[BUG]  [BUGGY]  numStubs  =  nameMap.getFirstChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameMap.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameMap.getFirstChild().getString();	  numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	124	None	replace
95	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  addAfter,  alias));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  addAfter,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  addAfter,  alias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	131	None	replace
96	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_NAMESPACE_WARNING,  alias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_NAMESPACE_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  UNSAFE_NAMESPACE_WARNING,  alias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	131	None	replace
97	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS,  alias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS,  alias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	131	None	replace
98	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  n,  NAMESPACE_REDEFINED_WARNING,  nameNode));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  n,  NAMESPACE_REDEFINED_WARNING,  nameNode));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  n,  NAMESPACE_REDEFINED_WARNING,  nameNode));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	131	None	replace
99	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  parent,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	131	None	replace
100	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING,  alias,  parent));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING,  alias,  parent));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING,  alias,  parent));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	131	None	replace
101	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  parent,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  parent,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  parent,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	131	None	replace
102	[BUG]  [BUGGY]  Node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	63	None	replace
103	[BUG]  [BUGGY]  NameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	63	None	replace
104	[BUG]  [BUGGY]  Name  p  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	13	None	replace
105	[BUG]  [BUGGY]  Name  p  =  nameNode.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	13	None	replace
106	[BUG]  [BUGGY]  Name  p  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	13	None	replace
107	[BUG]  [BUGGY]  Name  p  =  nameNode.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	13	None	replace
108	[BUG]  [BUGGY]  Name  p  =  nameNode.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	13	None	replace
109	[BUG]  [BUGGY]  numStubs  =  p.getFirstChild().getString();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.getFirstChild().getString();	  numStubs    =    nameNode.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	40	None	replace
110	[BUG]  [BUGGY]  numStubs  =  parent.getFirstChild().getString();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.getFirstChild().getString();	  numStubs    =    nameNode.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	40	None	replace
111	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_N	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	95	None	replace
112	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	95	None	replace
113	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	95	None	replace
114	[BUG]  [BUGGY]  int  numStubs  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	31	None	replace
115	[BUG]  [BUGGY]  int  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	31	None	replace
116	[BUG]  [BUGGY]  int  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	31	None	replace
117	[BUG]  [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_N,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_N,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_N,  true);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_N);    	non-compiled	[CE]  not  a  statement	100	None	replace
118	[BUG]  [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_N,  false);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_N,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_N,  false);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_N);    	non-compiled	[CE]  not  a  statement	100	None	replace
119	[BUG]  [BUGGY]  Name  p  =  parent.getBooleanProp(Node.IS_CONSTANT_N);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.getBooleanProp(Node.IS_CONSTANT_N);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.getBooleanProp(Node.IS_CONSTANT_N);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_N);    	non-compiled	[CE]  not  a  statement	100	None	replace
120	[BUG]  [BUGGY]  Name  p  =  node.getBooleanProp(Node.IS_CONSTANT_N);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  node.getBooleanProp(Node.IS_CONSTANT_N);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  node.getBooleanProp(Node.IS_CONSTANT_N);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_N);    	non-compiled	[CE]  not  a  statement	100	None	replace
121	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	139	None	replace
122	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	139	None	replace
123	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	139	None	replace
124	[BUG]  [BUGGY]  numStubs  +=  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	139	None	replace
125	[BUG]  [BUGGY]  numStubs  +=  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	139	None	replace
126	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_N1,  true);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_N1,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_N1,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	12	None	replace
127	[BUG]  [BUGGY]  Node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;	  Node.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    numStubs++;    	non-compiled	[CE]  not  a  statement	4	None	replace
128	[BUG]  [BUGGY]  Node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Node.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    numStubs++;    	non-compiled	[CE]  not  a  statement	4	None	replace
129	[BUG]  [BUGGY]  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	77	None	replace
130	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	77	None	replace
131	[BUG]  [BUGGY]  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	77	None	replace
132	[BUG]  [BUGGY]  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	77	None	replace
133	[BUG]  [BUGGY]  Node  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    numStubs++;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
134	[BUG]  [BUGGY]  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  alias),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  alias),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  alias),  NAMESPACE_REDEFINED_WARNING);	  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,    n),    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	27	None	replace
135	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  n),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  n),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  n),  NAMESPACE_REDEFINED_WARNING);	  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,    n),    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	27	None	replace
136	[BUG]  [BUGGY]  compiler.report(JSError.make(UNSAFE_NAMESPACE_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(UNSAFE_NAMESPACE_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(UNSAFE_NAMESPACE_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);	  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,    n),    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	27	None	replace
137	[BUG]  [BUGGY]  compiler.report(JSError.make(UNKNOWN_SYNTHETIC_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(UNKNOWN_SYNTHETIC_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(UNKNOWN_SYNTHETIC_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);	  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,    n),    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	27	None	replace
138	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n),  NAMESPACE_REDEFINED_WARNING);	  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,    n),    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	27	None	replace
139	[BUG]  [BUGGY]  compiler.report(JSError.make(MOVED_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(MOVED_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(MOVED_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);	  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,    n),    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	27	None	replace
140	[BUG]  [BUGGY]  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  nameNode),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  nameNode),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  nameNode),  NAMESPACE_REDEFINED_WARNING);	  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,    n),    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	27	None	replace
141	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  p.node);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  p.node);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  p.node);	  nameNode.putProp(Node.IS_CONSTANT_NAME,    n);    	non-compiled	[CE]  not  a  statement	117	None	replace
142	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  alias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  alias);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  alias);	  nameNode.putProp(Node.IS_CONSTANT_NAME,    n);    	non-compiled	[CE]  not  a  statement	117	None	replace
143	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  addAfter);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  addAfter);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  addAfter);	  nameNode.putProp(Node.IS_CONSTANT_NAME,    n);    	non-compiled	[CE]  not  a  statement	117	None	replace
144	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  parent);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  parent);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  parent);	  nameNode.putProp(Node.IS_CONSTANT_NAME,    n);    	non-compiled	[CE]  not  a  statement	117	None	replace
145	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  newVar);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  newVar);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  newVar);	  nameNode.putProp(Node.IS_CONSTANT_NAME,    n);    	non-compiled	[CE]  not  a  statement	117	None	replace
146	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	138	None	replace
147	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	138	None	replace
148	[BUG]  [BUGGY]  Integer  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Integer  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Integer  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	138	None	replace
149	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(1).node.getLastChild().getString().equals( " "))  {  numStubs++;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(1).node.getLastChild().getString().equals( " "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(1).node.getLastChild().getString().equals( " "))  {  numStubs++;	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	138	None	replace
150	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	138	None	replace
151	[BUG]  [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putIntProp(Node.IS_CONSTANT_NAME,  false);	  nameNode.putShortProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	47	None	replace
152	[BUG]  [BUGGY]  NameNode.putShortProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putShortProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putShortProp(Node.IS_CONSTANT_NAME,  true);	  nameNode.putShortProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	47	None	replace
153	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  n,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.report(JSError.make(sourceName,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	89	None	replace
154	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  UNSAFE_NAMESPACE_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  n,  UNSAFE_NAMESPACE_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  UNSAFE_NAMESPACE_WARNING,  propAlias));	  compiler.report(JSError.make(sourceName,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	89	None	replace
155	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  addAfter,  propAlias));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  n,  addAfter,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  addAfter,  propAlias));	  compiler.report(JSError.make(sourceName,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	89	None	replace
156	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  UNSAFE_THIS,  propAlias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  n,  UNSAFE_THIS,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  UNSAFE_THIS,  propAlias));	  compiler.report(JSError.make(sourceName,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	89	None	replace
157	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(sourceName,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	89	None	replace
158	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  DEFAULT_NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  n,  DEFAULT_NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  DEFAULT_NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(sourceName,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	89	None	replace
159	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  alias,  propAlias));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  n,  alias,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  alias,  propAlias));	  compiler.report(JSError.make(sourceName,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	89	None	replace
160	[BUG]  [BUGGY]  NameNode.putProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putProp(Node.IS_CONSTANT_NAME,  true);	  nameNode.putProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	9	None	replace
161	[BUG]  [BUGGY]  Name  node  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
162	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
163	[BUG]  [BUGGY]  Name  node  =  nameNode.get(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  nameNode.get(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  nameNode.get(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
164	[BUG]  [BUGGY]  Name  node  =  nameNode.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  nameNode.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  nameNode.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
165	[BUG]  [BUGGY]  Name  node  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
166	[BUG]  [BUGGY]  Name  node  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
167	[BUG]  [BUGGY]  Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	42	None	replace
168	[BUG]  [BUGGY]  Name  p  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	42	None	replace
169	[BUG]  [BUGGY]  Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	42	None	replace
170	[BUG]  [BUGGY]  Name  p  =  names.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  names.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  names.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	42	None	replace
171	[BUG]  [BUGGY]  int  numStubs  =  nameMap.size()  -  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameMap.size()  -  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameMap.size()  -  1;	  int    numStubs    =    nameMap.size();    	non-compiled	[CE]  not  a  statement	33	None	replace
172	[BUG]  [BUGGY]  int  numStubs  =  nameMap.size()  +  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameMap.size()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameMap.size()  +  1;	  int    numStubs    =    nameMap.size();    	non-compiled	[CE]  not  a  statement	33	None	replace
173	[BUG]  [BUGGY]  int  numStubs  =  names.size();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  names.size();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  names.size();	  int    numStubs    =    nameMap.size();    	non-compiled	[CE]  not  a  statement	33	None	replace
174	[BUG]  [BUGGY]  int  numStubs  =  nameMap.size()  -  2;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameMap.size()  -  2;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameMap.size()  -  2;	  int    numStubs    =    nameMap.size();    	non-compiled	[CE]  not  a  statement	33	None	replace
175	[BUG]  [BUGGY]  int  numStubs  =  nameMap.size()  *  2;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameMap.size()  *  2;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameMap.size()  *  2;	  int    numStubs    =    nameMap.size();    	non-compiled	[CE]  not  a  statement	33	None	replace
176	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  numStubs));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  numStubs));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  numStubs));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	132	None	replace
177	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING,  nameNode));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING,  nameNode));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING,  nameNode));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	132	None	replace
178	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  n));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  n));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  n));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	132	None	replace
179	[BUG]  [BUGGY]  compiler.report(JSError.make(numStubs,  n,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(numStubs,  n,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(numStubs,  n,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	132	None	replace
180	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	140	None	replace
181	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	140	None	replace
182	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	140	None	replace
183	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	140	None	replace
184	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_N	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	113	None	replace
185	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	113	None	replace
186	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getStringProp(Node.IS_CONSTANT_NAME)  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getStringProp(Node.IS_CONSTANT_NAME)  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  p.refs.get(0).node.getLastChild().getStringProp(Node.IS_CONSTANT_NAME)	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	113	None	replace
187	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	34	None	replace
188	[BUG]  [BUGGY]  int  numStubs  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	34	None	replace
189	[BUG]  [BUGGY]  int  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	34	None	replace
190	[BUG]  [BUGGY]  int  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	34	None	replace
191	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().endsWith( "- "))  {  numStubs++;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().endsWith( "- "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getString().endsWith( "- "))  {  numStubs++;	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "-   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	129	None	replace
192	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getLastChild().getString().endsWith( "- "))  {  numStubs++;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getLastChild().getString().endsWith( "- "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getLastChild().getString().endsWith( "- "))  {  numStubs++;	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "-   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	129	None	replace
193	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "- "))  {  numStubs++;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "- "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "- "))  {  numStubs++;	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "-   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	129	None	replace
194	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().endsWith( "- "));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().endsWith( "- "));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getString().endsWith( "- "));	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "-   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	129	None	replace
195	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  p.refs);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  p.refs);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  p.refs);	  nameNode.putProp(Node.IS_CONSTANT_NAME,    null);    	non-compiled	[CE]  not  a  statement	116	None	replace
196	[BUG]  [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  null);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  null);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putIntProp(Node.IS_CONSTANT_NAME,  null);	  nameNode.putIntProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	105	None	replace
197	[BUG]  [BUGGY]  numStubs  =  p.refs.getLastChild().getString()  +  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getLastChild().getString()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getLastChild().getString()  +  1;	  numStubs    =    p.refs.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	38	None	replace
198	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(1).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	106	None	replace
199	[BUG]  [BUGGY]  Node  nameNode  =  n.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  n.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  n.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	106	None	replace
200	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Node    nameNode    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	106	None	replace
201	[BUG]  [BUGGY]  Node  nameNode  =  parent.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  parent.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  parent.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	106	None	replace
202	[BUG]  [BUGGY]  parent.putBooleanProp(Node.IS_CONSTANT_N,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  parent.putBooleanProp(Node.IS_CONSTANT_N,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	parent.putBooleanProp(Node.IS_CONSTANT_N,  false);	  nameNode.putBooleanProp(Node.IS_CONSTANT_N,    false);    	non-compiled	[CE]  not  a  statement	70	None	replace
203	[BUG]  [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  1);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putIntProp(Node.IS_CONSTANT_NAME,  1);	  nameNode.putIntProp(Node.IS_CONSTANT_NAME,    0);    	non-compiled	[CE]  not  a  statement	84	None	replace
204	[BUG]  [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  -1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  -1);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putIntProp(Node.IS_CONSTANT_NAME,  -1);	  nameNode.putIntProp(Node.IS_CONSTANT_NAME,    0);    	non-compiled	[CE]  not  a  statement	84	None	replace
205	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getLastChild().getString();	  int    numStubs    =    p.refs.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	71	None	replace
206	[BUG]  [BUGGY]  int  numStubs  =  nameNode.refs.getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.refs.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.refs.getLastChild().getString();	  int    numStubs    =    p.refs.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	71	None	replace
207	[BUG]  [BUGGY]  int  numStubs  =  parent.refs.getLastChild().getString();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.refs.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.refs.getLastChild().getString();	  int    numStubs    =    p.refs.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	71	None	replace
208	[BUG]  [BUGGY]  int  numStubs  =  p.node.getLastChild().getString();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getLastChild().getString();	  int    numStubs    =    p.refs.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	71	None	replace
209	[BUG]  [BUGGY]  int  numStubs  =  nameMap.getLastChild().getString();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameMap.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameMap.getLastChild().getString();	  int    numStubs    =    p.refs.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	71	None	replace
210	[BUG]  [BUGGY]  Name  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	17	None	replace
211	[BUG]  [BUGGY]  Name  p  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	17	None	replace
212	[BUG]  [BUGGY]  Name  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	17	None	replace
213	[BUG]  [BUGGY]  Name  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	17	None	replace
214	[BUG]  [BUGGY]  Name  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	17	None	replace
215	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.    	non-compiled	[CE]  not  a  statement	134	None	replace
216	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.    	non-compiled	[CE]  not  a  statement	134	None	replace
217	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	86	None	replace
218	[BUG]  [BUGGY]  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	86	None	replace
219	[BUG]  [BUGGY]  numStubs  =  nameNode.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	86	None	replace
220	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  addAfter,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  addAfter,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  addAfter,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	88	None	replace
221	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  n,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  n,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  n,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	88	None	replace
222	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	88	None	replace
223	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  nameNode,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  nameNode,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  nameNode,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	88	None	replace
224	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true    	non-compiled	[CE]  not  a  statement	104	None	replace
225	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true    	non-compiled	[CE]  not  a  statement	104	None	replace
226	[BUG]  [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true    	non-compiled	[CE]  not  a  statement	104	None	replace
227	[BUG]  [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true    	non-compiled	[CE]  not  a  statement	104	None	replace
228	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true    	non-compiled	[CE]  not  a  statement	104	None	replace
229	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true    	non-compiled	[CE]  not  a  statement	104	None	replace
230	[BUG]  [BUGGY]  nameNode.putShortProp(Node.IS_CONSTANT_NAME,  null);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putShortProp(Node.IS_CONSTANT_NAME,  null);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putShortProp(Node.IS_CONSTANT_NAME,  null);	  nameNode.putShortProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	83	None	replace
231	[BUG]  [BUGGY]  nameNode.putShortProp(Node.IS_CONSTANT_NAME,  true,  parent);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putShortProp(Node.IS_CONSTANT_NAME,  true,  parent);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putShortProp(Node.IS_CONSTANT_NAME,  true,  parent);	  nameNode.putShortProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	83	None	replace
232	[BUG]  [BUGGY]  Node  addAfter  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  addAfter  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    addAfter    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	118	None	replace
233	[BUG]  [BUGGY]  Node  addAfter  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  addAfter  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    addAfter    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	118	None	replace
234	[BUG]  [BUGGY]  Node  addAfter  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  addAfter  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    addAfter    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	118	None	replace
235	[BUG]  [BUGGY]  Node  addAfter  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  addAfter  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    addAfter    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	118	None	replace
236	[BUG]  [BUGGY]  Node  addAfter  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  addAfter  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    addAfter    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	118	None	replace
237	[BUG]  [BUGGY]  Node  addAfter  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  addAfter  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    addAfter    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	118	None	replace
238	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NOT_ASSIGNED_WARNING,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NOT_ASSIGNED_WARNING,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NOT_ASSIGNED_WARNING,  true);	  NameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	81	None	replace
239	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NULL,  true);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NULL,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NULL,  true);	  NameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	81	None	replace
240	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_,  true);	  NameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	81	None	replace
241	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_KEY,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_KEY,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_KEY,  true);	  NameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	81	None	replace
242	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	90	None	replace
243	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  nameNode));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  nameNode));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  nameNode));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	90	None	replace
244	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  addAfter,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  addAfter,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  addAfter,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	90	None	replace
245	[BUG]  [BUGGY]  compiler.report(JSError.make(numStubs,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(numStubs,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(numStubs,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	90	None	replace
246	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	90	None	replace
247	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	90	None	replace
248	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	122	None	replace
249	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getFirstChild().getString().equals( " "))  {  numStubs++;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getFirstChild().getString().equals( " "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getFirstChild().getString().equals( " "))  {  numStubs++;	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CON    	non-compiled	[CE]  not  a  statement	136	None	replace
250	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  addAfter,  propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  addAfter,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  addAfter,  propAlias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	26	None	replace
251	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_NAMESPACE_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_NAMESPACE_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  UNSAFE_NAMESPACE_WARNING,  propAlias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	26	None	replace
252	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS,  propAlias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS,  propAlias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	26	None	replace
253	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  n,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  n,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  n,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	26	None	replace
254	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getFirstChild().getString();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getFirstChild().getString();	  int    numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	69	None	replace
255	[BUG]  [BUGGY]  int  numStubs  =  nameNode.refs.getFirstChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.refs.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.refs.getFirstChild().getString();	  int    numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	69	None	replace
256	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getLastChild().getString();	  int    numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	69	None	replace
257	[BUG]  [BUGGY]  int  numStubs  =  parent.refs.getFirstChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.refs.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.refs.getFirstChild().getString();	  int    numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	69	None	replace
258	[BUG]  [BUGGY]  int  numStubs  =  nameMap.getFirstChild().getString();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameMap.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameMap.getFirstChild().getString();	  int    numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	69	None	replace
259	[BUG]  [BUGGY]  int  numStubs  =  p.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
260	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getLastChild().getIndex(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
261	[BUG]  [BUGGY]  int  numStubs  =  parent.node.getFirstChild().getIndex(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.node.getFirstChild().getIndex(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.node.getFirstChild().getIndex(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
262	[BUG]  [BUGGY]  int  numStubs  =  names.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  names.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  names.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
263	[BUG]  [BUGGY]  int  numStubs  =  parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME,  p.refs);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME,  p.refs);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME,  p.refs);	  int    numStubs    =    parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
264	[BUG]  [BUGGY]  int  numStubs  =  n.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  n.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  n.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
265	[BUG]  [BUGGY]  int  numStubs  =  p.node.getFirstChild().getIndex(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getFirstChild().getIndex(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getFirstChild().getIndex(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
266	[BUG]  [BUGGY]  node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);	  node.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	112	None	replace
267	[BUG]  [BUGGY]  Node.IS_CONSTANT_NAME.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node.IS_CONSTANT_NAME.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node.IS_CONSTANT_NAME.putBooleanProp(Node.IS_CONSTANT_NAME,  false);	  node.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	112	None	replace
268	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Node    nameNode    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	19	None	replace
269	[BUG]  [BUGGY]  Node  nameNode  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	19	None	replace
270	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Node    nameNode    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	19	None	replace
271	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	19	None	replace
272	[BUG]  [BUGGY]  Node  nameNode  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	19	None	replace
273	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().equals( "   "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().equals( "   "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getString().equals( "   "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	130	None	replace
274	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	130	None	replace
275	[BUG]  [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
276	[BUG]  [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
277	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
278	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	57	None	replace
279	[BUG]  [BUGGY]  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	57	None	replace
280	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CON  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CON  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CON	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	57	None	replace
281	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONST  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONST  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONST	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	57	None	replace
282	[BUG]  [BUGGY]  Node  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	57	None	replace
283	[BUG]  [BUGGY]  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	64	None	replace
284	[BUG]  [BUGGY]  numStubs  =  p.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	64	None	replace
285	[BUG]  [BUGGY]  numStubs  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	64	None	replace
286	[BUG]  [BUGGY]  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	64	None	replace
287	[BUG]  [BUGGY]  numStubs  =  parent.node.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.node.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.node.getFirstChild().getLastChild().getString();	  numStubs    =    p.node.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	5	None	replace
288	[BUG]  [BUGGY]  numStubs  =  n.node.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  n.node.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.node.getFirstChild().getLastChild().getString();	  numStubs    =    p.node.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	5	None	replace
289	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getString()  +  1;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getString()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getLastChild().getString()  +  1;	  numStubs    =    p.node.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	5	None	replace
290	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME)	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)    	non-compiled	[CE]  not  a  statement	98	None	replace
291	[BUG]  [BUGGY]  Node  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)    	non-compiled	[CE]  not  a  statement	98	None	replace
292	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)    	non-compiled	[CE]  not  a  statement	98	None	replace
293	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)    	non-compiled	[CE]  not  a  statement	98	None	replace
294	[BUG]  [BUGGY]  Node  nameNode  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)    	non-compiled	[CE]  not  a  statement	98	None	replace
295	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)    	non-compiled	[CE]  not  a  statement	98	None	replace
296	[BUG]  [BUGGY]  Node  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	20	None	replace
297	[BUG]  [BUGGY]  Node  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	20	None	replace
298	[BUG]  [BUGGY]  Node  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	20	None	replace
299	[BUG]  [BUGGY]  Node  p  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	20	None	replace
300	[BUG]  [BUGGY]  Node  p  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	20	None	replace
301	[BUG]  [BUGGY]  Node  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	20	None	replace
302	[BUG]  [BUGGY]  Node  p  =  nameNode.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	20	None	replace
303	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  parent,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  parent,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  parent,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	24	None	replace
304	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  alias,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  alias,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  alias,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	24	None	replace
305	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	24	None	replace
306	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	24	None	replace
307	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  addAfter,  alias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  addAfter,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  addAfter,  alias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	24	None	replace
308	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	32	None	replace
309	[BUG]  [BUGGY]  int  numStubs  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	32	None	replace
310	[BUG]  [BUGGY]  int  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	32	None	replace
311	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	62	None	replace
312	[BUG]  [BUGGY]  numStubs  =  nameNode.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	62	None	replace
313	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true))  {  numStubs++;  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true))  {  numStubs++;  compiler.reportCodeChange();  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true))  {  numStubs++;  compiler.reportCodeChange();  }	  numStubs++;    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	51	None	replace
314	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false))  {  numStubs++;  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false))  {  numStubs++;  compiler.reportCodeChange();  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false))  {  numStubs++;  compiler.reportCodeChange();  }	  numStubs++;    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	51	None	replace
315	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME),  false)  {  numStubs++;  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME),  false)  {  numStubs++;  compiler.reportCodeChange();  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME),  false)  {  numStubs++;  compiler.reportCodeChange();  }	  numStubs++;    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	51	None	replace
316	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  numStubs++;  compiler.reportCodeChange();  }  else  {  nameNode.putBooleanProp  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  numStubs++;  compiler.reportCodeChange();  }  else  {  nameNode.putBooleanProp  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  numStubs++;  compiler.reportCodeChange();  }  else  {  nameNode.putBooleanProp	  numStubs++;    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	51	None	replace
317	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  compiler.reportCodeChange();  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  compiler.reportCodeChange();  }	  numStubs++;    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	51	None	replace
318	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "__   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
319	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "__   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
320	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "__   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
321	[BUG]  [BUGGY]  numStubs  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	141	None	replace
322	[BUG]  [BUGGY]  numStubs  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	141	None	replace
323	[BUG]  [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
324	[BUG]  [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
325	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
326	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	67	None	replace
327	[BUG]  [BUGGY]  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	67	None	replace
328	[BUG]  [BUGGY]  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	67	None	replace
329	[BUG]  [BUGGY]  numStubs  =  nameMap.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameMap.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameMap.getFirstChild().getLastChild().getString();	  numStubs    =    p.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	7	None	replace
330	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NULL,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NULL,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NULL,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	41	None	replace
331	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NOT_ASSIGNED_WARNING,  true);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NOT_ASSIGNED_WARNING,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NOT_ASSIGNED_WARNING,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	41	None	replace
332	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_KEY,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_KEY,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_KEY,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	41	None	replace
333	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_LAYER,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_LAYER,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_LAYER,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	41	None	replace
334	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  parent);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  parent);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  parent);	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	44	None	replace
335	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.refs);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.refs);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.refs);	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	44	None	replace
336	[BUG]  [BUGGY]  numStubs  =  n.childNode.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  n.childNode.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.childNode.getFirstChild().getLastChild().getString();	  numStubs    =    p.childNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	102	None	replace
337	[BUG]  [BUGGY]  numStubs  =  parent.childNode.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.childNode.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.childNode.getFirstChild().getLastChild().getString();	  numStubs    =    p.childNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	102	None	replace
338	[BUG]  [BUGGY]  int  numStubs  =  nameNode.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	54	None	replace
339	[BUG]  [BUGGY]  int  numStubs  =  parent.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	54	None	replace
340	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs    =    p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	54	None	replace
341	[BUG]  [BUGGY]  int  numStubs  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	54	None	replace
342	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	96	None	replace
343	[BUG]  [BUGGY]  NameNode  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	96	None	replace
344	[BUG]  [BUGGY]  NameNode  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	96	None	replace
345	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	96	None	replace
346	[BUG]  [BUGGY]  NameNode  nameNode  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	96	None	replace
347	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Node    nameNode    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	21	None	replace
348	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Node    nameNode    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	21	None	replace
349	[BUG]  [BUGGY]  Node  nameNode  =  parent.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  parent.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  parent.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	21	None	replace
350	[BUG]  [BUGGY]  Node  nameNode  =  n.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  n.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  n.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	21	None	replace
351	[BUG]  [BUGGY]  numStubs  =  parent.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	78	None	replace
352	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	78	None	replace
353	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().node.getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().node.getLastChild().getString();	  numStubs    =    p.refs.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	6	None	replace
354	[BUG]  [BUGGY]  numStubs  =  n.refs.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  n.refs.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.refs.getFirstChild().getLastChild().getString();	  numStubs    =    p.refs.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	6	None	replace
355	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	114	None	replace
356	[BUG]  [BUGGY]  Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	114	None	replace
357	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT,  true);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	114	None	replace
358	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getFirstChild().getString();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getFirstChild().getString();	  Name    node    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
359	[BUG]  [BUGGY]  Name  node  =  n.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  n.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  n.refs.get(0).node.getLastChild().getString();	  Name    node    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
360	[BUG]  [BUGGY]  Name  node  =  p.refs.get(1).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(1).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(1).node.getLastChild().getString();	  Name    node    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
361	[BUG]  [BUGGY]  Name  node  =  p.node.getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.node.getLastChild().getString();	  Name    node    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
362	[BUG]  [BUGGY]  Name  node  =  nameNode.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  nameNode.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  nameNode.get(0).node.getLastChild().getString();	  Name    node    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
363	[BUG]  [BUGGY]  Name  node  =  p.refs.get(n.node.getLastChild().getString());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(n.node.getLastChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(n.node.getLastChild().getString());	  Name    node    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
364	[BUG]  [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.refs.get(0).node.getLastChild().getString();	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	48	None	replace
365	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(1).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(1).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(1).node.getLastChild().getString();	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	48	None	replace
366	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(n.node.getLastChild().getString());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(n.node.getLastChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(n.node.getLastChild().getString());	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	48	None	replace
367	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(p.node.getLastChild().getString());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(p.node.getLastChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(p.node.getLastChild().getString());	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	48	None	replace
368	[BUG]  [BUGGY]  Name  nameNode  =  n.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.get(0).node.getLastChild().getString();	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	48	None	replace
369	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false,  parent);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false,  parent);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false,  parent);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true,    parent);    	non-compiled	[CE]  not  a  statement	10	None	replace
370	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  alias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  alias);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  alias);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true,    parent);    	non-compiled	[CE]  not  a  statement	10	None	replace
371	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  addAfter);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  addAfter);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  addAfter);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true,    parent);    	non-compiled	[CE]  not  a  statement	10	None	replace
372	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.node);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.node);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.node);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true,    parent);    	non-compiled	[CE]  not  a  statement	10	None	replace
373	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  n);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  n);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  n);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true,    parent);    	non-compiled	[CE]  not  a  statement	10	None	replace
374	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.refs);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.refs);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.refs);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true,    parent);    	non-compiled	[CE]  not  a  statement	10	None	replace
375	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	60	None	replace
376	[BUG]  [BUGGY]  numStubs  =  p.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	60	None	replace
377	[BUG]  [BUGGY]  numStubs  =  parent.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	60	None	replace
378	[BUG]  [BUGGY]  numStubs  =  p.childNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.childNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.childNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	60	None	replace
379	[BUG]  [BUGGY]  Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	16	None	replace
380	[BUG]  [BUGGY]  Name  p  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	16	None	replace
381	[BUG]  [BUGGY]  Name  p  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	16	None	replace
382	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  0);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  0);	  nameNode.putProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	45	None	replace
383	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  n.getString());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  n.getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  n.getString());	  nameNode.putProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	45	None	replace
384	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  true,  p.refs);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  true,  p.refs);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  true,  p.refs);	  nameNode.putProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	45	None	replace
385	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	56	None	replace
386	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( " "))  {  numStubs++;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( " "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( " "))  {  numStubs++;	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
387	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "* "))  {  numStubs++;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "* "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( "* "))  {  numStubs++;	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
388	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "_ "))  {  numStubs++;  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "_ "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( "_ "))  {  numStubs++;	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
389	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "/ "))  {  numStubs++;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "/ "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( "/ "))  {  numStubs++;	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
390	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().equals( " "))  {  numStubs++;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().equals( " "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getString().equals( " "))  {  numStubs++;	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
391	[BUG]  [BUGGY]  int  numStubs  =  parent.refs.getFirstChild().getString().equals( "   "))  {  numStubs++;  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.refs.getFirstChild().getString().equals( "   "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.refs.getFirstChild().getString().equals( "   "))  {  numStubs++;	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
392	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "n "))  {  numStubs++;  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "n "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( "n "))  {  numStubs++;	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
393	[BUG]  [BUGGY]  numStubs  =  parent.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	79	None	replace
394	[BUG]  [BUGGY]  compiler.report(JSError.make(numStubs,  addAfter,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(numStubs,  addAfter,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(numStubs,  addAfter,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(n,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	29	None	replace
395	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  addAfter,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  addAfter,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  addAfter,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(n,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	29	None	replace
396	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getLastChild().getString().endsWith( "_ "))  {  numStubs++;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getLastChild().getString().endsWith( "_ "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getLastChild().getString().endsWith( "_ "))  {  numStubs++;	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	126	None	replace
397	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getString().endsWith( "_ "))  {  numStubs++;	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	126	None	replace
398	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().endsWith( "_ "));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().endsWith( "_ "));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getString().endsWith( "_ "));	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	126	None	replace
399	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "_ "))  {  numStubs++;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "_ "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "_ "))  {  numStubs++;	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	126	None	replace
400	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));    	non-compiled	[CE]  not  a  statement	99	None	replace
401	[BUG]  [BUGGY]  Node  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));    	non-compiled	[CE]  not  a  statement	99	None	replace
402	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));    	non-compiled	[CE]  not  a  statement	99	None	replace
403	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));    	non-compiled	[CE]  not  a  statement	99	None	replace
404	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));    	non-compiled	[CE]  not  a  statement	99	None	replace
405	[BUG]  [BUGGY]  Node  nameNode  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  parent.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));    	non-compiled	[CE]  not  a  statement	99	None	replace
406	[BUG]  [BUGGY]  numStubs  =  p.node.getLastChild().getString();  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getLastChild().getString();  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getLastChild().getString();  compiler.reportCodeChange();	  numStubs    =    nameNode.getLastChild().getString();    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	87	None	replace
407	[BUG]  [BUGGY]  numStubs  =  p.refs.getLastChild().getString();  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getLastChild().getString();  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getLastChild().getString();  compiler.reportCodeChange();	  numStubs    =    nameNode.getLastChild().getString();    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	87	None	replace
408	[BUG]  [BUGGY]  numStubs  =  p.getLastChild().getString();  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.getLastChild().getString();  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.getLastChild().getString();  compiler.reportCodeChange();	  numStubs    =    nameNode.getLastChild().getString();    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	87	None	replace
409	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getLastChild().getString();  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getLastChild().getString();  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getLastChild().getString();  compiler.reportCodeChange();	  numStubs    =    nameNode.getLastChild().getString();    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	87	None	replace
410	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getString();  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().getString();  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getString();  compiler.reportCodeChange();	  numStubs    =    nameNode.getLastChild().getString();    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	87	None	replace
411	[BUG]  [BUGGY]  numStubs  =  nameMap.getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameMap.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameMap.getLastChild().getString();	  numStubs    =    p.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	39	None	replace
412	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getFirstChild().getString();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getFirstChild().getString();	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
413	[BUG]  [BUGGY]  Name  n  =  p.refs.get(1).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(1).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(1).node.getLastChild().getString();	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
414	[BUG]  [BUGGY]  Name  n  =  nameNode.get(p.refs.get(0).node.getLastChild().getString());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  nameNode.get(p.refs.get(0).node.getLastChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  nameNode.get(p.refs.get(0).node.getLastChild().getString());	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
415	[BUG]  [BUGGY]  Name  n  =  parent.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  parent.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  parent.refs.get(0).node.getLastChild().getString();	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
416	[BUG]  [BUGGY]  Name  n  =  p.refs.get(p.node.getLastChild().getString());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(p.node.getLastChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(p.node.getLastChild().getString());	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
417	[BUG]  [BUGGY]  Name  n  =  nameNode.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  nameNode.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  nameNode.get(0).node.getLastChild().getString();	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
418	[BUG]  [BUGGY]  Node  p  =  nameNode.refs.getFirstChild();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.refs.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.refs.getFirstChild();	  Node    p    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	94	None	replace
419	[BUG]  [BUGGY]  Node  p  =  nameNode.getFirstChild();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.getFirstChild();	  Node    p    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	94	None	replace
420	[BUG]  [BUGGY]  Node  p  =  parent.refs.getFirstChild();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  parent.refs.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  parent.refs.getFirstChild();	  Node    p    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	94	None	replace
421	[BUG]  [BUGGY]  Node  p  =  node.refs.getFirstChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  node.refs.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  node.refs.getFirstChild();	  Node    p    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	94	None	replace
422	[BUG]  [BUGGY]  Node  p  =  n.refs.getFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  n.refs.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  n.refs.getFirstChild();	  Node    p    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	94	None	replace
423	[BUG]  [BUGGY]  Node  p  =  names.getFirstChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  names.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  names.getFirstChild();	  Node    p    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	94	None	replace
424	[BUG]  [BUGGY]  Node  p  =  refs.getFirstChild();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  refs.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  refs.getFirstChild();	  Node    p    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	94	None	replace
425	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	22	None	replace
426	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	22	None	replace
427	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  parent.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  parent.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  parent.putBooleanProp(Node.IS_CONSTANT_	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	22	None	replace
428	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getLastChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.getLastChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getLastChild();	  Node    nameNode    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	107	None	replace
429	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getFirstChild();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.node.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.node.getFirstChild();	  Node    nameNode    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	107	None	replace
430	[BUG]  [BUGGY]  Node  nameNode  =  n.refs.getFirstChild();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  n.refs.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  n.refs.getFirstChild();	  Node    nameNode    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	107	None	replace
431	[BUG]  [BUGGY]  Node  nameNode  =  parent.refs.getFirstChild();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  parent.refs.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  parent.refs.getFirstChild();	  Node    nameNode    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	107	None	replace
432	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getNext();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.getNext();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getNext();	  Node    nameNode    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	107	None	replace
433	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.node.getFirstChild();  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.node.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.node.getFirstChild();	  Node    nameNode    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	107	None	replace
434	[BUG]  [BUGGY]  numStubs  =  p.refs.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	65	None	replace
435	[BUG]  [BUGGY]  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	92	None	replace
436	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	92	None	replace
437	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	92	None	replace
438	[BUG]  [BUGGY]  numStubs  =  p.refs.get(1).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(1).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(1).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	92	None	replace
439	[BUG]  [BUGGY]  Node  p  =  nameNode.getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.getLastChild().getString();	  Node    p    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	72	None	replace
440	[BUG]  [BUGGY]  Node  p  =  parent.node.getLastChild().getString();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  parent.node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  parent.node.getLastChild().getString();	  Node    p    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	72	None	replace
441	[BUG]  [BUGGY]  Node  p  =  node.getLastChild().getString();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  node.getLastChild().getString();	  Node    p    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	72	None	replace
442	[BUG]  [BUGGY]  Node  p  =  names.node.getLastChild().getString();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  names.node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  names.node.getLastChild().getString();	  Node    p    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	72	None	replace
443	[BUG]  [BUGGY]  Node  p  =  n.node.getLastChild().getString();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  n.node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  n.node.getLastChild().getString();	  Node    p    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	72	None	replace
444	[BUG]  [BUGGY]  Node  p  =  parent.getLastChild().getString();  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  parent.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  parent.getLastChild().getString();	  Node    p    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	72	None	replace
445	[BUG]  [BUGGY]  Node  p  =  nameNode.getFirstChild().getString();  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.getFirstChild().getString();	  Node    p    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	72	None	replace
446	[BUG]  [BUGGY]  Name  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	15	None	replace
447	[BUG]  [BUGGY]  Name  p  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	15	None	replace
448	[BUG]  [BUGGY]  Name  p  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	15	None	replace
449	[BUG]  [BUGGY]  Name  p  =  nameNode.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	15	None	replace
450	[BUG]  [BUGGY]  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	58	None	replace
451	[BUG]  [BUGGY]  numStubs  =  p.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	58	None	replace
452	[BUG]  [BUGGY]  numStubs  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	58	None	replace
453	[BUG]  [BUGGY]  numStubs  =  p.defs.getFirstChild().node.getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.defs.getFirstChild().node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.defs.getFirstChild().node.getLastChild().getString();	  numStubs    =    p.defs.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	108	None	replace
454	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	85	None	replace
455	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	85	None	replace
456	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	30	None	replace
457	[BUG]  [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	30	None	replace
458	[BUG]  [BUGGY]  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	61	None	replace
459	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	25	None	replace
460	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	25	None	replace
461	[BUG]  [BUGGY]  compiler.report(JSError.make(numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	25	None	replace
462	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  addAfter,  propAlias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  addAfter,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  addAfter,  propAlias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	25	None	replace
463	[BUG]  [BUGGY]  Node  p  =  nameNode.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.getFirstChild().getLastChild().getString();	  Node    p    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	121	None	replace
464	[BUG]  [BUGGY]  Node  p  =  nameNode.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.refs.get(0).node.getLastChild().getString();	  Node    p    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	121	None	replace
465	[BUG]  [BUGGY]  Node  p  =  n.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  n.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  n.refs.get(0).node.getLastChild().getString();	  Node    p    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	121	None	replace
466	[BUG]  [BUGGY]  Node  p  =  nameNode.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.get(0).node.getLastChild().getString();	  Node    p    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	121	None	replace
467	[BUG]  [BUGGY]  Node  p  =  parent.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  parent.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  parent.refs.get(0).node.getLastChild().getString();	  Node    p    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	121	None	replace
468	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	66	None	replace
469	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "- "))  {  numStubs++;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "- "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "- "))  {  numStubs++;	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    	non-compiled	[CE]  not  a  statement	135	None	replace
470	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "/ "))  {  numStubs++;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "/ "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "/ "))  {  numStubs++;	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    	non-compiled	[CE]  not  a  statement	135	None	replace
471	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "__ "))  {  numStubs++;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "__ "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "__ "))  {  numStubs++;	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    	non-compiled	[CE]  not  a  statement	135	None	replace
472	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_N,  true);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_N,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_N,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_N,    false);    	non-compiled	[CE]  not  a  statement	70	None	replace
473	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  if(p.refs.get(0).node.getLastChild().getString().equals(   "*   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	143	None	replace
474	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  if(p.refs.get(0).node.getLastChild().getString().equals(   "*   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	143	None	replace
475	[BUG]  [BUGGY]  Name  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  parent.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	15	None	replace
476	[BUG]  [BUGGY]  int  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	32	None	replace
477	[BUG]  [BUGGY]  int  numStubs  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	32	None	replace
478	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NOT_IMPLEMENTED,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NOT_IMPLEMENTED,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NOT_IMPLEMENTED,  true);	  NameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	81	None	replace
479	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	90	None	replace
480	[BUG]  [BUGGY]  numStubs  =  names.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  names.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  names.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	80	None	replace
481	[BUG]  [BUGGY]  Name  p  =  this.nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  this.nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  this.nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	101	None	replace
482	[BUG]  [BUGGY]  Name  p  =  names.getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  names.getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  names.getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	101	None	replace
483	[BUG]  [BUGGY]  Node  addAfter  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  addAfter  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    addAfter    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	118	None	replace
484	[BUG]  [BUGGY]  Node  addAfter  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  addAfter  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    addAfter    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	118	None	replace
485	[BUG]  [BUGGY]  numStubs  =  nameNode.getFirstChild().getString();  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.getFirstChild().getString();  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getFirstChild().getString();  compiler.reportCodeChange();	  numStubs    =    nameNode.getLastChild().getString();    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	87	None	replace
486	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	52	None	replace
487	[BUG]  [BUGGY]  int  numStubs  =  nameNode.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	52	None	replace
488	[BUG]  [BUGGY]  int  numStubs  =  names.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  names.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  names.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	52	None	replace
489	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	14	None	replace
490	[BUG]  [BUGGY]  Node  p  =  names.refs.getFirstChild();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  names.refs.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  names.refs.getFirstChild();	  Node    p    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	94	None	replace
491	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals(nameNode.getString()))  {  numStubs++;  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals(nameNode.getString()))  {  numStubs++;  compiler.reportCodeChange();  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals(nameNode.getString()))  {  numStubs++;  compiler.reportCodeChange();  }	  numStubs++;    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	51	None	replace
492	[BUG]  [BUGGY]  compiler.report(JSError.make(UNKNOWN_SYNTHETIC_ERROR,  n),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(UNKNOWN_SYNTHETIC_ERROR,  n),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(UNKNOWN_SYNTHETIC_ERROR,  n),  NAMESPACE_REDEFINED_WARNING);	  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,    n),    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	27	None	replace
493	[BUG]  [BUGGY]  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  p.node),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  p.node),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  p.node),  NAMESPACE_REDEFINED_WARNING);	  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,    n),    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	27	None	replace
494	[BUG]  [BUGGY]  Node  p  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	20	None	replace
495	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.parent);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.parent);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  p.parent);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true,    parent);    	non-compiled	[CE]  not  a  statement	10	None	replace
496	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.refs.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.getLastChild().getString();	  numStubs    =    p.refs.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	38	None	replace
497	[BUG]  [BUGGY]  Name  p  =  nameNode.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	13	None	replace
498	[BUG]  [BUGGY]  Name  p  =  nameNode.get(i).refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.get(i).refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.get(i).refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	13	None	replace
499	[BUG]  [BUGGY]  Name  p  =  names.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  names.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  names.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	13	None	replace
500	[BUG]  [BUGGY]  numStubs  =  names.getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  names.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  names.getLastChild().getString();	  numStubs    =    parent.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	91	None	replace
501	[BUG]  [BUGGY]  numStubs  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	123	None	replace
502	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	122	None	replace
503	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_$ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    n    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
504	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    n    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
505	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.getFirstChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.refs.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.getFirstChild().getString();	  numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	124	None	replace
506	[BUG]  [BUGGY]  Node  p  =  node.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  node.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  node.refs.get(0).node.getLastChild().getString();	  Node    p    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	121	None	replace
507	[BUG]  [BUGGY]  Node  p  =  nameNode.get(p.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.get(p.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.get(p.refs.get(0).node.getLastChild().getString();	  Node    p    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	121	None	replace
508	[BUG]  [BUGGY]  Node  p  =  nameNode.get(p.refs.get(0).node.getLastChild().getString());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  nameNode.get(p.refs.get(0).node.getLastChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  nameNode.get(p.refs.get(0).node.getLastChild().getString());	  Node    p    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	121	None	replace
509	[BUG]  [BUGGY]  numStubs  =  p.refs.get(1).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(1).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(1).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	85	None	replace
510	[BUG]  [BUGGY]  numStubs  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	65	None	replace
511	[BUG]  [BUGGY]  Node  p  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	21	None	replace
512	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
513	[BUG]  [BUGGY]  int  numStubs  =  p.node.getLastChild().getIndexedField(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getLastChild().getIndexedField(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getLastChild().getIndexedField(Node.IS_CONSTANT_NAME);	  int    numStubs++;    	non-compiled	[CE]  not  a  statement	35	None	replace
514	[BUG]  [BUGGY]  int  numStubs  =  parent.numStubs;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  parent.numStubs;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.numStubs;	  int    numStubs++;    	non-compiled	[CE]  not  a  statement	35	None	replace
515	[BUG]  [BUGGY]  parent.putProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  parent.putProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	parent.putProp(Node.IS_CONSTANT_NAME,  false);	  parent.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	11	None	replace
516	[BUG]  [BUGGY]  parent.replaceChild(n,  Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  parent.replaceChild(n,  Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	parent.replaceChild(n,  Node.IS_CONSTANT_NAME,  true);	  parent.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	11	None	replace
517	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getName();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getName();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getName();	  Name    node    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
518	[BUG]  [BUGGY]  Name  node  =  p.refs.get(node.getLastChild().getString());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(node.getLastChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(node.getLastChild().getString());	  Name    node    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
519	[BUG]  [BUGGY]  Name  node  =  p.refs.get(p.node.getLastChild().getString());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(p.node.getLastChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(p.node.getLastChild().getString());	  Name    node    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
520	[BUG]  [BUGGY]  Name  node  =  nameNode.get(p.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  nameNode.get(p.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  nameNode.get(p.refs.get(0).node.getLastChild().getString();	  Name    node    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	50	None	replace
521	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "__   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
522	[BUG]  [BUGGY]  Name  p  =  nameNode.getProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getProp(Node.IS_CONSTANT_NAME,  true);	  nameNode.putProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	9	None	replace
523	[BUG]  [BUGGY]  Name  p  =  names.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  names.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  names.getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	97	None	replace
524	[BUG]  [BUGGY]  NameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	44	None	replace
525	[BUG]  [BUGGY]  NameNode.putProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putProp(Node.IS_CONSTANT_NAME,  false);	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	44	None	replace
526	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	55	None	replace
527	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	55	None	replace
528	[BUG]  [BUGGY]  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	55	None	replace
529	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  n,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  n,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  parent,  n,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	131	None	replace
530	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  nameNode,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  nameNode,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  nameNode,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	28	None	replace
531	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  UNSAFE_NAMESPACE_WARNING,  alias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  n,  UNSAFE_NAMESPACE_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  UNSAFE_NAMESPACE_WARNING,  alias));	  compiler.report(JSError.make(sourceName,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	89	None	replace
532	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  n,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(sourceName,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	89	None	replace
533	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    node    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
534	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    node    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
535	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Name    node    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
536	[BUG]  [BUGGY]  numStubs  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  names.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	61	None	replace
537	[BUG]  [BUGGY]  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	61	None	replace
538	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	139	None	replace
539	[BUG]  [BUGGY]  numStubs  +=  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	139	None	replace
540	[BUG]  [BUGGY]  Name  p  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	43	None	replace
541	[BUG]  [BUGGY]  Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	43	None	replace
542	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	18	None	replace
543	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(i).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	18	None	replace
544	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	82	None	replace
545	[BUG]  [BUGGY]  nameNode.putShortProp(Node.IS_CONSTANT_N,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putShortProp(Node.IS_CONSTANT_N,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putShortProp(Node.IS_CONSTANT_N,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_N,    true);    	non-compiled	[CE]  not  a  statement	68	None	replace
546	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    numStubs++;    	non-compiled	[CE]  not  a  statement	1	None	replace
547	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true    	non-compiled	[CE]  not  a  statement	104	None	replace
548	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true    	non-compiled	[CE]  not  a  statement	104	None	replace
549	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true    	non-compiled	[CE]  not  a  statement	104	None	replace
550	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString()  +  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getString()  +  1;	  int    numStubs    =    p.refs.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	71	None	replace
551	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( ".__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( ".__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( ".__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "__   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	110	None	replace
552	[BUG]  [BUGGY]  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  names.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	67	None	replace
553	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getIndex();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getIndex();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getIndex();	  int    numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	69	None	replace
554	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  alias,  propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  alias,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  alias,  propAlias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	26	None	replace
555	[BUG]  [BUGGY]  numStubs  =  p.nameNode.getFirstChild().getString();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.nameNode.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.nameNode.getFirstChild().getString();	  numStubs    =    nameNode.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	40	None	replace
556	[BUG]  [BUGGY]  Node  p  =  p.node.getLastChild();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  p.node.getLastChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  p.node.getLastChild();	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	126	None	replace
557	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.refs.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.getFirstChild().getLastChild().getString();	  numStubs    =    p.refs.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	6	None	replace
558	[BUG]  [BUGGY]  numStubs  =  parent.refs.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  parent.refs.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.refs.getFirstChild().getLastChild().getString();	  numStubs    =    p.refs.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	6	None	replace
559	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));    	non-compiled	[CE]  not  a  statement	99	None	replace
560	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));    	non-compiled	[CE]  not  a  statement	99	None	replace
561	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getName();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getName();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getName();	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	48	None	replace
562	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(node.getLastChild().getString());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(node.getLastChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(node.getLastChild().getString());	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	48	None	replace
563	[BUG]  [BUGGY]  numStubs  =  p.node.getLastChild().getString()  +  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getLastChild().getString()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getLastChild().getString()  +  1;	  numStubs    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	37	None	replace
564	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	41	None	replace
565	[BUG]  [BUGGY]  numStubs  +=  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	140	None	replace
566	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	140	None	replace
567	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  numStubs  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  numStubs  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  numStubs	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	113	None	replace
568	[BUG]  [BUGGY]  int  numStubs  =  node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
569	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getFirstChild().getIndex(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getFirstChild().getIndex(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getFirstChild().getIndex(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
570	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  parent,  alias));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  parent,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  parent,  alias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	24	None	replace
571	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  UNSAFE_NAMESPACE_WARNING,  alias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  UNSAFE_NAMESPACE_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  UNSAFE_NAMESPACE_WARNING,  alias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	24	None	replace
572	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	96	None	replace
573	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_NAMESPACE_WARNING));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_NAMESPACE_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  UNSAFE_NAMESPACE_WARNING));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	88	None	replace
574	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  UNSAFE_THIS));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	88	None	replace
575	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    numStubs++;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
576	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getLastChild().getString().equals( " "))  {  numStubs++;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getLastChild().getString().equals( " "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getLastChild().getString().equals( " "))  {  numStubs++;	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
577	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "- "))  {  numStubs++;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "- "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( "- "))  {  numStubs++;	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
578	[BUG]  [BUGGY]  numStubs  =  names.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  names.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  names.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	78	None	replace
579	[BUG]  [BUGGY]  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	120	None	replace
580	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT))  {  addAfter.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT))  {  addAfter.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT))  {  addAfter.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	120	None	replace
581	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	114	None	replace
582	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	114	None	replace
583	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getName();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getName();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getFirstChild().getName();	  Name    nameNode    =    p.refs.get(0).node.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	93	None	replace
584	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_N  +  numStubs  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_N  +  numStubs  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_N  +  numStubs	  nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	12	None	replace
585	[BUG]  [BUGGY]  Name  p  =  nameNode.getShortProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  nameNode.getShortProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getShortProp(Node.IS_CONSTANT_NAME,  false);	  nameNode.putShortProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	47	None	replace
586	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  numStubs,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  numStubs,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  parent,  numStubs,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	132	None	replace
587	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  p.node,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  p.node,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  p.node,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	132	None	replace
588	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  alias,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  parent,  alias,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  parent,  alias,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	132	None	replace
589	[BUG]  [BUGGY]  Name  p  =  n.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	17	None	replace
590	[BUG]  [BUGGY]  Name  n  =  nameNode.get(p.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  nameNode.get(p.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  nameNode.get(p.refs.get(0).node.getLastChild().getString();	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
591	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getName();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getName();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getName();	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
592	[BUG]  [BUGGY]  Name  n  =  p.refs.get(parent.node.getLastChild().getString());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(parent.node.getLastChild().getString());  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(parent.node.getLastChild().getString());	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
593	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	106	None	replace
594	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	106	None	replace
595	[BUG]  [BUGGY]  numStubs  =  names.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  names.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  names.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	79	None	replace
596	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  propAlias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  alias,  propAlias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	25	None	replace
597	[BUG]  [BUGGY]  Node  p  =  node.node.getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  node.node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  node.node.getLastChild().getString();	  Node    p    =    p.node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	72	None	replace
598	[BUG]  [BUGGY]  compiler.report(JSError.make(numStubs,  parent,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(numStubs,  parent,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(numStubs,  parent,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(n,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	29	None	replace
599	[BUG]  [BUGGY]  compiler.report(JSError.make(NameNode.UNDEFINED_WARNING,  n,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(NameNode.UNDEFINED_WARNING,  n,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(NameNode.UNDEFINED_WARNING,  n,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(n,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	29	None	replace
600	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  n,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(n,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	29	None	replace
601	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)    	non-compiled	[CE]  not  a  statement	98	None	replace
602	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)    	non-compiled	[CE]  not  a  statement	98	None	replace
603	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true)  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true)  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true)	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)    	non-compiled	[CE]  not  a  statement	98	None	replace
604	[BUG]  [BUGGY]  int  numStubs  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	34	None	replace
605	[BUG]  [BUGGY]  int  numStubs  =.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	34	None	replace
606	[BUG]  [BUGGY]  parent.putProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  parent.putProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	parent.putProp(Node.IS_CONSTANT_NAME,  true);	  parent.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	46	None	replace
607	[BUG]  [BUGGY]  Name  node  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
608	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
609	[BUG]  [BUGGY]  Name  node  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
610	[BUG]  [BUGGY]  Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT	  Name    p    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	42	None	replace
611	[BUG]  [BUGGY]  numStubs  =  names.getFirstChild().getLastChild().getString()  +  1;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  names.getFirstChild().getLastChild().getString()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  names.getFirstChild().getLastChild().getString()  +  1;	  numStubs    =    names.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	103	None	replace
612	[BUG]  [BUGGY]  numStubs  =  nameNode.childNode.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  nameNode.childNode.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.childNode.getFirstChild().getLastChild().getString();	  numStubs    =    p.childNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	102	None	replace
613	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_COMPARATOR,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_COMPARATOR,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_COMPARATOR,  true);	  NameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	81	None	replace
614	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_LAYER,  true);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_LAYER,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_LAYER,  true);	  NameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	81	None	replace
615	[BUG]  [BUGGY]  int  numStubs  =  p.node.getFirstChild().getIndexOf( "numStubs ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getFirstChild().getIndexOf( "numStubs ");  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getFirstChild().getIndexOf( "numStubs ");	  int    numStubs++;    	non-compiled	[CE]  not  a  statement	35	None	replace
616	[BUG]  [BUGGY]  int  numStubs  =  p.refs.size();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.size();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.size();	  int    numStubs++;    	non-compiled	[CE]  not  a  statement	35	None	replace
617	[BUG]  [BUGGY]  int  numStubs  =  p.node.getFirstChild().getIndexOf(alias);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getFirstChild().getIndexOf(alias);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getFirstChild().getIndexOf(alias);	  int    numStubs++;    	non-compiled	[CE]  not  a  statement	35	None	replace
618	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getLastChild().getString()  +  1;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().getLastChild().getString()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getLastChild().getString()  +  1;	  numStubs    =    p.refs.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	6	None	replace
619	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONST  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONST  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONST	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	130	None	replace
620	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	78	None	replace
621	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	138	None	replace
622	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  }	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT    	non-compiled	[CE]  not  a  statement	138	None	replace
623	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  int    numStubs    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	53	None	replace
624	[BUG]  [BUGGY]  int  numStubs  =  names.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  names.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  names.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	53	None	replace
625	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  compiler.reportCodeChange();  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  compiler.reportCodeChange();  }	  numStubs++;    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	51	None	replace
626	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  compiler.reportCodeChange();  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  compiler.reportCodeChange();  }	  numStubs++;    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	51	None	replace
627	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  compiler.reportCodeChange();  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  compiler.reportCodeChange();  }	  numStubs++;    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	51	None	replace
628	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( "- "))  {  numStubs++;  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( "- "))  {  numStubs++;  compiler.reportCodeChange();  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals( "- "))  {  numStubs++;  compiler.reportCodeChange();  }	  numStubs++;    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	51	None	replace
629	[BUG]  [BUGGY]  numStubs  =  n.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  n.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	80	None	replace
630	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  alias,  true);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  alias,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  alias,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	113	None	replace
631	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  1  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  1  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  1	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	113	None	replace
632	[BUG]  [BUGGY]  NameNode.putProp(Node.IS_CONSTANT_NAME,  n);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putProp(Node.IS_CONSTANT_NAME,  n);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putProp(Node.IS_CONSTANT_NAME,  n);	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	44	None	replace
633	[BUG]  [BUGGY]  int  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	34	None	replace
634	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "-   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	129	None	replace
635	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "-   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	129	None	replace
636	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "-   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	129	None	replace
637	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "-   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	129	None	replace
638	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "-   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	129	None	replace
639	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    n    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
640	[BUG]  [BUGGY]  Name  n  =  p.refs.get(1).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(1).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(1).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    n    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
641	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	126	None	replace
642	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	126	None	replace
643	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	126	None	replace
644	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	126	None	replace
645	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	126	None	replace
646	[BUG]  [BUGGY]  Node  nameNode  =  newVar.refs.getFirstChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  newVar.refs.getFirstChild();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  newVar.refs.getFirstChild();	  Node    nameNode    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	107	None	replace
647	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getFirstChild()  +  1;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.getFirstChild()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getFirstChild()  +  1;	  Node    nameNode    =    p.refs.getFirstChild();    	non-compiled	[CE]  not  a  statement	107	None	replace
648	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	14	None	replace
649	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.    	non-compiled	[CE]  not  a  statement	134	None	replace
650	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.	  int    numStubs    =    p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.    	non-compiled	[CE]  not  a  statement	134	None	replace
651	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getValue();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getValue();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getValue();	  int    numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	69	None	replace
652	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getName();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getName();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getName();	  int    numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	69	None	replace
653	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString()  +  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString()  +  1;	  int    numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	69	None	replace
654	[BUG]  [BUGGY]  numStubs  =  p.defs.getFirstChild().getLastChild().getString()  +  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.defs.getFirstChild().getLastChild().getString()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.defs.getFirstChild().getLastChild().getString()  +  1;	  numStubs    =    p.defs.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	108	None	replace
655	[BUG]  [BUGGY]  numStubs  =  n.defs.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  n.defs.getFirstChild().getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.defs.getFirstChild().getLastChild().getString();	  numStubs    =    p.defs.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	108	None	replace
656	[BUG]  [BUGGY]  numStubs  =  names.getFirstChild().node.getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  names.getFirstChild().node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  names.getFirstChild().node.getLastChild().getString();	  numStubs    =    names.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	103	None	replace
657	[BUG]  [BUGGY]  numStubs  =  p.refs.get(1.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(1.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(1.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	59	None	replace
658	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	140	None	replace
659	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getQualifiedName();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getQualifiedName();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getFirstChild().getQualifiedName();	  Name    nameNode    =    p.refs.get(0).node.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	93	None	replace
660	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getValue();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getValue();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getFirstChild().getValue();	  Name    nameNode    =    p.refs.get(0).node.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	93	None	replace
661	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  addAfter.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  addAfter.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  addAfter.putBooleanProp(Node.IS_CONSTANT	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	22	None	replace
662	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	64	None	replace
663	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false,  n);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false,  n);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false,  n);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true,    parent);    	non-compiled	[CE]  not  a  statement	10	None	replace
664	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false,  addAfter);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false,  addAfter);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false,  addAfter);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true,    parent);    	non-compiled	[CE]  not  a  statement	10	None	replace
665	[BUG]  [BUGGY]  Name  p  =  n.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	17	None	replace
666	[BUG]  [BUGGY]  Name  p  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	17	None	replace
667	[BUG]  [BUGGY]  node.putProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  node.putProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	node.putProp(Node.IS_CONSTANT_NAME,  false);	  node.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	112	None	replace
668	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  parent));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  parent));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  parent));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	90	None	replace
669	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  nameMap));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  nameMap));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  alias,  NAMESPACE_REDEFINED_WARNING,  nameMap));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	90	None	replace
670	[BUG]  [BUGGY]  Name  p  =  n.getBooleanProp(Node.IS_CONSTANT_N);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.getBooleanProp(Node.IS_CONSTANT_N);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.getBooleanProp(Node.IS_CONSTANT_N);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_N);    	non-compiled	[CE]  not  a  statement	100	None	replace
671	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  numStubs,  UNSAFE_THIS,  alias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  numStubs,  UNSAFE_THIS,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  numStubs,  UNSAFE_THIS,  alias));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	132	None	replace
672	[BUG]  [BUGGY]  compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING,  parent));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING,  parent));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(alias,  numStubs,  NAMESPACE_REDEFINED_WARNING,  parent));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING,    alias));    	non-compiled	[CE]  not  a  statement	132	None	replace
673	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	25	None	replace
674	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().node.getFirstChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().node.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().node.getFirstChild().getString();	  numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	124	None	replace
675	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getNext();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().getNext();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getNext();	  numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	124	None	replace
676	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getValue();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getFirstChild().getValue();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getValue();	  numStubs    =    p.refs.getFirstChild().getString();    	non-compiled	[CE]  not  a  statement	124	None	replace
677	[BUG]  [BUGGY]  int  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	31	None	replace
678	[BUG]  [BUGGY]  numStubs  =  n.getFirstChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  n.getFirstChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.getFirstChild().getString();	  numStubs    =    n.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	125	None	replace
679	[BUG]  [BUGGY]  numStubs  =  p.firstChild.getLastChild().getString();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.firstChild.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.firstChild.getLastChild().getString();	  numStubs    =    parent.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	8	None	replace
680	[BUG]  [BUGGY]  Name  p  =  n.getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	101	None	replace
681	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	57	None	replace
682	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	57	None	replace
683	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	139	None	replace
684	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME	  numStubs    +=    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	139	None	replace
685	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  parent,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(n,  parent,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  parent,  NAMESPACE_REDEFINED_WARNING));	  compiler.report(JSError.make(n,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	29	None	replace
686	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));    	non-compiled	[CE]  not  a  statement	99	None	replace
687	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
688	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Name    n    =    p.refs.get(0).node.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	49	None	replace
689	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
690	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "_ "))  {  numStubs++;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "_ "))  {  numStubs++;  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( "_ "))  {  numStubs++;  }	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
691	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "* "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "* "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( "* "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
692	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( " "))  {  numStubs++;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( " "))  {  numStubs++;  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( " "))  {  numStubs++;  }	  int    numStubs    =    p.refs.getFirstChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	137	None	replace
693	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp	  if(p.refs.get(0).node.getLastChild().getString().equals(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	127	None	replace
694	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "__ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "__ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( "__ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp	  if(p.refs.get(0).node.getLastChild().getString().equals(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	127	None	replace
695	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "__ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( "__ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( "__ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getLastChild().getString().equals(   "_   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	127	None	replace
696	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "._ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  Name    node    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
697	[BUG]  [BUGGY]  numStubs  =  p.parent.getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.parent.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.parent.getLastChild().getString();	  numStubs    =    parent.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	91	None	replace
698	[BUG]  [BUGGY]  compiler.report(JSError.make(UNKNOWN_SYNCHRONIZED_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(UNKNOWN_SYNCHRONIZED_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(UNKNOWN_SYNCHRONIZED_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);	  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,    n),    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	27	None	replace
699	[BUG]  [BUGGY]  Name  p  =  p.node.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  p.node.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  p.node.getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	97	None	replace
700	[BUG]  [BUGGY]  Name  p  =  n.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Name    p    =    nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	97	None	replace
701	[BUG]  [BUGGY]  Node  addAfter  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  addAfter  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  Node    addAfter    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	118	None	replace
702	[BUG]  [BUGGY]  numStubs  =  p.childNode.getFirstChild().node.getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.childNode.getFirstChild().node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.childNode.getFirstChild().node.getLastChild().getString();	  numStubs    =    p.childNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	102	None	replace
703	[BUG]  [BUGGY]  numStubs  =  p.childNode.getFirstChild().getLastChild().getString()  +  1;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.childNode.getFirstChild().getLastChild().getString()  +  1;  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.childNode.getFirstChild().getLastChild().getString()  +  1;	  numStubs    =    p.childNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	102	None	replace
704	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  compiler.reportCodeChange();	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	55	None	replace
705	[BUG]  [BUGGY]  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	55	None	replace
706	[BUG]  [BUGGY]  Node  p  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  p  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  parent.node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Node    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	20	None	replace
707	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getFirstChild().getProp(Node.IS_CONSTANT_NAME);	  Node    nameNode    =    p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	21	None	replace
708	[BUG]  [BUGGY]  Name  p  =  n.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  p  =  n.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  n.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  Name    p    =    p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	43	None	replace
709	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	96	None	replace
710	[BUG]  [BUGGY]  Node  addAfter  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  addAfter  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	122	None	replace
711	[BUG]  [BUGGY]  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	122	None	replace
712	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameNode.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  int    numStubs    =    parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	32	None	replace
713	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  alias,  true);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  alias,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NAME  +  alias,  true);	  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME    	non-compiled	[CE]  not  a  statement	95	None	replace
714	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  DEFAULT_NAMESPACE_WARNING,  alias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(sourceName,  n,  DEFAULT_NAMESPACE_WARNING,  alias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  DEFAULT_NAMESPACE_WARNING,  alias));	  compiler.report(JSError.make(sourceName,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	89	None	replace
715	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  NameNode    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	82	None	replace
716	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  int  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  int    numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	52	None	replace
717	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_COMPARATOR,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_COMPARATOR,  true);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_COMPARATOR,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	41	None	replace
718	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( ".name "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( ".name "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( ".name "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  Name    nameNode    =    p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true    	non-compiled	[CE]  not  a  statement	104	None	replace
719	[BUG]  [BUGGY]  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true));	  numStubs    =    p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	86	None	replace
720	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  UNSAFE_NAMESPACE_WARNING,  numStubs));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  UNSAFE_NAMESPACE_WARNING,  numStubs));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  UNSAFE_NAMESPACE_WARNING,  numStubs));	  compiler.report(JSError.make(nameNode,    numStubs,    NAMESPACE_REDEFINED_WARNING));    	non-compiled	[CE]  not  a  statement	28	None	replace
721	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	18	None	replace
722	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getString();  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.node.getFirstChild().getString();  compiler.reportCodeChange();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getString();  compiler.reportCodeChange();	  numStubs    =    nameNode.getLastChild().getString();    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	87	None	replace
723	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  compiler.report(JSError.make(nameNode,  n,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  parent,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.report(JSError.make(nameNode,    n,    NAMESPACE_REDEFINED_WARNING,    propAlias));    	non-compiled	[CE]  not  a  statement	26	None	replace
724	[BUG]  [BUGGY]  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_	  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	119	None	replace
725	[BUG]  [BUGGY]  Name  node  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
726	[BUG]  [BUGGY]  Name  node  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Name  node  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  Name    node    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	115	None	replace
727	[BUG]  [BUGGY]  numStubs  =  p.refs.getLastChild().node.getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.getLastChild().node.getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getLastChild().node.getString();	  numStubs    =    p.refs.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	38	None	replace
728	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getString();  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getString();	  numStubs    =    p.refs.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	38	None	replace
729	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]      }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  Node    nameNode    =    p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	106	None	replace
