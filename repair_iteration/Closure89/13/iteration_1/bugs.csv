bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  n,  parent,  originalName);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  n,  parent,  originalName);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  n,  parent,  originalName);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
2	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  n,  alias,  originalName);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  n,  alias,  originalName);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  n,  alias,  originalName);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
3	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  n,  parent,  originalName);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  n,  parent,  originalName);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  n,  parent,  originalName);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
4	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getReferenceName(),  alias,  n,  originalName);  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getReferenceName(),  alias,  n,  originalName);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getReferenceName(),  alias,  n,  originalName);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
5	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  parent,  originalName);  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  parent,  originalName);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  parent,  originalName);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
6	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getReferenceName(),  n,  alias,  originalName);  [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getReferenceName(),  n,  alias,  originalName);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getReferenceName(),  n,  alias,  originalName);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
7	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getReturnConvention(),  alias,  n,  originalName);  [CE]  not  a  statement  [FE]                AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getReturnConvention(),  alias,  n,  originalName);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getReturnConvention(),  alias,  n,  originalName);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
8	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]                  AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]    [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	  	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
9	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  n,  originalName);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  n,  originalName);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  n,  originalName);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
10	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  n,  parent);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  n,  parent);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  n,  parent);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
11	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getDeclaringConvention(),  alias,  n,  originalName);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getDeclaringConvention(),  alias,  n,  originalName);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getDeclaringConvention(),  alias,  n,  originalName);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
12	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  n,  originalName,  parent);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  n,  originalName,  parent);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getCodingConvention(),  alias,  n,  originalName,  parent);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
13	[BUG]  [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getQualifiedName(),  alias,  n,  originalName);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  private  void  flattenNameRef(String  alias,  Node  n,  Node  parent,  String  originalName)  {          [BUGGY]  Node  ref  =  NodeUtil.newName(compiler.getQualifiedName(),  alias,  n,  originalName);  [BUGGY]  compiler.getCodingConvention(),  alias,  n,  originalName);  NodeUtil.copyNameAnnotations(n.getLastChild(),  ref);  parent.replaceChild(n,  ref);  compiler.reportCodeChange();  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenNameRef  [RETURN_TYPE]  void  String  alias  Node  n  Node  parent  String  originalName  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.24712082528608617	426	427	8	replace	Node  ref  =  NodeUtil.newName(compiler.getQualifiedName(),  alias,  n,  originalName);	Node  ref  =  NodeUtil.newName(  compiler.getCodingConvention(),  alias,  n,  originalName);  	non-compiled	[CE]  not  a  statement	26	None	replace
