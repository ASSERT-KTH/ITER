bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (n.refs!=  null  ||  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs!=  null  ||  n.fullName().equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||  n.fullName().equals(alias))  {	  if    (n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
2	[BUG]  [BUGGY]  if  (n.refs  ==  null  &&  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs  ==  null  &&  n.fullName().equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  &&  n.fullName().equals(alias))  {	  if    (n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
3	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.fullName().startsWith(alias))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs!=  null  &&  n.fullName().startsWith(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.fullName().startsWith(alias))  {	  if    (n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
4	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.name().equals(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs!=  null  &&  n.name().equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.name().equals(alias))  {	  if    (n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
5	[BUG]  [BUGGY]  if  (n.refs  ==  null  &&!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs  ==  null  &&!n.fullName().equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  &&!n.fullName().equals(alias))  {	  if    (n.refs!=    null    ||!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
6	[BUG]  [BUGGY]  if  (n.refs  ==  null  ||!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs  ==  null  ||!n.fullName().equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  ||!n.fullName().equals(alias))  {	  if    (n.refs!=    null    ||!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
7	[BUG]  [BUGGY]  if  (n.refs  ==  null  ||!n.refs.equals(alias))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs  ==  null  ||!n.refs.equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  ||!n.refs.equals(alias))  {	  if    (n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	2	None	replace
8	[BUG]  [BUGGY]  if  (n.refs  ==  null  ||!n.refs.isEmpty())  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs  ==  null  ||!n.refs.isEmpty())  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  ||!n.refs.isEmpty())  {	  if    (n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	2	None	replace
9	[BUG]  [BUGGY]  if  (n.refs!=  null  &&!n.refs.isEmpty())  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs!=  null  &&!n.refs.isEmpty())  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&!n.refs.isEmpty())  {	  if    (n.refs!=    null    ||!n.refs.isEmpty())    {    	non-compiled	[CE]  not  a  statement	5	None	replace
10	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()  >  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.fullName().length()  >  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
11	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.fullName().length()  >=  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.fullName().length()  >=  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.fullName().length()  >=  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
12	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  &&  n.fullName().length()  >  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.fullName().length()  >  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
13	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.fullName().length()  <=  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.fullName().length()  <=  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.fullName().length()  <=  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
14	[BUG]  [BUGGY]  if(n!=  null  &&!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n!=  null  &&!n.fullName().equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&!n.fullName().equals(alias))  {	  if(n.refs!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
15	[BUG]  [BUGGY]  if(alias!=  null  &&!n.fullName().equals(n.refs))  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(alias!=  null  &&!n.fullName().equals(n.refs))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&!n.fullName().equals(n.refs))  {	  if(n.refs!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
16	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()  ==  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.fullName().length()  ==  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
17	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.refs.length()  ==  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.refs.length()  ==  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
18	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.fullName().length()  ==  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
19	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  ||  n.fullName().length()  ==  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.fullName().length()  ==  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
20	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name().length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.name().length()  ==  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name().length()  ==  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
21	[BUG]  [BUGGY]  if  (n.refs!=  null  ||  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs!=  null  ||  n.refs.length()  >  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||  n.refs.length()  >  0)  {	  if    (n.refs!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
22	[BUG]  [BUGGY]  if  (n.refs  ==  null  &&  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs  ==  null  &&  n.refs.length()  >  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  &&  n.refs.length()  >  0)  {	  if    (n.refs!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
23	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.refs.length()  >=  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs!=  null  &&  n.refs.length()  >=  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.refs.length()  >=  0)  {	  if    (n.refs!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
24	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs.fullName()!=  null)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  ||  n.refs.fullName()!=  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs.fullName()!=  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
25	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.fullName()!=  null)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  &&  n.fullName()!=  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.fullName()!=  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
26	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs.length!=  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  ||  n.refs.length!=  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs.length!=  0)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
27	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.fullName()!=  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  ||  n.fullName()!=  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.fullName()!=  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
28	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs!=  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  ||  n.refs!=  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs!=  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
29	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.name()!=  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  ||  n.name()!=  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.name()!=  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
30	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  ||  n.fullName().endsWith(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.fullName().endsWith(alias))  {	  if(n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
31	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  &&  n.fullName().endsWith(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.fullName().endsWith(alias))  {	  if(n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
32	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name().endsWith(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.name().endsWith(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name().endsWith(alias))  {	  if(n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
33	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.fullName().matches(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.fullName().matches(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.fullName().matches(alias))  {	  if(n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
34	[BUG]  [BUGGY]  if  (n.refs!=  null  &&!n.refs.equals(alias))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs!=  null  &&!n.refs.equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&!n.refs.equals(alias))  {	  if    (n.refs!=    null    ||!n.refs.equals(alias))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
35	[BUG]  [BUGGY]  if  (n.refs  ==  null  &&!n.refs.equals(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs  ==  null  &&!n.refs.equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  &&!n.refs.equals(alias))  {	  if    (n.refs!=    null    ||!n.refs.equals(alias))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
36	[BUG]  [BUGGY]  Node  p  =  n.getParent();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Node  p  =  n.getParent();  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getParent();	      	non-compiled	[CE]  not  a  statement	6	None	replace
37	[BUG]  [BUGGY]  Node  p  =  n.getFirstChild();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Node  p  =  n.getFirstChild();  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getFirstChild();	      	non-compiled	[CE]  not  a  statement	6	None	replace
38	[BUG]  [BUGGY]  Name  p  =  n.getName();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Name  p  =  n.getName();  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getName();	      	non-compiled	[CE]  not  a  statement	6	None	replace
39	[BUG]  [BUGGY]  Node  p  =  n.getPosition();  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Node  p  =  n.getPosition();  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getPosition();	      	non-compiled	[CE]  not  a  statement	6	None	replace
40	[BUG]  [BUGGY]  Node  p  =  n.getNext();  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Node  p  =  n.getNext();  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getNext();	      	non-compiled	[CE]  not  a  statement	6	None	replace
41	[BUG]  [BUGGY]  Name  p  =  n.getReferenceName();  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Name  p  =  n.getReferenceName();  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getReferenceName();	      	non-compiled	[CE]  not  a  statement	6	None	replace
42	[BUG]  [BUGGY]  Node  p  =  n.getAncestor(alias);  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Node  p  =  n.getAncestor(alias);  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestor(alias);	      	non-compiled	[CE]  not  a  statement	6	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);	      	non-compiled	[CE]  not  a  statement	6	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  not  a  statement	6	None	replace
45	[BUG]  [BUGGY]  Node  p  =  n.getNode();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Node  p  =  n.getNode();  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getNode();	      	non-compiled	[CE]  not  a  statement	6	None	replace
46	[BUG]  [BUGGY]  Node  p  =  nameMap.get(alias);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Node  p  =  nameMap.get(alias);  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  nameMap.get(alias);	      	non-compiled	[CE]  not  a  statement	6	None	replace
47	[BUG]  [BUGGY]  if  (n!=  null  &&  n.refs!=  null  &&  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n!=  null  &&  n.refs!=  null  &&  n.fullName().equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n!=  null  &&  n.refs!=  null  &&  n.fullName().equals(alias))  {	  if    (n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
48	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(alias  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
49	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(alias!=  null  &&  n.refs.length()  >  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs.length()  >  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
50	[BUG]  [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.fullName().endsWith(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  n.refs!=  null  &&  n.fullName().endsWith(alias))  {	  if(n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
51	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.url().endsWith(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.url().endsWith(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.url().endsWith(alias))  {	  if(n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
52	[BUG]  [BUGGY]  if  (n.refs!=  null  ||!NodeUtil.isObjectLitKey(n,  alias))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs!=  null  ||!NodeUtil.isObjectLitKey(n,  alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||!NodeUtil.isObjectLitKey(n,  alias))  {	  if    (n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	2	None	replace
53	[BUG]  [BUGGY]  if  (n.refs!=  null  ||  alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs!=  null  ||  alias.length()  ==  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||  alias.length()  ==  0)  {	  if    (n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	2	None	replace
54	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
55	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(alias  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
56	[BUG]  [BUGGY]  if  (n.references!=  null  ||!n.references.isEmpty())  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.references!=  null  ||!n.references.isEmpty())  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references!=  null  ||!n.references.isEmpty())  {	  if    (n.refs!=    null    ||!n.refs.isEmpty())    {    	non-compiled	[CE]  not  a  statement	5	None	replace
57	[BUG]  [BUGGY]  if  (n.references!=  null  &&  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.references!=  null  &&  n.refs.length()  >  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references!=  null  &&  n.refs.length()  >  0)  {	  if    (n.refs!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
58	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs  ==  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
59	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.fullName()  ==  null)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  ||  n.fullName()  ==  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.fullName()  ==  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
60	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.alias()!=  null)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs  ==  null  ||  n.alias()!=  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.alias()!=  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
61	[BUG]  [BUGGY]  if(alias!=  null  ||  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(alias!=  null  ||  n.refs  ==  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  ||  n.refs  ==  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
62	[BUG]  [BUGGY]  if(alias!=  null  &&!n.fullName().equals(n.fullName()))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(alias!=  null  &&!n.fullName().equals(n.fullName()))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&!n.fullName().equals(n.fullName()))  {	  if(n.refs!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
63	[BUG]  [BUGGY]  Node  r  =  n.getFirstChild();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Node  r  =  n.getFirstChild();  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.getFirstChild();	      	non-compiled	[CE]  not  a  statement	6	None	replace
64	[BUG]  [BUGGY]  Node  rParent  =  n.getParent();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Node  rParent  =  n.getParent();  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.getParent();	      	non-compiled	[CE]  not  a  statement	6	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME);	      	non-compiled	[CE]  not  a  statement	6	None	replace
66	[BUG]  [BUGGY]  Node  r  =  n.getParent();  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  Node  r  =  n.getParent();  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.getParent();	      	non-compiled	[CE]  not  a  statement	6	None	replace
67	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.refs.length  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if  (n.refs!=  null  &&  n.refs.length  >  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.refs.length  >  0)  {	  if    (n.refs!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
68	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name().length()  >  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.name().length()  >  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name().length()  >  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
69	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.refs.length  ==  0)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.refs.length  ==  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.refs.length  ==  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
70	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.alias.length()  ==  0)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias.length()  ==  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
71	[BUG]  [BUGGY]  if(n.refs!=  null  &&!n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&!n.fullName().endsWith(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&!n.fullName().endsWith(alias))  {	  if(n.refs!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
72	[BUG]  [BUGGY]  if(n.refs!=  null  &&!n.rootName().equals(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&!n.rootName().equals(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&!n.rootName().equals(alias))  {	  if(n.refs!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
73	[BUG]  [BUGGY]  if(n.refs!=  null  &&!n.fullName().startsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&!n.fullName().startsWith(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&!n.fullName().startsWith(alias))  {	  if(n.refs!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
74	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias().endsWith(alias))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.alias().endsWith(alias))  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias().endsWith(alias))  {	  if(n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
75	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.fullName()!=  null)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  &&  n.fullName()!=  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.fullName()!=  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
76	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.fullName()  ==  null)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(n.refs!=  null  ||  n.fullName()  ==  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.fullName()  ==  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
77	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs!=  null)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    private  void  flattenReferencesTo(Name  n,  String  alias)  {    [BUGGY]  if(alias  ==  null  ||  n.refs!=  null)  {  [BUGGY]    String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs!=  null)  {	  if(n.refs    ==    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
