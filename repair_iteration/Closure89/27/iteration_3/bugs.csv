bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  p  =  nameMap.get(alias,  n);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  nameMap.get(alias,  n);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  nameMap.get(alias,  n);	  Node    p    =    nameMap.get(alias);    	non-compiled	[CE]  not  a  statement	46	None	replace
2	[BUG]  [BUGGY]  Node  p  =  nameMap.get(n);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  nameMap.get(n);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  nameMap.get(n);	  Node    p    =    nameMap.get(alias);    	non-compiled	[CE]  not  a  statement	46	None	replace
3	[BUG]  [BUGGY]  Node  p  =  nameMap.get(alias  +  1);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  nameMap.get(alias  +  1);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  nameMap.get(alias  +  1);	  Node    p    =    nameMap.get(alias);    	non-compiled	[CE]  not  a  statement	46	None	replace
4	[BUG]  [BUGGY]  Node  p  =  nameMap.get(n,  alias);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  nameMap.get(n,  alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  nameMap.get(n,  alias);	  Node    p    =    nameMap.get(alias);    	non-compiled	[CE]  not  a  statement	46	None	replace
5	[BUG]  [BUGGY]  Node  p  =  names.get(alias);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  names.get(alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  names.get(alias);	  Node    p    =    nameMap.get(alias);    	non-compiled	[CE]  not  a  statement	46	None	replace
6	[BUG]  [BUGGY]  Node  p  =  this.nameMap.get(alias);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  this.nameMap.get(alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  this.nameMap.get(alias);	  Node    p    =    nameMap.get(alias);    	non-compiled	[CE]  not  a  statement	46	None	replace
7	[BUG]  [BUGGY]  if(n!=  null  ||  alias  ==  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  ||  alias  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  ||  alias  ==  null)  {	  if(alias!=    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
8	[BUG]  [BUGGY]  if(n  ==  null  ||  alias  ==  null)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n  ==  null  ||  alias  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n  ==  null  ||  alias  ==  null)  {	  if(alias!=    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
9	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  alias!=  null)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  alias!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  alias!=  null)  {	  if(alias!=    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
10	[BUG]  [BUGGY]  if(n.refs!=  null  ||  alias!=  null)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  alias!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  alias!=  null)  {	  if(alias!=    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
11	[BUG]  [BUGGY]  Node  p  =  n.getAncestor(alias)+  1;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getAncestor(alias)+  1;  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestor(alias)+  1;	  Node    p    =    n.getAncestor(alias);    	non-compiled	[CE]  not  a  statement	42	None	replace
12	[BUG]  [BUGGY]  Node  p  =  node.getAncestor(alias);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  node.getAncestor(alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  node.getAncestor(alias);	  Node    p    =    n.getAncestor(alias);    	non-compiled	[CE]  not  a  statement	42	None	replace
13	[BUG]  [BUGGY]  Node  p  =  n.getAncestor(alias).getParent();  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getAncestor(alias).getParent();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestor(alias).getParent();	  Node    p    =    n.getAncestor(alias);    	non-compiled	[CE]  not  a  statement	42	None	replace
14	[BUG]  [BUGGY]  Node  p  =  n.getAncestorOf(alias);  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getAncestorOf(alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestorOf(alias);	  Node    p    =    n.getAncestor(alias);    	non-compiled	[CE]  not  a  statement	42	None	replace
15	[BUG]  [BUGGY]  Node  p  =  n.getAncestor(alias,  n.refs);  [CE]  not  a  statement  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getAncestor(alias,  n.refs);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestor(alias,  n.refs);	  Node    p    =    n.getAncestor(alias);    	non-compiled	[CE]  not  a  statement	42	None	replace
16	[BUG]  [BUGGY]  Node  p  =  n.getAncestor(alias,  nameMap);  [CE]  not  a  statement  [FE]                                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getAncestor(alias,  nameMap);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestor(alias,  nameMap);	  Node    p    =    n.getAncestor(alias);    	non-compiled	[CE]  not  a  statement	42	None	replace
17	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  alias  ==  null)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  alias  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  alias  ==  null)  {	  if(alias    ==    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	58	None	replace
18	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.references  ==  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.references  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.references  ==  null)  {	  if(alias    ==    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	58	None	replace
19	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.name().length()  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.name().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.name().length()  >  0)  {	  if(n.refs!=    null    &&    n.name().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
20	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name().length()  >=  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.name().length()  >=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name().length()  >=  0)  {	  if(n.refs!=    null    &&    n.name().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
21	[BUG]  [BUGGY]  if(n.name()!=  null  &&  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.name()!=  null  &&  n.refs.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.name()!=  null  &&  n.refs.length()  >  0)  {	  if(n.refs!=    null    &&    n.name().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
22	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name().length()!=  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.name().length()!=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name().length()!=  0)  {	  if(n.refs!=    null    &&    n.name().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
23	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name().length()  <=  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.name().length()  <=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name().length()  <=  0)  {	  if(n.refs!=    null    &&    n.name().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
24	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.fullName().length()!=  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.fullName().length()!=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.fullName().length()!=  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
25	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.refs.length()  ==  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
26	[BUG]  [BUGGY]  if  (n.refs!=  null  &&!NodeUtil.isObjectLitKey(n,  alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  &&!NodeUtil.isObjectLitKey(n,  alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&!NodeUtil.isObjectLitKey(n,  alias))  {	  if    (n.refs!=    null    ||!NodeUtil.isObjectLitKey(n,    alias))    {    	non-compiled	[CE]  not  a  statement	52	None	replace
27	[BUG]  [BUGGY]  if  (n.refs  ==  null  &&!NodeUtil.isObjectLitKey(n,  alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  &&!NodeUtil.isObjectLitKey(n,  alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  &&!NodeUtil.isObjectLitKey(n,  alias))  {	  if    (n.refs!=    null    ||!NodeUtil.isObjectLitKey(n,    alias))    {    	non-compiled	[CE]  not  a  statement	52	None	replace
28	[BUG]  [BUGGY]  if  (n.refs  ==  null  ||!NodeUtil.isObjectLitKey(n,  alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  ||!NodeUtil.isObjectLitKey(n,  alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  ||!NodeUtil.isObjectLitKey(n,  alias))  {	  if    (n.refs!=    null    ||!NodeUtil.isObjectLitKey(n,    alias))    {    	non-compiled	[CE]  not  a  statement	52	None	replace
29	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.fullName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.fullName().endsWith(alias))  {	  if(n.refs    ==    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
30	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.fullName().startsWith(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.fullName().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.fullName().startsWith(alias))  {	  if(n.refs    ==    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
31	[BUG]  [BUGGY]  if  (n.refs!=  null  ||  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  ||  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||  n.refs.length()  ==  0)  {	  if    (n.refs!=    null    ||    alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	53	None	replace
32	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  &&  alias.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  alias.length()  ==  0)  {	  if    (n.refs!=    null    ||    alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	53	None	replace
33	[BUG]  [BUGGY]  if  (n.refs  ==  null  ||  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  ||  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  ||  n.refs.length()  ==  0)  {	  if    (n.refs!=    null    ||    alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	53	None	replace
34	[BUG]  [BUGGY]  if  (n.refs  ==  null  ||  alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  ||  alias.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  ||  alias.length()  ==  0)  {	  if    (n.refs!=    null    ||    alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	53	None	replace
35	[BUG]  [BUGGY]  if  (alias!=  null  ||  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (alias!=  null  ||  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (alias!=  null  ||  n.refs.length()  ==  0)  {	  if    (n.refs!=    null    ||    alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	53	None	replace
36	[BUG]  [BUGGY]  if  (n.refs  ==  null  &&  alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  &&  alias.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  &&  alias.length()  ==  0)  {	  if    (n.refs!=    null    ||    alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	53	None	replace
37	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.refs!=  null  &&  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  &&  n.refs!=  null  &&  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.refs!=  null  &&  n.fullName().equals(alias))  {	  if    (n!=    null    &&    n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	47	None	replace
38	[BUG]  [BUGGY]  if  (n  ==  null  &&  n.refs!=  null  &&  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n  ==  null  &&  n.refs!=  null  &&  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n  ==  null  &&  n.refs!=  null  &&  n.fullName().equals(alias))  {	  if    (n!=    null    &&    n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	47	None	replace
39	[BUG]  [BUGGY]  if  (n!=  null  &&  n.refs  ==  null  &&  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n!=  null  &&  n.refs  ==  null  &&  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n!=  null  &&  n.refs  ==  null  &&  n.fullName().equals(alias))  {	  if    (n!=    null    &&    n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	47	None	replace
40	[BUG]  [BUGGY]  if  (n!=  null  ||  n.refs!=  null  ||  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n!=  null  ||  n.refs!=  null  ||  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n!=  null  ||  n.refs!=  null  ||  n.fullName().equals(alias))  {	  if    (n!=    null    &&    n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	47	None	replace
41	[BUG]  [BUGGY]  if  (n.refs  ==  null  ||  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  ||  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  ||  n.fullName().equals(alias))  {	  if    (n.refs!=    null    ||    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
42	[BUG]  [BUGGY]  if  (n.references!=  null  ||  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references!=  null  ||  n.refs.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references!=  null  ||  n.refs.length()  >  0)  {	  if    (n.references!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	57	None	replace
43	[BUG]  [BUGGY]  if  (n.references!=  null  &&  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references!=  null  &&  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references!=  null  &&  n.refs.length()  ==  0)  {	  if    (n.references!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	57	None	replace
44	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.references.length()  >  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  &&  n.references.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.references.length()  >  0)  {	  if    (n.references!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	57	None	replace
45	[BUG]  [BUGGY]  if  (n.references  ==  null  ||!n.references.isEmpty())  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references  ==  null  ||!n.references.isEmpty())  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references  ==  null  ||!n.references.isEmpty())  {	  if    (n.refs    ==    null    ||!n.refs.isEmpty())    {    	non-compiled	[CE]  not  a  statement	8	None	replace
46	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias().startsWith(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias().startsWith(alias))  {	  if(n.refs!=    null    &&    n.alias().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	74	None	replace
47	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias().equals(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias().equals(alias))  {	  if(n.refs!=    null    &&    n.alias().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	74	None	replace
48	[BUG]  [BUGGY]  if(n.alias!=  null  &&  n.refs.endsWith(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.alias!=  null  &&  n.refs.endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.alias!=  null  &&  n.refs.endsWith(alias))  {	  if(n.refs!=    null    &&    n.alias().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	74	None	replace
49	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.alias().endsWith(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.alias().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.alias().endsWith(alias))  {	  if(n.refs!=    null    &&    n.alias().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	74	None	replace
50	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.alias().endsWith(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.alias().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.alias().endsWith(alias))  {	  if(n.refs!=    null    &&    n.alias().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	74	None	replace
51	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias().isEmpty())  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias().isEmpty())  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias().isEmpty())  {	  if(n.refs!=    null    &&    n.alias().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	74	None	replace
52	[BUG]  [BUGGY]  if(n.refs!=  null  ||!n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||!n.fullName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||!n.fullName().endsWith(alias))  {	  if(n.refs!=    null    &&!n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	71	None	replace
53	[BUG]  [BUGGY]  if(n.refs  ==  null  &&!n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&!n.fullName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&!n.fullName().endsWith(alias))  {	  if(n.refs!=    null    &&!n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	71	None	replace
54	[BUG]  [BUGGY]  if  (n.refs  ==  null  ||  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  ||  n.refs.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  ||  n.refs.length()  >  0)  {	  if    (n.refs!=    null    ||    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	21	None	replace
55	[BUG]  [BUGGY]  if  (n.refs!=  null  ||  n.refs.length()  <  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  ||  n.refs.length()  <  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||  n.refs.length()  <  0)  {	  if    (n.refs!=    null    ||    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	21	None	replace
56	[BUG]  [BUGGY]  if  (n.refs!=  null  ||  n.refs.length()  >=  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  ||  n.refs.length()  >=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||  n.refs.length()  >=  0)  {	  if    (n.refs!=    null    ||    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	21	None	replace
57	[BUG]  [BUGGY]  if(n!=  null  &&  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  n.refs.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  n.refs.length()  >  0)  {	  if(alias!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
58	[BUG]  [BUGGY]  if(alias!=  null  ||  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  ||  n.refs.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  ||  n.refs.length()  >  0)  {	  if(alias!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
59	[BUG]  [BUGGY]  if(n  ==  null  &&  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n  ==  null  &&  n.refs.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n  ==  null  &&  n.refs.length()  >  0)  {	  if(alias!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
60	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n.refs.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs.length()  >  0)  {	  if(alias!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
61	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs.length()  ==  0)  {	  if(alias!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
62	[BUG]  [BUGGY]  if(alias!=  null  &&!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&!n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&!n.fullName().equals(alias))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
63	[BUG]  [BUGGY]  if(n.fullName!=  null  &&!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.fullName!=  null  &&!n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.fullName!=  null  &&!n.fullName().equals(alias))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
64	[BUG]  [BUGGY]  if(alias!=  null  &&!n.fullName().equals(alias.fullName()))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&!n.fullName().equals(alias.fullName()))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&!n.fullName().equals(alias.fullName()))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
65	[BUG]  [BUGGY]  if(alias!=  null  ||!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  ||!n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  ||!n.fullName().equals(alias))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
66	[BUG]  [BUGGY]  if(n  ==  null  &&!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n  ==  null  &&!n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n  ==  null  &&!n.fullName().equals(alias))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
67	[BUG]  [BUGGY]  if(alias  ==  null  &&!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&!n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&!n.fullName().equals(alias))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
68	[BUG]  [BUGGY]  if  (n.refs!=  null  ||  n.fullName().startsWith(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  ||  n.fullName().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||  n.fullName().startsWith(alias))  {	  if    (n.refs!=    null    &&    n.fullName().startsWith(alias))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
69	[BUG]  [BUGGY]  Name  p  =  n.getPrettyPrinter().getName();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getPrettyPrinter().getName();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getPrettyPrinter().getName();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	38	None	replace
70	[BUG]  [BUGGY]  Name  p  =  n.getPosition();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getPosition();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getPosition();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	38	None	replace
71	[BUG]  [BUGGY]  Name  p  =  n.getPath();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getPath();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getPath();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	38	None	replace
72	[BUG]  [BUGGY]  Name  p  =  n.getName()  + ": "  +  alias;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getName()  + ": "  +  alias;  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getName()  + ": "  +  alias;	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	38	None	replace
73	[BUG]  [BUGGY]  Name  p  =  n.getPositiveName();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getPositiveName();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getPositiveName();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	38	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  alias);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  alias);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	65	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME,  alias);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME,  alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkArgument(n.getType()!=  Token.NAME,  alias);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	65	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkArgument(n.getType()!=  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	65	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	65	None	replace
78	[BUG]  [BUGGY]  if(n!=  null  &&  alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {	  if(alias!=    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
79	[BUG]  [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {	  if(alias!=    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
80	[BUG]  [BUGGY]  if(n.refs!=  null  &&  alias.isEmpty()  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  alias.isEmpty()  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  alias.isEmpty()  &&  n.fullName().length()  ==  0)  {	  if(alias!=    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
81	[BUG]  [BUGGY]  if(alias!=  null  ||  n.refs!=  null  ||  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  ||  n.refs!=  null  ||  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  ||  n.refs!=  null  ||  n.fullName().length()  ==  0)  {	  if(alias!=    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
82	[BUG]  [BUGGY]  Node  p  =  n.getLastChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getLastChild();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getLastChild();	  Node    p    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	37	None	replace
83	[BUG]  [BUGGY]  Node  p  =  n.getPreviousChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getPreviousChild();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getPreviousChild();	  Node    p    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	37	None	replace
84	[BUG]  [BUGGY]  Node  p  =  n.getAncestor(1);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getAncestor(1);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestor(1);	  Node    p    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	37	None	replace
85	[BUG]  [BUGGY]  Node  p  =  n.getChildCount();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getChildCount();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getChildCount();	  Node    p    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	37	None	replace
86	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs.fullName()  ==  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.refs.fullName()  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs.fullName()  ==  null)  {	  if(n.refs    ==    null    ||    n.fullName()    ==    null)    {    	non-compiled	[CE]  not  a  statement	59	None	replace
87	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.fullName()  ==  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.fullName()  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.fullName()  ==  null)  {	  if(n.refs    ==    null    ||    n.fullName()    ==    null)    {    	non-compiled	[CE]  not  a  statement	59	None	replace
88	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.name()  ==  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.name()  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.name()  ==  null)  {	  if(n.refs    ==    null    ||    n.fullName()    ==    null)    {    	non-compiled	[CE]  not  a  statement	59	None	replace
89	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.name()!=  null)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.name()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.name()!=  null)  {	  if(n.refs    ==    null    ||    n.name()!=    null)    {    	non-compiled	[CE]  not  a  statement	29	None	replace
90	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.name()!=  null)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.name()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.name()!=  null)  {	  if(n.refs    ==    null    ||    n.name()!=    null)    {    	non-compiled	[CE]  not  a  statement	29	None	replace
91	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.name()  ==  null)  {  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.name()  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.name()  ==  null)  {	  if(n.refs    ==    null    ||    n.name()!=    null)    {    	non-compiled	[CE]  not  a  statement	29	None	replace
92	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name()!=  null)  {  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.name()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name()!=  null)  {	  if(n.refs    ==    null    ||    n.name()!=    null)    {    	non-compiled	[CE]  not  a  statement	29	None	replace
93	[BUG]  [BUGGY]  if(n.alias!=  null  &&  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.alias!=  null  &&  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.alias!=  null  &&  n.refs.length()  ==  0)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
94	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.alias.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.alias.length()  ==  0)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
95	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.alias.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.alias.length()  ==  0)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
96	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias.length()  >  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias.length()  >  0)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
97	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias.length()  >=  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias.length()  >=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias.length()  >=  0)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
98	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.alias.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.alias.length()  ==  0)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
99	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  alias!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  alias!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  alias!=  null  &&  n.fullName().length()  ==  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	55	None	replace
100	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs!=  null  ||  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.refs!=  null  ||  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs!=  null  ||  n.fullName().length()  ==  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	55	None	replace
101	[BUG]  [BUGGY]  if(n  ==  null  &&  alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n  ==  null  &&  alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n  ==  null  &&  alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	55	None	replace
102	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()  <=  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()  <=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.fullName().length()  <=  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    <=    0)    {    	non-compiled	[CE]  not  a  statement	13	None	replace
103	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.fullName().length()!=  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.fullName().length()!=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.fullName().length()!=  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    <=    0)    {    	non-compiled	[CE]  not  a  statement	13	None	replace
104	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  alias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  alias);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	43	None	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()!=  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	43	None	replace
106	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME,  alias);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME,  alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()!=  Token.NAME,  alias);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	43	None	replace
107	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	43	None	replace
108	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getName().equals(alias));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getName().equals(alias));  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getName().equals(alias));	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	43	None	replace
109	[BUG]  [BUGGY]  if  (n.refs!=  null  ||  n.name().equals(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  ||  n.name().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||  n.name().equals(alias))  {	  if    (n.refs!=    null    &&    n.name().equals(alias))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
110	[BUG]  [BUGGY]  if  (n.name()  ==  null  &&  n.refs!=  null  &&  n.name().equals(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.name()  ==  null  &&  n.refs!=  null  &&  n.name().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.name()  ==  null  &&  n.refs!=  null  &&  n.name().equals(alias))  {	  if    (n.refs!=    null    &&    n.name().equals(alias))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
111	[BUG]  [BUGGY]  if  (n.refs  ==  null  &&  n.name().equals(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  &&  n.name().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  &&  n.name().equals(alias))  {	  if    (n.refs!=    null    &&    n.name().equals(alias))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
112	[BUG]  [BUGGY]  if  (n.name()!=  null  &&  n.refs.equals(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.name()!=  null  &&  n.refs.equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.name()!=  null  &&  n.refs.equals(alias))  {	  if    (n.refs!=    null    &&    n.name().equals(alias))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
113	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.name().equals(alias)||  n.name().equals(alias))  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  &&  n.name().equals(alias)||  n.name().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.name().equals(alias)||  n.name().equals(alias))  {	  if    (n.refs!=    null    &&    n.name().equals(alias))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
114	[BUG]  [BUGGY]  Node  p  =  n.getPosition()  +  1;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getPosition()  +  1;  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getPosition()  +  1;	  Node    p    =    n.getPosition();    	non-compiled	[CE]  not  a  statement	39	None	replace
115	[BUG]  [BUGGY]  Node  p  =  n.getPosition()  -  1;  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getPosition()  -  1;  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getPosition()  -  1;	  Node    p    =    n.getPosition();    	non-compiled	[CE]  not  a  statement	39	None	replace
116	[BUG]  [BUGGY]  Node  p  =  n.getImmediateParent();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getImmediateParent();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getImmediateParent();	  Node    p    =    n.getPosition();    	non-compiled	[CE]  not  a  statement	39	None	replace
117	[BUG]  [BUGGY]  Node  p  =  n.getName();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getName();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getName();	  Node    p    =    n.getPosition();    	non-compiled	[CE]  not  a  statement	39	None	replace
118	[BUG]  [BUGGY]  Node  p  =  n.getNameNode();  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getNameNode();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getNameNode();	  Node    p    =    n.getPosition();    	non-compiled	[CE]  not  a  statement	39	None	replace
119	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.refs.fullName()!=  null)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.refs.fullName()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.refs.fullName()!=  null)  {	  if(n.refs!=    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
120	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.fullName()  ==  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.fullName()  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.fullName()  ==  null)  {	  if(n.refs!=    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
121	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.url()!=  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.url()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.url()!=  null)  {	  if(n.refs!=    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
122	[BUG]  [BUGGY]  if(n!=  null  ||!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  ||!n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  ||!n.fullName().equals(alias))  {	  if(n!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
123	[BUG]  [BUGGY]  if(n  ==  null  ||!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n  ==  null  ||!n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n  ==  null  ||!n.fullName().equals(alias))  {	  if(n!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
124	[BUG]  [BUGGY]  if(n!=  null  &&!n.fullName().equals(alias)||  n.refs.contains(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&!n.fullName().equals(alias)||  n.refs.contains(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&!n.fullName().equals(alias)||  n.refs.contains(alias))  {	  if(n!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
125	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.refs.length  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.refs.length  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.refs.length  ==  0)  {	  if(n.refs!=    null    &&    n.refs.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	69	None	replace
126	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.refs.length  >=  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.refs.length  >=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.refs.length  >=  0)  {	  if(n.refs!=    null    &&    n.refs.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	69	None	replace
127	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.refs.length  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.refs.length  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.refs.length  ==  0)  {	  if(n.refs!=    null    &&    n.refs.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	69	None	replace
128	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.refs.length!=  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.refs.length!=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.refs.length!=  0)  {	  if(n.refs!=    null    &&    n.refs.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	69	None	replace
129	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.refs.length  ==  1)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.refs.length  ==  1)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.refs.length  ==  1)  {	  if(n.refs!=    null    &&    n.refs.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	69	None	replace
130	[BUG]  [BUGGY]  Name  p  =  n.getReferenceName()  +  alias;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getReferenceName()  +  alias;  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getReferenceName()  +  alias;	  Name    p    =    n.getReferenceName();    	non-compiled	[CE]  not  a  statement	41	None	replace
131	[BUG]  [BUGGY]  Name  p  =  n.getReferenceName()  +  1;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getReferenceName()  +  1;  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getReferenceName()  +  1;	  Name    p    =    n.getReferenceName();    	non-compiled	[CE]  not  a  statement	41	None	replace
132	[BUG]  [BUGGY]  Name  p  =  n.getReference();  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getReference();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getReference();	  Name    p    =    n.getReferenceName();    	non-compiled	[CE]  not  a  statement	41	None	replace
133	[BUG]  [BUGGY]  Name  p  =  n.getReferenceName(alias);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getReferenceName(alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getReferenceName(alias);	  Name    p    =    n.getReferenceName();    	non-compiled	[CE]  not  a  statement	41	None	replace
134	[BUG]  [BUGGY]  if(n  ==  null  ||  alias!=  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n  ==  null  ||  alias!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n  ==  null  ||  alias!=  null)  {	  if(alias    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
135	[BUG]  [BUGGY]  if(alias!=  null  ||  n.refs!=  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  ||  n.refs!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  ||  n.refs!=  null)  {	  if(alias    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
136	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.url().startsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.url().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.url().startsWith(alias))  {	  if(n.refs!=    null    &&    n.url().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	51	None	replace
137	[BUG]  [BUGGY]  if(n.url()!=  null  &&  n.refs.endsWith(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.url()!=  null  &&  n.refs.endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.url()!=  null  &&  n.refs.endsWith(alias))  {	  if(n.refs!=    null    &&    n.url().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	51	None	replace
138	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.url().endsWith(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.url().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.url().endsWith(alias))  {	  if(n.refs!=    null    &&    n.url().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	51	None	replace
139	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.url().equals(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.url().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.url().equals(alias))  {	  if(n.refs!=    null    &&    n.url().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	51	None	replace
140	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.url().endsWith(alias))  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.url().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.url().endsWith(alias))  {	  if(n.refs!=    null    &&    n.url().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	51	None	replace
141	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.url().startsWith(alias))  {  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.url().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.url().startsWith(alias))  {	  if(n.refs!=    null    &&    n.url().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	51	None	replace
142	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.refs  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs  ==  null)  {	  if(n.refs    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	28	None	replace
143	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.refs!=  null)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.refs!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.refs!=  null)  {	  if(n.refs    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	28	None	replace
144	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.refs  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.refs  ==  null)  {	  if(n.refs    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	28	None	replace
145	[BUG]  [BUGGY]  if(n.references  ==  null  ||  n.refs!=  null)  {  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.references  ==  null  ||  n.refs!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.references  ==  null  ||  n.refs!=  null)  {	  if(n.refs    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	28	None	replace
146	[BUG]  [BUGGY]  Node  p  =  n.getPrefix();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getPrefix();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getPrefix();	  Node    p    =    n.getNode();    	non-compiled	[CE]  not  a  statement	45	None	replace
147	[BUG]  [BUGGY]  Node  p  =  n.getPrevious();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getPrevious();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getPrevious();	  Node    p    =    n.getNext();    	non-compiled	[CE]  not  a  statement	40	None	replace
148	[BUG]  [BUGGY]  Node  p  =  n.getPrettyPrint();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getPrettyPrint();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getPrettyPrint();	  Node    p    =    n.getNext();    	non-compiled	[CE]  not  a  statement	40	None	replace
149	[BUG]  [BUGGY]  Node  p  =  n.getPrettyPrinter();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getPrettyPrinter();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getPrettyPrinter();	  Node    p    =    n.getNext();    	non-compiled	[CE]  not  a  statement	40	None	replace
150	[BUG]  [BUGGY]  Node  r  =  n.getNext();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.getNext();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.getNext();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	66	None	replace
151	[BUG]  [BUGGY]  Node  r  =  n.getRawParent();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.getRawParent();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.getRawParent();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	66	None	replace
152	[BUG]  [BUGGY]  Node  r  =  n.getLastChild();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.getLastChild();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.getLastChild();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	66	None	replace
153	[BUG]  [BUGGY]  Node  r  =  n.getNameNode();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.getNameNode();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.getNameNode();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	66	None	replace
154	[BUG]  [BUGGY]  Node  r  =  n.getName();  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.getName();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.getName();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	66	None	replace
155	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs!=  null  ||  n.refs.length!=  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.refs!=  null  ||  n.refs.length!=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs!=  null  ||  n.refs.length!=  0)  {	  if(n.refs    ==    null    ||    n.refs.length!=    0)    {    	non-compiled	[CE]  not  a  statement	26	None	replace
156	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs.length  >=  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.refs.length  >=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs.length  >=  0)  {	  if(n.refs    ==    null    ||    n.refs.length!=    0)    {    	non-compiled	[CE]  not  a  statement	26	None	replace
157	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs.length  ==  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.refs.length  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs.length  ==  0)  {	  if(n.refs    ==    null    ||    n.refs.length!=    0)    {    	non-compiled	[CE]  not  a  statement	26	None	replace
158	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.refs.length!=  0)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.refs.length!=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.refs.length!=  0)  {	  if(n.refs    ==    null    ||    n.refs.length!=    0)    {    	non-compiled	[CE]  not  a  statement	26	None	replace
159	[BUG]  [BUGGY]  if(n.references  ==  null  ||  n.refs.length!=  0)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.references  ==  null  ||  n.refs.length!=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.references  ==  null  ||  n.refs.length!=  0)  {	  if(n.refs    ==    null    ||    n.refs.length!=    0)    {    	non-compiled	[CE]  not  a  statement	26	None	replace
160	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.fullName().length()  >  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
161	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.fullName().length()  >=  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.fullName().length()  >=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.fullName().length()  >=  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
162	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name().startsWith(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.name().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name().startsWith(alias))  {	  if(n.refs!=    null    &&    n.name().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
163	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.name().endsWith(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.name().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.name().endsWith(alias))  {	  if(n.refs!=    null    &&    n.name().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
164	[BUG]  [BUGGY]  if(n.name()!=  null  &&  n.refs.endsWith(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.name()!=  null  &&  n.refs.endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.name()!=  null  &&  n.refs.endsWith(alias))  {	  if(n.refs!=    null    &&    n.name().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
165	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.name().endsWith(alias))  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.name().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.name().endsWith(alias))  {	  if(n.refs!=    null    &&    n.name().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
166	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name().contains(alias))  {  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.name().contains(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name().contains(alias))  {	  if(n.refs!=    null    &&    n.name().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
167	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.fullName().length()!=  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.fullName().length()!=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.fullName().length()!=  0)  {	  if(n.refs    ==    null    ||    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
168	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.refs.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs.fullName().length()  ==  0)  {	  if(n.refs    ==    null    ||    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
169	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.name().length()  ==  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.name().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.name().length()  ==  0)  {	  if(n.refs    ==    null    ||    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
170	[BUG]  [BUGGY]  if  (n.refs  ==  null  &&!n.refs.isEmpty())  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  &&!n.refs.isEmpty())  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  &&!n.refs.isEmpty())  {	  if    (n.refs!=    null    &&!n.refs.isEmpty())    {    	non-compiled	[CE]  not  a  statement	9	None	replace
171	[BUG]  [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.fullName().startsWith(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.fullName().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  n.refs!=  null  &&  n.fullName().startsWith(alias))  {	  if(n!=    null    &&    n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	50	None	replace
172	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.refs!=  null  &&  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.refs!=  null  &&  n.fullName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.refs!=  null  &&  n.fullName().endsWith(alias))  {	  if(n!=    null    &&    n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	50	None	replace
173	[BUG]  [BUGGY]  if(n  ==  null  &&  n.refs!=  null  &&  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n  ==  null  &&  n.refs!=  null  &&  n.fullName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n  ==  null  &&  n.refs!=  null  &&  n.fullName().endsWith(alias))  {	  if(n!=    null    &&    n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	50	None	replace
174	[BUG]  [BUGGY]  if(n!=  null  &&  n.refs  ==  null  &&  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  n.refs  ==  null  &&  n.fullName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  n.refs  ==  null  &&  n.fullName().endsWith(alias))  {	  if(n!=    null    &&    n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	50	None	replace
175	[BUG]  [BUGGY]  if(n!=  null  ||  n.refs!=  null  ||  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  ||  n.refs!=  null  ||  n.fullName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  ||  n.refs!=  null  ||  n.fullName().endsWith(alias))  {	  if(n!=    null    &&    n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	50	None	replace
176	[BUG]  [BUGGY]  if  (n.references!=  null  &&!n.references.isEmpty())  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references!=  null  &&!n.references.isEmpty())  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references!=  null  &&!n.references.isEmpty())  {	  if    (n.references!=    null    ||!n.references.isEmpty())    {    	non-compiled	[CE]  not  a  statement	56	None	replace
177	[BUG]  [BUGGY]  if  (n.refs!=  null  ||!n.references.isEmpty())  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  ||!n.references.isEmpty())  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||!n.references.isEmpty())  {	  if    (n.references!=    null    ||!n.references.isEmpty())    {    	non-compiled	[CE]  not  a  statement	56	None	replace
178	[BUG]  [BUGGY]  Node  rParent  =  n.getNext();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.getNext();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.getNext();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
179	[BUG]  [BUGGY]  Node  rParent  =  n.getRawParent();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.getRawParent();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.getRawParent();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
180	[BUG]  [BUGGY]  Node  rParent  =  n.getNameNode();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.getNameNode();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.getNameNode();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
181	[BUG]  [BUGGY]  Node  rParent  =  n.getReferenceName();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.getReferenceName();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.getReferenceName();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
182	[BUG]  [BUGGY]  Node  rParent  =  n.getRootNode();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.getRootNode();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.getRootNode();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
183	[BUG]  [BUGGY]  Node  rParent  =  n.getPreviousParent();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.getPreviousParent();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.getPreviousParent();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
184	[BUG]  [BUGGY]  Node  r  =  n.refs.getFirstChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.refs.getFirstChild();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.refs.getFirstChild();	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	63	None	replace
185	[BUG]  [BUGGY]  Node  r  =  n.getPreviousChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.getPreviousChild();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.getPreviousChild();	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	63	None	replace
186	[BUG]  [BUGGY]  Node  r  =  n.getAncestor(1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.getAncestor(1);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.getAncestor(1);	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	63	None	replace
187	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.refs.fullName()  ==  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.refs.fullName()  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.refs.fullName()  ==  null)  {	  if(n.refs!=    null    ||    n.fullName()    ==    null)    {    	non-compiled	[CE]  not  a  statement	76	None	replace
188	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()  >=  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()  >=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.fullName().length()  >=  0)  {	  if(n.refs!=    null    ||    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
189	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.name().length()  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.name().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.name().length()  ==  0)  {	  if(n.refs!=    null    &&    n.name().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
190	[BUG]  [BUGGY]  if(n.name()!=  null  &&  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.name()!=  null  &&  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.name()!=  null  &&  n.refs.length()  ==  0)  {	  if(n.refs!=    null    &&    n.name().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
191	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.name().length()  ==  0)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.name().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.name().length()  ==  0)  {	  if(n.refs!=    null    &&    n.name().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
192	[BUG]  [BUGGY]  if(n.name()  ==  null  &&  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.name()  ==  null  &&  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.name()  ==  null  &&  n.refs.length()  ==  0)  {	  if(n.refs!=    null    &&    n.name().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
193	[BUG]  [BUGGY]  if(n.refs!=  null  ||!n.rootName().equals(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||!n.rootName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||!n.rootName().equals(alias))  {	  if(n.refs!=    null    &&!n.rootName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	72	None	replace
194	[BUG]  [BUGGY]  if(n.refs  ==  null  &&!n.rootName().equals(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&!n.rootName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&!n.rootName().equals(alias))  {	  if(n.refs!=    null    &&!n.rootName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	72	None	replace
195	[BUG]  [BUGGY]  if(n!=  null  &&!n.rootName().equals(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&!n.rootName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&!n.rootName().equals(alias))  {	  if(n.refs!=    null    &&!n.rootName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	72	None	replace
196	[BUG]  [BUGGY]  if(n.rootName!=  null  &&!n.rootName().equals(alias))  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.rootName!=  null  &&!n.rootName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.rootName!=  null  &&!n.rootName().equals(alias))  {	  if(n.refs!=    null    &&!n.rootName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	72	None	replace
197	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.refs!=  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.refs!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.refs!=  null)  {	  if(n.refs    ==    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	25	None	replace
198	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.refs.fullName()!=  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.refs.fullName()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.refs.fullName()!=  null)  {	  if(n.refs    ==    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	25	None	replace
199	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.fullName().startsWith(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.fullName().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.fullName().startsWith(alias))  {	  if(n.refs!=    null    ||    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
200	[BUG]  [BUGGY]  if  (n.refs!=  null  ||  n.refs.length  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  ||  n.refs.length  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||  n.refs.length  >  0)  {	  if    (n.refs!=    null    &&    n.refs.length    >    0)    {    	non-compiled	[CE]  not  a  statement	67	None	replace
201	[BUG]  [BUGGY]  if  (n.refs  ==  null  &&  n.refs.length  >  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  &&  n.refs.length  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  &&  n.refs.length  >  0)  {	  if    (n.refs!=    null    &&    n.refs.length    >    0)    {    	non-compiled	[CE]  not  a  statement	67	None	replace
202	[BUG]  [BUGGY]  if  (n.references!=  null  &&  n.refs.length  >  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references!=  null  &&  n.refs.length  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references!=  null  &&  n.refs.length  >  0)  {	  if    (n.refs!=    null    &&    n.refs.length    >    0)    {    	non-compiled	[CE]  not  a  statement	67	None	replace
203	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.refs.length  >  1)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  &&  n.refs.length  >  1)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.refs.length  >  1)  {	  if    (n.refs!=    null    &&    n.refs.length    >    0)    {    	non-compiled	[CE]  not  a  statement	67	None	replace
204	[BUG]  [BUGGY]  if  (alias  ==  null  ||!n.refs.equals(n.refs))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (alias  ==  null  ||!n.refs.equals(n.refs))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (alias  ==  null  ||!n.refs.equals(n.refs))  {	  if    (n.refs    ==    null    ||!n.refs.equals(alias))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
205	[BUG]  [BUGGY]  if  (n.references  ==  null  ||!n.references.equals(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references  ==  null  ||!n.references.equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references  ==  null  ||!n.references.equals(alias))  {	  if    (n.refs    ==    null    ||!n.refs.equals(alias))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
206	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.alias()!=  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.alias()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.alias()!=  null)  {	  if(n.refs    ==    null    ||    n.alias()!=    null)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
207	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.alias()!=  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.alias()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.alias()!=  null)  {	  if(n.refs    ==    null    ||    n.alias()!=    null)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
208	[BUG]  [BUGGY]  if(n.references  ==  null  ||  n.alias()!=  null)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.references  ==  null  ||  n.alias()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.references  ==  null  ||  n.alias()!=  null)  {	  if(n.refs    ==    null    ||    n.alias()!=    null)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
209	[BUG]  [BUGGY]  if(n.alias  ==  null  ||  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.alias  ==  null  ||  n.refs  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.alias  ==  null  ||  n.refs  ==  null)  {	  if(n.refs    ==    null    ||    n.alias()!=    null)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
210	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.alias()  ==  null)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.alias()  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.alias()  ==  null)  {	  if(n.refs    ==    null    ||    n.alias()!=    null)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
211	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()!=  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()!=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.fullName().length()!=  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    >=    0)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
212	[BUG]  [BUGGY]  if(n.refs!=  null  ||!n.fullName().startsWith(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||!n.fullName().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||!n.fullName().startsWith(alias))  {	  if(n.refs!=    null    &&!n.fullName().startsWith(alias))    {    	non-compiled	[CE]  not  a  statement	73	None	replace
213	[BUG]  [BUGGY]  if(n.refs  ==  null  &&!n.fullName().startsWith(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&!n.fullName().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&!n.fullName().startsWith(alias))  {	  if(n.refs!=    null    &&!n.fullName().startsWith(alias))    {    	non-compiled	[CE]  not  a  statement	73	None	replace
214	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.refs.fullName()!=  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.refs.fullName()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.refs.fullName()!=  null)  {	  if(n.refs!=    null    ||    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	27	None	replace
215	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  alias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  alias);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	44	None	replace
216	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	44	None	replace
217	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	44	None	replace
218	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT,  alias);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT,  alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT,  alias);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	44	None	replace
219	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	44	None	replace
220	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	44	None	replace
221	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.fullName().matches(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.fullName().matches(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.fullName().matches(alias))  {	  if(n.refs!=    null    &&    n.fullName().matches(alias))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
222	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.fullName().matches(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.fullName().matches(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.fullName().matches(alias))  {	  if(n.refs!=    null    &&    n.fullName().matches(alias))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
223	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().matches(alias))  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().matches(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().matches(alias))  {	  if(n.refs!=    null    &&    n.fullName().matches(alias))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
224	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name().matches(alias))  {  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.name().matches(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name().matches(alias))  {	  if(n.refs!=    null    &&    n.fullName().matches(alias))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
225	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs.length()!=  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.refs.length()!=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs.length()!=  0)  {	  if(n.refs    ==    null    ||    n.refs.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	24	None	replace
226	[BUG]  [BUGGY]  if(n.references  ==  null  ||  n.refs.fullName()!=  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.references  ==  null  ||  n.refs.fullName()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.references  ==  null  ||  n.refs.fullName()!=  null)  {	  if(n.refs    ==    null    ||    n.refs.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	24	None	replace
227	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
228	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  alias!=  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  alias!=  null  &&  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  alias!=  null  &&  n.fullName().length()  >  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
229	[BUG]  [BUGGY]  if(n!=  null  &&  alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
230	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs!=  null  ||  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.refs!=  null  ||  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs!=  null  ||  n.fullName().length()  >  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
231	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs!=  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.refs!=  null  &&  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs!=  null  &&  n.fullName().length()  >  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
232	[BUG]  [BUGGY]  if  (n.refs  ==  null  ||!n.refs.contains(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs  ==  null  ||!n.refs.contains(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null  ||!n.refs.contains(alias))  {	  if    (n.refs    ==    null    ||!n.refs.equals(alias))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
233	[BUG]  [BUGGY]  if  (n.references  ==  null  ||!n.refs.equals(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references  ==  null  ||!n.refs.equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references  ==  null  ||!n.refs.equals(alias))  {	  if    (n.refs    ==    null    ||!n.refs.equals(alias))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
234	[BUG]  [BUGGY]  Node  rParent  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.removeFirstChild();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.removeFirstChild();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
235	[BUG]  [BUGGY]  Node  rParent  =  n.parent();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.parent();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.parent();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
236	[BUG]  [BUGGY]  Node  rParent  =  n.getParentNode();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.getParentNode();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.getParentNode();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
237	[BUG]  [BUGGY]  Node  rParent  =  n.getParent(alias);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.getParent(alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.getParent(alias);	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
238	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs  ==  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs  ==  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs  ==  null  &&  n.fullName().length()  ==  0)  {	  if(alias!=    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
239	[BUG]  [BUGGY]  if(alias!=  null  &&  n  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {	  if(alias!=    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
240	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.url().length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.url().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs!=  null  &&  n.url().length()  ==  0)  {	  if(alias!=    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
241	[BUG]  [BUGGY]  if(alias!=  null  &&  n.references!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.references!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.references!=  null  &&  n.fullName().length()  ==  0)  {	  if(alias!=    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
242	[BUG]  [BUGGY]  Preconditions.checkState(alias.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(alias.getType()  ==  Token.NAME);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(alias.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	43	None	replace
243	[BUG]  [BUGGY]  if(alias!=  null  &&  n.name().length()  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.name().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.name().length()  >  0)  {	  if(n.refs!=    null    &&    n.name().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
244	[BUG]  [BUGGY]  if(n.name()  ==  null  &&  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.name()  ==  null  &&  n.refs.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.name()  ==  null  &&  n.refs.length()  >  0)  {	  if(n.refs!=    null    &&    n.name().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
245	[BUG]  [BUGGY]  Preconditions.checkState(alias.getType()  ==  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(alias.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(alias.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	44	None	replace
246	[BUG]  [BUGGY]  if(alias!=  null  &&!n.refs.equals(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&!n.refs.equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&!n.refs.equals(alias))  {	  if(alias!=    null    &&!n.fullName().equals(n.refs))    {    	non-compiled	[CE]  not  a  statement	15	None	replace
247	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null  ||  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null  ||  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs  ==  null  ||  n.fullName().length()  ==  0)  {	  if(n.refs    ==    null    ||    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
248	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.fullName().length()  ==  0)  {	  if(n.refs    ==    null    ||    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
249	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs  ==  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n.refs  ==  null  &&  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs  ==  null  &&  n.fullName().length()  >  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
250	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null  ||  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null  ||  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs  ==  null  ||  n.fullName().length()  >  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
251	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null  &&  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs  ==  null  &&  n.fullName().length()  >  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
252	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs  ==  null  ||  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n.refs  ==  null  ||  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs  ==  null  ||  n.fullName().length()  >  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
253	[BUG]  [BUGGY]  if(n!=  null  &&!n.fullName().startsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&!n.fullName().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&!n.fullName().startsWith(alias))  {	  if(n!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
254	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs!=  null)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs!=  null)  {	  if(n.refs!=    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
255	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs!=  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n.refs!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs!=  null)  {	  if(n.refs!=    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
256	[BUG]  [BUGGY]  Node  p  =  nameMap.get(alias,  null);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  nameMap.get(alias,  null);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  nameMap.get(alias,  null);	  Node    p    =    nameMap.get(alias);    	non-compiled	[CE]  not  a  statement	46	None	replace
257	[BUG]  [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.fullName().indexOf(alias)>  -1)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.fullName().indexOf(alias)>  -1)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  n.refs!=  null  &&  n.fullName().indexOf(alias)>  -1)  {	  if(n!=    null    &&    n.refs!=    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	50	None	replace
258	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs  ==  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n.refs  ==  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs  ==  null  &&  n.fullName().length()  ==  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
259	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs  ==  null  ||  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n.refs  ==  null  ||  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs  ==  null  ||  n.fullName().length()  ==  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
260	[BUG]  [BUGGY]  if  (n!=  null  &&  n.references!=  null  &&  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n!=  null  &&  n.references!=  null  &&  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n!=  null  &&  n.references!=  null  &&  n.fullName().equals(alias))  {	  if    (n!=    null    &&    n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	47	None	replace
261	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs  ==  null)  {	  if(alias!=    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
262	[BUG]  [BUGGY]  if(alias!=  null  ||  n  ==  null)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  ||  n  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  ||  n  ==  null)  {	  if(alias!=    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
263	[BUG]  [BUGGY]  if(alias!=  null  ||  n.isExtern())  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  ||  n.isExtern())  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  ||  n.isExtern())  {	  if(alias!=    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
264	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.refs  >=  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  ||  n.refs  >=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.refs  >=  null)  {	  if(n.refs    ==    null    ||    n.refs.length!=    0)    {    	non-compiled	[CE]  not  a  statement	26	None	replace
265	[BUG]  [BUGGY]  if(alias  ==  null  ||  n!=  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n!=  null)  {	  if(alias    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
266	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.name!=  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.name!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.name!=  null)  {	  if(alias    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
267	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.isNamespace())  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.isNamespace())  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.isNamespace())  {	  if(alias    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
268	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.isExtern())  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.isExtern())  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.isExtern())  {	  if(alias    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	77	None	replace
269	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.alias()  ==  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.alias()  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.alias()  ==  null)  {	  if(n.refs    ==    null    ||    n.alias()!=    null)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
270	[BUG]  [BUGGY]  if(n!=  null  ||  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  ||  n.refs  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  ||  n.refs  ==  null)  {	  if(n.refs    ==    null    ||    n.alias()!=    null)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
271	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.fullName().indexOf(alias)>  -1)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.fullName().indexOf(alias)>  -1)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.fullName().indexOf(alias)>  -1)  {	  if(n.refs!=    null    &&    n.fullName().matches(alias))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
272	[BUG]  [BUGGY]  if(n.name()  ==  null  &&  n.refs!=  null  &&  n.name().endsWith(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.name()  ==  null  &&  n.refs!=  null  &&  n.name().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.name()  ==  null  &&  n.refs!=  null  &&  n.name().endsWith(alias))  {	  if(n.refs!=    null    &&    n.name().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
273	[BUG]  [BUGGY]  if(n!=  null  &&  n.name().endsWith(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  n.name().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  n.name().endsWith(alias))  {	  if(n.refs!=    null    &&    n.name().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
274	[BUG]  [BUGGY]  Name  p  =  n.getParent();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getParent();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getParent();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	38	None	replace
275	[BUG]  [BUGGY]  Name  p  =  n.getPrettyPrinter();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getPrettyPrinter();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getPrettyPrinter();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	38	None	replace
276	[BUG]  [BUGGY]  Name  p  =  n.getPrettyPrint();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getPrettyPrint();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getPrettyPrint();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	38	None	replace
277	[BUG]  [BUGGY]  Name  p  =  n.getReferencePosition();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getReferencePosition();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getReferencePosition();	  Name    p    =    n.getReferenceName();    	non-compiled	[CE]  not  a  statement	41	None	replace
278	[BUG]  [BUGGY]  Name  p  =  n.getPositiveReferenceName();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getPositiveReferenceName();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getPositiveReferenceName();	  Name    p    =    n.getReferenceName();    	non-compiled	[CE]  not  a  statement	41	None	replace
279	[BUG]  [BUGGY]  Name  p  =  n.getAlias();  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getAlias();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getAlias();	  Name    p    =    n.getReferenceName();    	non-compiled	[CE]  not  a  statement	41	None	replace
280	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias!=  null)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias!=  null)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
281	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs!=  null  &&  n.alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n.refs!=  null  &&  n.alias.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs!=  null  &&  n.alias.length()  ==  0)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
282	[BUG]  [BUGGY]  if(alias  ==  null  &&  n!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n!=  null  &&  n.fullName().length()  ==  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	55	None	replace
283	[BUG]  [BUGGY]  if(alias  ==  null  ||  n!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n!=  null  &&  n.fullName().length()  ==  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	55	None	replace
284	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs!=  null  &&  n.refs.length()  ==  0)  {	  if(n.refs!=    null    &&    n.refs.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	17	None	replace
285	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs!=  null  &&  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n.refs!=  null  &&  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs!=  null  &&  n.refs.length()  ==  0)  {	  if(n.refs!=    null    &&    n.refs.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	17	None	replace
286	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.refs.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs!=  null  &&  n.refs.length()  >  0)  {	  if(alias!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
287	[BUG]  [BUGGY]  Preconditions.checkArgument(alias.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkArgument(alias.getType()  ==  Token.NAME);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkArgument(alias.getType()  ==  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	65	None	replace
288	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME),  alias);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME),  alias);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME),  alias);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	65	None	replace
289	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs.length()  <=  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs.length()  <=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs.length()  <=  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    <=    0)    {    	non-compiled	[CE]  not  a  statement	13	None	replace
290	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.url().length()  <=  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.url().length()  <=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.url().length()  <=  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    <=    0)    {    	non-compiled	[CE]  not  a  statement	13	None	replace
291	[BUG]  [BUGGY]  if  (n!=  null  &&  n.name().equals(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n!=  null  &&  n.name().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n!=  null  &&  n.name().equals(alias))  {	  if    (n.refs!=    null    &&    n.name().equals(alias))    {    	non-compiled	[CE]  not  a  statement	4	None	replace
292	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias().length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias().length()  ==  0)  {	  if(n.refs!=    null    &&    n.alias().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	74	None	replace
293	[BUG]  [BUGGY]  if(alias!=  null  &&!alias.equals(n.fullName()))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&!alias.equals(n.fullName()))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&!alias.equals(n.fullName()))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
294	[BUG]  [BUGGY]  if(alias!=  null  &&!n.isName()  &&!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&!n.isName()  &&!n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&!n.isName()  &&!n.fullName().equals(alias))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
295	[BUG]  [BUGGY]  if(n.name()  ==  null  &&  n.refs!=  null  &&  n.name().length()  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.name()  ==  null  &&  n.refs!=  null  &&  n.name().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.name()  ==  null  &&  n.refs!=  null  &&  n.name().length()  ==  0)  {	  if(n.refs!=    null    &&    n.name().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
296	[BUG]  [BUGGY]  if(alias!=  null  &&  n.name().length()  ==  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.name().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.name().length()  ==  0)  {	  if(n.refs!=    null    &&    n.name().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
297	[BUG]  [BUGGY]  if(n!=  null  &&  n.name().length()  ==  0)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  n.name().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  n.name().length()  ==  0)  {	  if(n.refs!=    null    &&    n.name().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
298	[BUG]  [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.url().endsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.url().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  n.refs!=  null  &&  n.url().endsWith(alias))  {	  if(n.refs!=    null    &&    n.url().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	51	None	replace
299	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null  &&  n.fullName()!=  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null  &&  n.fullName()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs  ==  null  &&  n.fullName()!=  null)  {	  if(n.refs    ==    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	25	None	replace
300	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n.refs  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs  ==  null)  {	  if(n.refs    ==    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	25	None	replace
301	[BUG]  [BUGGY]  Node  p  =  n.getImplicitPrototype();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getImplicitPrototype();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getImplicitPrototype();	  Node    p    =    n.getPosition();    	non-compiled	[CE]  not  a  statement	39	None	replace
302	[BUG]  [BUGGY]  if(n.references  ==  null  ||  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.references  ==  null  ||  n.refs  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.references  ==  null  ||  n.refs  ==  null)  {	  if(n.refs    ==    null    ||    n.refs!=    null)    {    	non-compiled	[CE]  not  a  statement	28	None	replace
303	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs  ==  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs  ==  null  &&  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs  ==  null  &&  n.fullName().length()  >  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
304	[BUG]  [BUGGY]  if(alias!=  null  ||  n.refs!=  null  ||  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  ||  n.refs!=  null  ||  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  ||  n.refs!=  null  ||  n.fullName().length()  >  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
305	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >=  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >=  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
306	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.name()!=  null)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.name()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.name()!=  null)  {	  if(n.refs    ==    null    ||    n.name()!=    null)    {    	non-compiled	[CE]  not  a  statement	29	None	replace
307	[BUG]  [BUGGY]  if(n.name()  ==  null  ||  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.name()  ==  null  ||  n.refs  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.name()  ==  null  ||  n.refs  ==  null)  {	  if(n.refs    ==    null    ||    n.name()!=    null)    {    	non-compiled	[CE]  not  a  statement	29	None	replace
308	[BUG]  [BUGGY]  if  (n.references  ==  null  ||  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references  ==  null  ||  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references  ==  null  ||  n.fullName().equals(alias))  {	  if    (n.refs    ==    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
309	[BUG]  [BUGGY]  Node  r  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.removeFirstChild();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.removeFirstChild();	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	63	None	replace
310	[BUG]  [BUGGY]  if  (n!=  null  &&!n.refs.equals(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n!=  null  &&!n.refs.equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n!=  null  &&!n.refs.equals(alias))  {	  if    (n.refs!=    null    &&!n.refs.equals(alias))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
311	[BUG]  [BUGGY]  Node  r  =  n.getPrevious();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.getPrevious();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.getPrevious();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	66	None	replace
312	[BUG]  [BUGGY]  if  (n.references  ==  null  ||!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references  ==  null  ||!n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references  ==  null  ||!n.fullName().equals(alias))  {	  if    (n.refs    ==    null    ||!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
313	[BUG]  [BUGGY]  if(alias  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  >=  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  >=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  &&  n.refs!=  null  &&  n.fullName().length()  >=  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    >=    0)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
314	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.refs!=  null)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.refs!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.refs!=  null)  {	  if(n.refs!=    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	75	None	replace
315	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.isExtern()  &&  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  &&  n.isExtern()  &&  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.isExtern()  &&  n.fullName().equals(alias))  {	  if    (n!=    null    &&    n.refs!=    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	47	None	replace
316	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias().length()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias().length()  >  0)  {	  if(n.refs!=    null    &&    n.alias().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	74	None	replace
317	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getString().equals(alias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getString().equals(alias));  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getString().equals(alias));	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	43	None	replace
318	[BUG]  [BUGGY]  Node  p  =  n.getOwnerDocument();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getOwnerDocument();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getOwnerDocument();	  Node    p    =    n.getNode();    	non-compiled	[CE]  not  a  statement	45	None	replace
319	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	44	None	replace
320	[BUG]  [BUGGY]  if(n.refs!=  null  &&!n.fullName().trim().startsWith(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&!n.fullName().trim().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&!n.fullName().trim().startsWith(alias))  {	  if(n.refs!=    null    &&!n.fullName().startsWith(alias))    {    	non-compiled	[CE]  not  a  statement	73	None	replace
321	[BUG]  [BUGGY]  if(n.refs!=  null  &&!n.fullName().contains(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&!n.fullName().contains(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&!n.fullName().contains(alias))  {	  if(n.refs!=    null    &&!n.fullName().startsWith(alias))    {    	non-compiled	[CE]  not  a  statement	73	None	replace
322	[BUG]  [BUGGY]  if  (n.isExtern()  &&  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.isExtern()  &&  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.isExtern()  &&  n.fullName().equals(alias))  {	  if    (n.refs    ==    null    &&    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
323	[BUG]  [BUGGY]  if(n.refs!=  null  &&!n.fullName().trim().endsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&!n.fullName().trim().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&!n.fullName().trim().endsWith(alias))  {	  if(n.refs!=    null    &&!n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	71	None	replace
324	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.refs!=  null  &&  n.fullName().length()  ==  0)  {	  if(alias!=    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
325	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias()!=  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias()!=  null)  {	  if(n.refs    ==    null    ||    n.alias()!=    null)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
326	[BUG]  [BUGGY]  if(n.alias  ==  null  ||  n.refs!=  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.alias  ==  null  ||  n.refs!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.alias  ==  null  ||  n.refs!=  null)  {	  if(n.refs    ==    null    ||    n.alias()!=    null)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
327	[BUG]  [BUGGY]  if(n.refs!=  null  &&!n.rootName().startsWith(alias))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&!n.rootName().startsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&!n.rootName().startsWith(alias))  {	  if(n.refs!=    null    &&!n.rootName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	72	None	replace
328	[BUG]  [BUGGY]  if(n.refs!=  null  &&!n.rootName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&!n.rootName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&!n.rootName().endsWith(alias))  {	  if(n.refs!=    null    &&!n.rootName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	72	None	replace
329	[BUG]  [BUGGY]  if(n.refs!=  null  &&!n.rootName().equals(alias)||  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&!n.rootName().equals(alias)||  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&!n.rootName().equals(alias)||  n.fullName().equals(alias))  {	  if(n.refs!=    null    &&!n.rootName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	72	None	replace
330	[BUG]  [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  &&  n.refs!=  null  &&  n.fullName().length()  >  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
331	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs!=  null  ||  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs!=  null  ||  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs!=  null  ||  n.fullName().length()  >  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
332	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs  ==  null  ||  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs  ==  null  ||  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs  ==  null  ||  n.fullName().length()  ==  0)  {	  if(alias    ==    null    &&    n.refs!=    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	55	None	replace
333	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs  ==  null  ||  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs  ==  null  ||  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs  ==  null  ||  n.fullName().length()  >  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
334	[BUG]  [BUGGY]  if(n.references  ==  null  ||  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.references  ==  null  ||  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.references  ==  null  ||  n.fullName().length()  >  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
335	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.fullName().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.fullName().length()  >  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
336	[BUG]  [BUGGY]  if(n.references  ==  null  ||  n.fullName()  ==  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.references  ==  null  ||  n.fullName()  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.references  ==  null  ||  n.fullName()  ==  null)  {	  if(n.refs!=    null    ||    n.fullName()    ==    null)    {    	non-compiled	[CE]  not  a  statement	76	None	replace
337	[BUG]  [BUGGY]  if  (n.refs!=  null  &&!n.refs.contains(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  &&!n.refs.contains(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&!n.refs.contains(alias))  {	  if    (n.refs!=    null    &&!n.refs.equals(alias))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
338	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.refs!=  null  &&  n.refs  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.refs  ==  null)  {	  if    (n.refs!=    null    &&    n.refs.length    >    0)    {    	non-compiled	[CE]  not  a  statement	67	None	replace
339	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.url().endsWith(alias)||  n.url().endsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.url().endsWith(alias)||  n.url().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.url().endsWith(alias)||  n.url().endsWith(alias))  {	  if(n.refs!=    null    &&    n.url().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	51	None	replace
340	[BUG]  [BUGGY]  Name  p  =  n.getImmediateParentNode();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getImmediateParentNode();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getImmediateParentNode();	  Name    p    =    n.getReferenceName();    	non-compiled	[CE]  not  a  statement	41	None	replace
341	[BUG]  [BUGGY]  Node  rParent  =  n.cloneTree();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.cloneTree();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.cloneTree();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
342	[BUG]  [BUGGY]  Node  rParent  =  n.parent;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  rParent  =  n.parent;  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  rParent  =  n.parent;	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	64	None	replace
343	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.fullName().length()  <=  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.fullName().length()  <=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.fullName().length()  <=  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    <=    0)    {    	non-compiled	[CE]  not  a  statement	13	None	replace
344	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias.length()  <=  0)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias.length()  <=  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias.length()  <=  0)  {	  if(n.refs!=    null    &&    n.fullName().length()    <=    0)    {    	non-compiled	[CE]  not  a  statement	13	None	replace
345	[BUG]  [BUGGY]  if(n!=  null  ||  alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  ||  alias.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  ||  alias.length()  ==  0)  {	  if(alias!=    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
346	[BUG]  [BUGGY]  if(n!=  null  ||  alias.equals(n.refs))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  ||  alias.equals(n.refs))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  ||  alias.equals(n.refs))  {	  if(alias!=    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
347	[BUG]  [BUGGY]  if(n!=  null  ||  alias.length  ==  0)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n!=  null  ||  alias.length  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n!=  null  ||  alias.length  ==  0)  {	  if(alias!=    null    ||    n.refs    ==    null)    {    	non-compiled	[CE]  not  a  statement	61	None	replace
348	[BUG]  [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()  <  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  ||  n.fullName().length()  <  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  ||  n.fullName().length()  <  0)  {	  if(n.refs!=    null    ||    n.fullName().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
349	[BUG]  [BUGGY]  if(alias!=  null  &&!n.fullName().equals(alias.toString()))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&!n.fullName().equals(alias.toString()))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&!n.fullName().equals(alias.toString()))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
350	[BUG]  [BUGGY]  if(alias!=  null  &&!n.fullName().equals(alias.getQualifiedName()))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&!n.fullName().equals(alias.getQualifiedName()))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&!n.fullName().equals(alias.getQualifiedName()))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
351	[BUG]  [BUGGY]  if(alias!=  null  &&!n.fullName().equals(alias.getString()))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&!n.fullName().equals(alias.getString()))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&!n.fullName().equals(alias.getString()))  {	  if(alias!=    null    &&!n.fullName().equals(n.fullName()))    {    	non-compiled	[CE]  not  a  statement	62	None	replace
352	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getName().equals(alias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getName().equals(alias));  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getName().equals(alias));	  Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	65	None	replace
353	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString().equals(alias));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString().equals(alias));  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString().equals(alias));	  Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	65	None	replace
354	[BUG]  [BUGGY]  if(n.name()!=  null  &&  n.refs.length  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.name()!=  null  &&  n.refs.length  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.name()!=  null  &&  n.refs.length  >  0)  {	  if(n.refs!=    null    &&    n.name().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
355	[BUG]  [BUGGY]  if(n.refs  ==  null  &&  n.name().length()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs  ==  null  &&  n.name().length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  &&  n.name().length()  >  0)  {	  if(n.refs!=    null    &&    n.name().length()    >    0)    {    	non-compiled	[CE]  not  a  statement	68	None	replace
356	[BUG]  [BUGGY]  if(n.fullName()!=  null  &&!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.fullName()!=  null  &&!n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.fullName()!=  null  &&!n.fullName().equals(alias))  {	  if(n!=    null    &&!n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
357	[BUG]  [BUGGY]  Node  r  =  n.firstChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  r  =  n.firstChild();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  r  =  n.firstChild();	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	63	None	replace
358	[BUG]  [BUGGY]  if  (n.references!=  null  &&  n.refs!=  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references!=  null  &&  n.refs!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references!=  null  &&  n.refs!=  null)  {	  if    (n.references!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	57	None	replace
359	[BUG]  [BUGGY]  if  (n.references!=  null  &&  n.refs  ==  null)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.references!=  null  &&  n.refs  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.references!=  null  &&  n.refs  ==  null)  {	  if    (n.references!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	57	None	replace
360	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias!=  null  &&  n.alias.length()  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias!=  null  &&  n.alias.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias!=  null  &&  n.alias.length()  ==  0)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
361	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias!=  null  &&  n.alias.length()  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias!=  null  &&  n.alias.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias!=  null  &&  n.alias.length()  >  0)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
362	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.alias  ==  null)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.alias  ==  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.alias  ==  null)  {	  if(n.refs!=    null    &&    n.alias.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	70	None	replace
363	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs.length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.refs.length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs.length()  ==  0)  {	  if(n.refs    ==    null    ||    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
364	[BUG]  [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.refs.length  >  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias!=  null  &&  n.refs!=  null  &&  n.refs.length  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias!=  null  &&  n.refs!=  null  &&  n.refs.length  >  0)  {	  if(alias!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
365	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.refs.length()  >  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs.length()  >  0)  {	  if(alias!=    null    &&    n.refs.length()    >    0)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
366	[BUG]  [BUGGY]  if(n.references  ==  null  ||  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.references  ==  null  ||  n.fullName().length()  ==  0)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.references  ==  null  ||  n.fullName().length()  ==  0)  {	  if(n.refs    ==    null    &&    n.fullName().length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
367	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.name().indexOf(alias)>  -1)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.refs!=  null  &&  n.name().indexOf(alias)>  -1)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.name().indexOf(alias)>  -1)  {	  if(n.refs!=    null    &&    n.name().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
368	[BUG]  [BUGGY]  Node  p  =  n.getAncestor(refs);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getAncestor(refs);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestor(refs);	  Node    p    =    n.getAncestor(alias);    	non-compiled	[CE]  not  a  statement	42	None	replace
369	[BUG]  [BUGGY]  Node  p  =  n.getAncestor(params);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getAncestor(params);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestor(params);	  Node    p    =    n.getAncestor(alias);    	non-compiled	[CE]  not  a  statement	42	None	replace
370	[BUG]  [BUGGY]  Node  p  =  n.getAncestor(a);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getAncestor(a);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestor(a);	  Node    p    =    n.getAncestor(alias);    	non-compiled	[CE]  not  a  statement	42	None	replace
371	[BUG]  [BUGGY]  Node  p  =  n.getAncestor(as);  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getAncestor(as);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getAncestor(as);	  Node    p    =    n.getAncestor(alias);    	non-compiled	[CE]  not  a  statement	42	None	replace
372	[BUG]  [BUGGY]  Node  p  =  nameMap.get(alias,  n.refs);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  nameMap.get(alias,  n.refs);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  nameMap.get(alias,  n.refs);	  Node    p    =    nameMap.get(alias);    	non-compiled	[CE]  not  a  statement	46	None	replace
373	[BUG]  [BUGGY]  Node  p  =  nameMap.get(alias,  n.name);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  nameMap.get(alias,  n.name);  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  nameMap.get(alias,  n.name);	  Node    p    =    nameMap.get(alias);    	non-compiled	[CE]  not  a  statement	46	None	replace
374	[BUG]  [BUGGY]  Node  p  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.removeFirstChild();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.removeFirstChild();	  Node    p    =    n.getNext();    	non-compiled	[CE]  not  a  statement	40	None	replace
375	[BUG]  [BUGGY]  if(n.references  ==  null  ||  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.references  ==  null  ||  n.fullName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.references  ==  null  ||  n.fullName().endsWith(alias))  {	  if(n.refs    ==    null    &&    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
376	[BUG]  [BUGGY]  Name  p  =  n.getNamespaceURI();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Name  p  =  n.getNamespaceURI();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Name  p  =  n.getNamespaceURI();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	38	None	replace
377	[BUG]  [BUGGY]  Node  p  =  n.refs.getFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.refs.getFirstChild();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.refs.getFirstChild();	  Node    p    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	37	None	replace
378	[BUG]  [BUGGY]  Node  p  =  n.getPreviousSibling();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getPreviousSibling();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getPreviousSibling();	  Node    p    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	37	None	replace
379	[BUG]  [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null  ||  n.fullName()!=  null)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(alias  ==  null  ||  n.refs  ==  null  ||  n.fullName()!=  null)  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(alias  ==  null  ||  n.refs  ==  null  ||  n.fullName()!=  null)  {	  if(n.refs    ==    null    &&    n.fullName()!=    null)    {    	non-compiled	[CE]  not  a  statement	25	None	replace
380	[BUG]  [BUGGY]  if  (n.isExtern()  ||  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if  (n.isExtern()  ||  n.fullName().equals(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.isExtern()  ||  n.fullName().equals(alias))  {	  if    (n.refs!=    null    ||    n.fullName().equals(alias))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
381	[BUG]  [BUGGY]  if(n.references!=  null  &&  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.references!=  null  &&  n.fullName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.references!=  null  &&  n.fullName().endsWith(alias))  {	  if(n.refs!=    null    ||    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
382	[BUG]  [BUGGY]  if(n.isReferenced()  ||  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  if(n.isReferenced()  ||  n.fullName().endsWith(alias))  {  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.isReferenced()  ||  n.fullName().endsWith(alias))  {	  if(n.refs!=    null    ||    n.fullName().endsWith(alias))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
383	[BUG]  [BUGGY]  Node  p  =  n.getImmediateParentNode();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getImmediateParentNode();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getImmediateParentNode();	  Node    p    =    n.getPosition();    	non-compiled	[CE]  not  a  statement	39	None	replace
384	[BUG]  [BUGGY]  Node  p  =  n.getOwnerDoc();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesTo(Name  n,  String  alias)  {      [BUGGY]  Node  p  =  n.getOwnerDoc();  [BUGGY]      String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	Node  p  =  n.getOwnerDoc();	  Node    p    =    n.getPosition();    	non-compiled	[CE]  not  a  statement	39	None	replace
