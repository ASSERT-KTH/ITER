bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if  (n.refs!=  null  &&  n.fullName().equals(alias))  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.fullName().equals(alias))  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
2	[BUG]  [BUGGY]  if  (n.refs  ==  null)  {  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if  (n.refs  ==  null)  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs  ==  null)  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
3	[BUG]  [BUGGY]  if  (n.refs!=  null  ||!n.refs.equals(alias))  {  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if  (n.refs!=  null  ||!n.refs.equals(alias))  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||!n.refs.equals(alias))  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
4	[BUG]  [BUGGY]  if  (n.refs!=  null  &&  n.refs.length()  >  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if  (n.refs!=  null  &&  n.refs.length()  >  0)  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  &&  n.refs.length()  >  0)  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
5	[BUG]  [BUGGY]  if  (n.refs!=  null  ||!n.refs.isEmpty())  {  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if  (n.refs!=  null  ||!n.refs.isEmpty())  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||!n.refs.isEmpty())  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
6	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]    [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	  	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
7	[BUG]  [BUGGY]  if  (n.refs!=  null  ||!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if  (n.refs!=  null  ||!n.fullName().equals(alias))  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if  (n.refs!=  null  ||!n.fullName().equals(alias))  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
8	[BUG]  [BUGGY]  if(n.refs  ==  null  ||  n.fullName()!=  null)  {  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if(n.refs  ==  null  ||  n.fullName()!=  null)  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs  ==  null  ||  n.fullName()!=  null)  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
9	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if(n.refs!=  null  &&  n.fullName().length()  ==  0)  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.fullName().length()  ==  0)  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
10	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.fullName().length()  >  0)  {  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if(n.refs!=  null  &&  n.fullName().length()  >  0)  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.fullName().length()  >  0)  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
11	[BUG]  [BUGGY]  if(n.refs!=  null  &&  n.fullName().endsWith(alias))  {  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if(n.refs!=  null  &&  n.fullName().endsWith(alias))  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&  n.fullName().endsWith(alias))  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
12	[BUG]  [BUGGY]  if(n.refs!=  null  &&!n.fullName().equals(alias))  {  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  private  void  flattenReferencesTo(Name  n,  String  alias)  {  [BUGGY]  if(n.refs!=  null  &&!n.fullName().equals(alias))  {  [BUGGY]  String  originalName  =  n.fullName();  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	317	317	8	replace	if(n.refs!=  null  &&!n.fullName().equals(alias))  {	if  (n.refs  !=  null)  {  	non-compiled	[CE]  not  a  statement	54	None	replace
