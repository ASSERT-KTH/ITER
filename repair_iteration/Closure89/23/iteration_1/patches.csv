bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Name  p  :  n.props.names())  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.names())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.names())  {	  for(Name    p    :    n.props.values())    {    	non-compiled	[CE]  not  a  statement	4	None	replace
2	[BUG]  [BUGGY]  For(Name  p  :  n.props.values())  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(Name  p  :  n.props.values())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(Name  p  :  n.props.values())  {	  for(Name    p    :    n.props.values())    {    	non-compiled	[CE]  not  a  statement	4	None	replace
3	[BUG]  [BUGGY]  for(Name  p  :  n.name.values())  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.name.values())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.name.values())  {	  for(Name    p    :    n.props.values())    {    	non-compiled	[CE]  not  a  statement	4	None	replace
4	[BUG]  [BUGGY]  Name  p  =  n.props.get(alias);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  Name  p  =  n.props.get(alias);  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	Name  p  =  n.props.get(alias);	      	non-compiled	[CE]  not  a  statement	5	None	replace
5	[BUG]  [BUGGY]  Node  p  =  n.props.getFirstChild();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  Node  p  =  n.props.getFirstChild();  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	Node  p  =  n.props.getFirstChild();	      	non-compiled	[CE]  not  a  statement	5	None	replace
6	[BUG]  [BUGGY]  Node  p  =  n.props.get(alias);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  Node  p  =  n.props.get(alias);  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	Node  p  =  n.props.get(alias);	      	non-compiled	[CE]  not  a  statement	5	None	replace
7	[BUG]  [BUGGY]  Node  p.name  =  n.props.getName();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  Node  p.name  =  n.props.getName();  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	Node  p.name  =  n.props.getName();	      	non-compiled	[CE]  not  a  statement	5	None	replace
8	[BUG]  [BUGGY]  p.name  =  n.props.getName();  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  p.name  =  n.props.getName();  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	p.name  =  n.props.getName();	      	non-compiled	[CE]  not  a  statement	5	None	replace
9	[BUG]  [BUGGY]  Node  p  =  n.props.getParent();  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  Node  p  =  n.props.getParent();  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	Node  p  =  n.props.getParent();	      	non-compiled	[CE]  not  a  statement	5	None	replace
10	[BUG]  [BUGGY]  Name  p  =  n.props.getName();  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  Name  p  =  n.props.getName();  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	Name  p  =  n.props.getName();	      	non-compiled	[CE]  not  a  statement	5	None	replace
11	[BUG]  [BUGGY]  for(Name  p  :  n.props.name,  numStubs)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.name,  numStubs)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.name,  numStubs)  {	  for(Name    p    :    n.props.name)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
12	[BUG]  [BUGGY]  for(Name  p  :  n.props.name,  addAfter)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.name,  addAfter)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.name,  addAfter)  {	  for(Name    p    :    n.props.name)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
13	[BUG]  [BUGGY]  for(Name  p  :  n.props.name,  alias)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.name,  alias)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.name,  alias)  {	  for(Name    p    :    n.props.name)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
14	[BUG]  [BUGGY]  for(String  p  :  n.props.name)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(String  p  :  n.props.name)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(String  p  :  n.props.name)  {	  for(String    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
15	[BUG]  [BUGGY]  for(int  p  :  n.props)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(int  p  :  n.props)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(int  p  :  n.props)  {	  for(String    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
16	[BUG]  [BUGGY]  for(String  p  :  n.props,  numStubs)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(String  p  :  n.props,  numStubs)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(String  p  :  n.props,  numStubs)  {	  for(String    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
17	[BUG]  [BUGGY]  for(String  prop  :  n.props)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(String  prop  :  n.props)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(String  prop  :  n.props)  {	  for(String    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
18	[BUG]  [BUGGY]  for(String  p  :  n.props,  addAfter)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(String  p  :  n.props,  addAfter)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(String  p  :  n.props,  addAfter)  {	  for(String    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
19	[BUG]  [BUGGY]  for(String  p  :  n.props.keySet())  {  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(String  p  :  n.props.keySet())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(String  p  :  n.props.keySet())  {	  for(String    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
20	[BUG]  [BUGGY]  for(Name  p  :  n.props.nameSet())  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.nameSet())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.nameSet())  {	  for(Name    p    :    n.props.keySet())    {    	non-compiled	[CE]  not  a  statement	3	None	replace
21	[BUG]  [BUGGY]  For(Name  p  :  n.props.keySet())  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(Name  p  :  n.props.keySet())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(Name  p  :  n.props.keySet())  {	  for(Name    p    :    n.props.keySet())    {    	non-compiled	[CE]  not  a  statement	3	None	replace
22	[BUG]  [BUGGY]  for(Name  p  :  n.props.entrySet())  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.entrySet())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.entrySet())  {	  for(Name    p    :    n.props.keySet())    {    	non-compiled	[CE]  not  a  statement	3	None	replace
23	[BUG]  [BUGGY]  for(Name  p  :  parent.props.keySet())  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  parent.props.keySet())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  parent.props.keySet())  {	  for(Name    p    :    n.props.keySet())    {    	non-compiled	[CE]  not  a  statement	3	None	replace
24	[BUG]  [BUGGY]  for(Name  p  :  n.props.subList(numStubs))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.subList(numStubs))  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.subList(numStubs))  {	  for(Name    p    :    n.props.asList())    {    	non-compiled	[CE]  not  a  statement	8	None	replace
25	[BUG]  [BUGGY]  for(Name  p  :  n.props.asString())  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.asString())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.asString())  {	  for(Name    p    :    n.props.asList())    {    	non-compiled	[CE]  not  a  statement	8	None	replace
26	[BUG]  [BUGGY]  for(Name  p  :  n.props.getName(),  numStubs)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.getName(),  numStubs)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.getName(),  numStubs)  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
27	[BUG]  [BUGGY]  For(Name  p  :  n.props.getName())  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(Name  p  :  n.props.getName())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(Name  p  :  n.props.getName())  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
28	[BUG]  [BUGGY]  for(Name  p  :  n.props.getName()  +  1)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.getName()  +  1)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.getName()  +  1)  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
29	[BUG]  [BUGGY]  for(Name  p  :  parent.props.getName())  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  parent.props.getName())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  parent.props.getName())  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
30	[BUG]  [BUGGY]  for(Name  p  :  n.name.getName())  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.name.getName())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.name.getName())  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
31	[BUG]  [BUGGY]  For(Name  p  :  n.props,  addAfter)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(Name  p  :  n.props,  addAfter)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(Name  p  :  n.props,  addAfter)  {	  For(Name    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
32	[BUG]  [BUGGY]  For(Name  p  :  n.props,  numStubs)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(Name  p  :  n.props,  numStubs)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(Name  p  :  n.props,  numStubs)  {	  For(Name    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
33	[BUG]  [BUGGY]  For(Name  p  :  n.props.name)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(Name  p  :  n.props.name)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(Name  p  :  n.props.name)  {	  For(Name    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
34	[BUG]  [BUGGY]  For(String  p  :  n.props)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(String  p  :  n.props)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(String  p  :  n.props)  {	  For(Name    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
35	[BUG]  [BUGGY]  For(Name  p  :  n.props,  parent)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(Name  p  :  n.props,  parent)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(Name  p  :  n.props,  parent)  {	  For(Name    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
36	[BUG]  [BUGGY]  For(Name  p  :  n.props,  nameMap)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(Name  p  :  n.props,  nameMap)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(Name  p  :  n.props,  nameMap)  {	  For(Name    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
37	[BUG]  [BUGGY]  Node  p  =  n.props.get(numStubs);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  Node  p  =  n.props.get(numStubs);  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	Node  p  =  n.props.get(numStubs);	      	non-compiled	[CE]  not  a  statement	5	None	replace
38	[BUG]  [BUGGY]  Name  p  =  n.props.getFirstChild();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  Name  p  =  n.props.getFirstChild();  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	Name  p  =  n.props.getFirstChild();	      	non-compiled	[CE]  not  a  statement	5	None	replace
39	[BUG]  [BUGGY]  Node  p  =  n.props.getNode();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  Node  p  =  n.props.getNode();  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	Node  p  =  n.props.getNode();	      	non-compiled	[CE]  not  a  statement	5	None	replace
40	[BUG]  [BUGGY]  for(Name  p  :  n.props.name,  p.name)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.name,  p.name)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.name,  p.name)  {	  for(Name    p    :    n.props.name)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
41	[BUG]  [BUGGY]  For(Name  p  :  n.props,  alias)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(Name  p  :  n.props,  alias)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(Name  p  :  n.props,  alias)  {	  For(Name    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
42	[BUG]  [BUGGY]  for(Name  p  :  n.props.list())  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.list())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.list())  {	  for(Name    p    :    n.props.asList())    {    	non-compiled	[CE]  not  a  statement	8	None	replace
43	[BUG]  [BUGGY]  for(Name  p  :  n.props.get(alias))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.get(alias))  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.get(alias))  {	  for(Name    p    :    n.props.asList())    {    	non-compiled	[CE]  not  a  statement	8	None	replace
44	[BUG]  [BUGGY]  for(Name  p  :  n.props,  parent.getName())  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props,  parent.getName())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props,  parent.getName())  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
45	[BUG]  [BUGGY]  for(Name  p  :  n.props.getParent())  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.getParent())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.getParent())  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
46	[BUG]  [BUGGY]  Node  p  =  n.props.removeFirstChild();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  Node  p  =  n.props.removeFirstChild();  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	Node  p  =  n.props.removeFirstChild();	      	non-compiled	[CE]  not  a  statement	5	None	replace
47	[BUG]  [BUGGY]  for(String  p  :  n.props.values())  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(String  p  :  n.props.values())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(String  p  :  n.props.values())  {	  for(String    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
48	[BUG]  [BUGGY]  for(String  p  :  n.props.asList())  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(String  p  :  n.props.asList())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(String  p  :  n.props.asList())  {	  for(String    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
49	[BUG]  [BUGGY]  for(String  p  :  n.props.asPath())  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(String  p  :  n.props.asPath())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(String  p  :  n.props.asPath())  {	  for(String    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
50	[BUG]  [BUGGY]  for(String  p  :  n.props.getName())  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(String  p  :  n.props.getName())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(String  p  :  n.props.getName())  {	  for(String    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
51	[BUG]  [BUGGY]  for(Name  p  :  n.props.toArray(new  Name[p.name]))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.toArray(new  Name[p.name]))  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.toArray(new  Name[p.name]))  {	  for(Name    p    :    n.props.asList())    {    	non-compiled	[CE]  not  a  statement	8	None	replace
52	[BUG]  [BUGGY]  For(Name  p  :  n.props.asPath())  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  For(Name  p  :  n.props.asPath())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	For(Name  p  :  n.props.asPath())  {	  For(Name    p    :    n.props)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
53	[BUG]  [BUGGY]  for(Name  p  :  n.props.name,  propAlias)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.name,  propAlias)  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.name,  propAlias)  {	  for(Name    p    :    n.props.name)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
54	[BUG]  [BUGGY]  for(Name  p  :  n.props.getNamespaceURI())  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.getNamespaceURI())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.getNamespaceURI())  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
55	[BUG]  [BUGGY]  for(Name  p  :  n.props.getNamespace())  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.getNamespace())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.getNamespace())  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
56	[BUG]  [BUGGY]  for(Name  p  :  n.props.getNameId())  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.getNameId())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.getNameId())  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
57	[BUG]  [BUGGY]  for(Name  p  :  n.props.getPath())  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {    [BUGGY]  for(Name  p  :  n.props.getPath())  {  [BUGGY]    if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	821	821	8	replace	for(Name  p  :  n.props.getPath())  {	  for(Name    p    :    n.props.getName())    {    	non-compiled	[CE]  not  a  statement	2	None	replace
