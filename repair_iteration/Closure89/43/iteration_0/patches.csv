bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {    [BUGGY]  appendPropForAlias(alias,  p.name));  [BUGGY]  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name));	collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  	non-compiled	[CE]  not  a  statement	88	None	replace
2	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {    [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p);	collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  	non-compiled	[CE]  not  a  statement	88	None	replace
3	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {    [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration);	collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  	non-compiled	[CE]  not  a  statement	88	None	replace
4	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {    [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name));  [BUGGY]  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name));	collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  	non-compiled	[CE]  not  a  statement	88	None	replace
5	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {    [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name));  [BUGGY]  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name));	collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  	non-compiled	[CE]  not  a  statement	88	None	replace
6	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {    [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n);	collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  	non-compiled	[CE]  not  a  statement	88	None	replace
7	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]                AssertionFailedError  [CONTEXT]  boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {    [BUGGY]    [BUGGY]  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	  	collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  	non-compiled	[CE]  not  a  statement	88	None	replace
8	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {    [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p);	collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  	non-compiled	[CE]  not  a  statement	88	None	replace
9	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {    [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  [BUGGY]  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));	collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  	non-compiled	[CE]  not  a  statement	88	None	replace
10	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {    [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name));  [BUGGY]  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name));	collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  	non-compiled	[CE]  not  a  statement	88	None	replace
