bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	4	None	replace
2	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	4	None	replace
3	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	4	None	replace
4	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.inExterns);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.inExterns);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	4	None	replace
5	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	4	None	replace
6	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendPropForAlias(alias,  p.name),  p);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	2	None	replace
7	[BUG]  [BUGGY]  p,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p,  appendPropForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p,  appendPropForAlias(alias,  p.name));	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	2	None	replace
8	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	3	None	replace
9	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name),  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	3	None	replace
10	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name));	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	3	None	replace
11	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.declaration));	  appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
12	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name));	  appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
13	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.inExterns));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendPropForAlias(alias,  p.name,  p.inExterns));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.inExterns));	  appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
14	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendPropForAlias(alias,  p.name,  p.type));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.type));	  appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
15	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	8	None	replace
16	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	8	None	replace
17	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  p,  appendPropForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	8	None	replace
18	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.inExterns);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p.inExterns);	  p.declaration.node,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	10	None	replace
19	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p.type);	  p.declaration.node,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	10	None	replace
20	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.parent);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p.parent);	  p.declaration.node,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	10	None	replace
21	[BUG]  [BUGGY]  appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	5	None	replace
22	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	5	None	replace
23	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	5	None	replace
24	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	5	None	replace
25	[BUG]  [BUGGY]  appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	5	None	replace
26	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	6	None	replace
27	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	6	None	replace
28	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendPropForAlias(alias,  p.name),  n);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  n);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	6	None	replace
29	[BUG]  [BUGGY]  p.name,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.name,  appendPropForAlias(alias,  p.name);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  appendPropForAlias(alias,  p.name);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	6	None	replace
30	[BUG]  [BUGGY]  Name  p  =  n.getName();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  Name  p  =  n.getName();  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getName();	      	non-compiled	[CE]  not  a  statement	7	None	replace
31	[BUG]  [BUGGY]  Name  p  =  p.getName();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  Name  p  =  p.getName();  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.getName();	      	non-compiled	[CE]  not  a  statement	7	None	replace
32	[BUG]  [BUGGY]  p.name,  p.declaration.node.getParent().getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.name,  p.declaration.node.getParent().getType()  ==  Token.NAME);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getParent().getType()  ==  Token.NAME);	      	non-compiled	[CE]  not  a  statement	7	None	replace
33	[BUG]  [BUGGY]  Name  p  =(Name)n.props.get(p);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  Name  p  =(Name)n.props.get(p);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.get(p);	      	non-compiled	[CE]  not  a  statement	7	None	replace
34	[BUG]  [BUGGY]  Name  p  =  n.getPropertyName();  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  Name  p  =  n.getPropertyName();  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getPropertyName();	      	non-compiled	[CE]  not  a  statement	7	None	replace
35	[BUG]  [BUGGY]  p.name,  p.declaration.node.getParent().getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.name,  p.declaration.node.getParent().getType()  ==  Token.FUNCTION);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getParent().getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  not  a  statement	7	None	replace
36	[BUG]  [BUGGY]  p.name,  p.declaration.node.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.name,  p.declaration.node.getType()  ==  Token.NAME);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getType()  ==  Token.NAME);	      	non-compiled	[CE]  not  a  statement	7	None	replace
37	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	9	None	replace
38	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name));	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	9	None	replace
39	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	9	None	replace
40	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	9	None	replace
41	[BUG]  [BUGGY]  p.name,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.name,  nForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  nForAlias(alias,  p.name));	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	9	None	replace
42	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	9	None	replace
43	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	9	None	replace
44	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.inExterns);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.inExterns);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	9	None	replace
45	[BUG]  [BUGGY]  appendDeclarationForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationForAlias(alias,  p.name));	  appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
46	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration.node;  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration.node  =  p.declaration.node;  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration.node;	      	non-compiled	[CE]  not  a  statement	7	None	replace
47	[BUG]  [BUGGY]  alias  =  p.getName();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  alias  =  p.getName();  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	alias  =  p.getName();	      	non-compiled	[CE]  not  a  statement	7	None	replace
48	[BUG]  [BUGGY]  p.declaration.node,  p.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration.node,  p.name);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  p.name);	      	non-compiled	[CE]  not  a  statement	7	None	replace
49	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration.node.getParent();  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration.node  =  p.declaration.node.getParent();  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration.node.getParent();	      	non-compiled	[CE]  not  a  statement	7	None	replace
50	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	3	None	replace
51	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.inExterns);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.inExterns);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	5	None	replace
52	[BUG]  [BUGGY]  appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	5	None	replace
53	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	4	None	replace
54	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	8	None	replace
55	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.declaration);	  appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
56	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name));	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	5	None	replace
57	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	5	None	replace
58	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	4	None	replace
59	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p);	  p.declaration.node,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	10	None	replace
60	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	2	None	replace
61	[BUG]  [BUGGY]  if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	9	None	replace
62	[BUG]  [BUGGY]  appendDeclaration(p,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclaration(p,  nForAlias(alias,  p.name));  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(p,  nForAlias(alias,  p.name));	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	9	None	replace
63	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	3	None	replace
64	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	8	None	replace
65	[BUG]  [BUGGY]  p.name  =  p.getName();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.name  =  p.getName();  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name  =  p.getName();	      	non-compiled	[CE]  not  a  statement	7	None	replace
66	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration.node.getFirstChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {      [BUGGY]  p.declaration.node  =  p.declaration.node.getFirstChild();  [BUGGY]    p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration.node.getFirstChild();	      	non-compiled	[CE]  not  a  statement	7	None	replace
