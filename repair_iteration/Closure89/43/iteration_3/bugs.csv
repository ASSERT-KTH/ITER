bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	2	None	replace
2	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name),  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	2	None	replace
3	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  n);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  n);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	2	None	replace
4	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  p,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(n,    p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	17	None	replace
5	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  p,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(n,    p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	17	None	replace
6	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  n,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  n,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  n,  appendPropForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(n,    p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	17	None	replace
7	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  p,  appendPropForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(n,    p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	17	None	replace
8	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  n,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  n,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  n,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(n,    p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	17	None	replace
9	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  nameMap,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  nameMap,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  nameMap,  appendPropForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(n,    p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	17	None	replace
10	[BUG]  [BUGGY]  p.name,  p.node.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.node.getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.node.getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
11	[BUG]  [BUGGY]  name,  p.declaration.node.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  name,  p.declaration.node.getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	name,  p.declaration.node.getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
12	[BUG]  [BUGGY]  p.name,  p.declaration.node.getType()!=  Token.NAME);  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getType()!=  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getType()!=  Token.NAME);	  p.name,    p.declaration.node.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
13	[BUG]  [BUGGY]  p.name,  n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  n.getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  n.getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
14	[BUG]  [BUGGY]  alias  =  p.name;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  alias  =  p.name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	alias  =  p.name;	  alias    =    p.getName();    	non-compiled	[CE]  not  a  statement	47	None	replace
15	[BUG]  [BUGGY]  alias  =  p.name.getName();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  alias  =  p.name.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	alias  =  p.name.getName();	  alias    =    p.getName();    	non-compiled	[CE]  not  a  statement	47	None	replace
16	[BUG]  [BUGGY]  alias  =  p.name.toLowerCase();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  alias  =  p.name.toLowerCase();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	alias  =  p.name.toLowerCase();	  alias    =    p.getName();    	non-compiled	[CE]  not  a  statement	47	None	replace
17	[BUG]  [BUGGY]  alias  =  p.declaration.getName();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  alias  =  p.declaration.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	alias  =  p.declaration.getName();	  alias    =    p.getName();    	non-compiled	[CE]  not  a  statement	47	None	replace
18	[BUG]  [BUGGY]  alias  =  p.getName()  + ", "  +  p.name;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  alias  =  p.getName()  + ", "  +  p.name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	alias  =  p.getName()  + ", "  +  p.name;	  alias    =    p.getName();    	non-compiled	[CE]  not  a  statement	47	None	replace
19	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name,  p.declaration));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameForAlias(alias,  p.name,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name,  p.declaration));	  appendNameForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
20	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name),  p.declaration);	  appendNameForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
21	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name),  p);	  appendNameForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
22	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name,  p.inExterns));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameForAlias(alias,  p.name,  p.inExterns));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name,  p.inExterns));	  appendNameForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
23	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name,  p.type));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameForAlias(alias,  p.name,  p.type));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name,  p.type));	  appendNameForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
24	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameForAlias(alias,  p.name),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name),  p.inExterns);	  appendNameForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
25	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	16	None	replace
26	[BUG]  [BUGGY]  appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	16	None	replace
27	[BUG]  [BUGGY]  appendSimpleDeclaration(p,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendSimpleDeclaration(p,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendSimpleDeclaration(p,  appendPropForAlias(alias,  p.name),  p);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	16	None	replace
28	[BUG]  [BUGGY]  appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	16	None	replace
29	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  p.declaration));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.type,  p.declaration));	  appendPropForAlias(alias,    p.name,    p.type));    	non-compiled	[CE]  not  a  statement	14	None	replace
30	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  p.inExterns));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  p.inExterns));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.type,  p.inExterns));	  appendPropForAlias(alias,    p.name,    p.type));    	non-compiled	[CE]  not  a  statement	14	None	replace
31	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type),  p.declaration);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.type),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.type),  p.declaration);	  appendPropForAlias(alias,    p.name,    p.type));    	non-compiled	[CE]  not  a  statement	14	None	replace
32	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  n.props));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  n.props));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.type,  n.props));	  appendPropForAlias(alias,    p.name,    p.type));    	non-compiled	[CE]  not  a  statement	14	None	replace
33	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type),  p.inExterns);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.type),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.type),  p.inExterns);	  appendPropForAlias(alias,    p.name,    p.type));    	non-compiled	[CE]  not  a  statement	14	None	replace
34	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  p.statement));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  p.statement));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.type,  p.statement));	  appendPropForAlias(alias,    p.name,    p.type));    	non-compiled	[CE]  not  a  statement	14	None	replace
35	[BUG]  [BUGGY]  appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p.declaration);	  appendNameAndDescendants(name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	25	None	replace
36	[BUG]  [BUGGY]  appendNameAndDescendants(n,  name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n,  name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	25	None	replace
37	[BUG]  [BUGGY]  appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p.type);	  appendNameAndDescendants(name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	25	None	replace
38	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(n,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	53	None	replace
39	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.type);	  appendDeclarationOfNameAndDescendants(n,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	53	None	replace
40	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.statement);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.statement);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p.statement);	  p.declaration.node,    appendPropForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	18	None	replace
41	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.declaration.node);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.declaration.node);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p.declaration.node);	  p.declaration.node,    appendPropForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	18	None	replace
42	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  pForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  pForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  pForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	54	None	replace
43	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n);	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	54	None	replace
44	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  pForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  pForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  pForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	54	None	replace
45	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(name,  pForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(name,  pForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(name,  pForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	54	None	replace
46	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	40	None	replace
47	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name),  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	40	None	replace
48	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.name,  p.declaration);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.name,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(n,  p.name,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	40	None	replace
49	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  n.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  n.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  n.name,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
50	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p.name,  p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p.name,  p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p.name,  p.name,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
51	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.declaration));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.declaration));	  appendDeclarationOfNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
52	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
53	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.type));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.type));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.type));	  appendDeclarationOfNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
54	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p.name,  n,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p.name,  n,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p.name,  n,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
55	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
56	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
57	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.inExterns);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.inExterns);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
58	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.statement);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.statement);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.statement);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
59	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
60	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
61	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  p.declaration);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	58	None	replace
62	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.parent);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.parent);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	58	None	replace
63	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  n);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  n);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	58	None	replace
64	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  p.inExterns);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  p.inExterns);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	58	None	replace
65	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);	  appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	8	None	replace
66	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p.declaration,  p.inExterns);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  p.declaration,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p.declaration,  p.inExterns);	  appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	8	None	replace
67	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p.node,  p.declaration);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  p.node,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p.node,  p.declaration);	  appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	8	None	replace
68	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p.statement);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  p.statement);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p.statement);	  appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	8	None	replace
69	[BUG]  [BUGGY]  p.name,  p.declaration.node.getName().getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getName().getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getName().getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	32	None	replace
70	[BUG]  [BUGGY]  p.name,  p.declaration.node.getNext().getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getNext().getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getNext().getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	32	None	replace
71	[BUG]  [BUGGY]  name,  p.declaration.node.getParent().getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  name,  p.declaration.node.getParent().getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	name,  p.declaration.node.getParent().getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	32	None	replace
72	[BUG]  [BUGGY]  p.name,  p.node.getParent().getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.node.getParent().getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.node.getParent().getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	32	None	replace
73	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props);	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	37	None	replace
74	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  p.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  p.name,  p.name);	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	37	None	replace
75	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	37	None	replace
76	[BUG]  [BUGGY]  Name  p  =  nForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  nForAlias(alias,  p.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  nForAlias(alias,  p.name);	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
77	[BUG]  [BUGGY]  AssertionFailedToDeclaration(p.name,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  AssertionFailedToDeclaration(p.name,  nForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	AssertionFailedToDeclaration(p.name,  nForAlias(alias,  p.name));	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
78	[BUG]  [BUGGY]  p.name  =  nForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name  =  nForAlias(alias,  p.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name  =  nForAlias(alias,  p.name);	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
79	[BUG]  [BUGGY]  AssertionError.make(p.name,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  AssertionError.make(p.name,  nForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	AssertionError.make(p.name,  nForAlias(alias,  p.name));	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(p.name!=  null);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Preconditions.checkState(p.name!=  null);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Preconditions.checkState(p.name!=  null);	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
81	[BUG]  [BUGGY]  p.name  =  nForAlias(alias,  p.name)?  null  :  p.name;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name  =  nForAlias(alias,  p.name)?  null  :  p.name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name  =  nForAlias(alias,  p.name)?  null  :  p.name;	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
82	[BUG]  [BUGGY]  p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  appendPropForAlias(alias,  p.name));	  p.name,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	29	None	replace
83	[BUG]  [BUGGY]  name,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  name,  appendPropForAlias(alias,  p.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	name,  appendPropForAlias(alias,  p.name);	  p.name,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	29	None	replace
84	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name);	  p.name,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	29	None	replace
85	[BUG]  [BUGGY]  p.name,  appendPropForAlias(alias,  p.type);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  appendPropForAlias(alias,  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  appendPropForAlias(alias,  p.type);	  p.name,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	29	None	replace
86	[BUG]  [BUGGY]  Name  p  =(Name)n.props.get(p.name);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.get(p.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.get(p.name);	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
87	[BUG]  [BUGGY]  Name  p  =(Name)n.props.get(p  +  1);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.get(p  +  1);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.get(p  +  1);	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
88	[BUG]  [BUGGY]  Name  p  =(Name)n.props.get(p,  n.name);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.get(p,  n.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.get(p,  n.name);	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
89	[BUG]  [BUGGY]  Name  p  =(Name)n.props.get(0);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.get(0);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.get(0);	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
90	[BUG]  [BUGGY]  Name  p  =(Name)n.props.getValue(p);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.getValue(p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.getValue(p);	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
91	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  n,  p.declaration);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  n,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  n,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n,    p.declaration);    	non-compiled	[CE]  not  a  statement	27	None	replace
92	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n,    p.declaration);    	non-compiled	[CE]  not  a  statement	27	None	replace
93	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  n,  p.declaration);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  n,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name),  n,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n,    p.declaration);    	non-compiled	[CE]  not  a  statement	27	None	replace
94	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration,  canCollapseChildNames);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration,  canCollapseChildNames);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration,  canCollapseChildNames);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n,    p.declaration);    	non-compiled	[CE]  not  a  statement	27	None	replace
95	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration,  p.inExterns);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration,  p.inExterns);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n,    p.declaration);    	non-compiled	[CE]  not  a  statement	27	None	replace
96	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.node,  p.declaration);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.node,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.node,  p.declaration);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
97	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.statement);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.statement);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.statement);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
98	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.inExterns);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.inExterns);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
99	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.node);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.node);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.node);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
100	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  n.props);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  n.props);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  n.props);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
101	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.type);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
102	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name),  p.inExterns);	  p.declaration,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	10	None	replace
103	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name),  p.type);	  p.declaration,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	10	None	replace
104	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name),  n);	  p.declaration,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	10	None	replace
105	[BUG]  [BUGGY]  p.name,  appendPropForAlias(alias,  p.declaration));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  appendPropForAlias(alias,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  appendPropForAlias(alias,  p.declaration));	  p.declaration,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	10	None	replace
106	[BUG]  [BUGGY]  p.name,  appendPropForAlias(alias,  p.declaration);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  appendPropForAlias(alias,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  appendPropForAlias(alias,  p.declaration);	  p.declaration,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	9	None	replace
107	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.node);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.node);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name),  p.node);	  p.declaration,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	9	None	replace
108	[BUG]  [BUGGY]  appendDeclaration(n,  p.nameForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(n,  p.nameForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(n,  p.nameForAlias(alias,  p.name));	  appendDeclaration(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	62	None	replace
109	[BUG]  [BUGGY]  appendDeclaration(n,  pForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(n,  pForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(n,  pForAlias(alias,  p.name));	  appendDeclaration(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	62	None	replace
110	[BUG]  [BUGGY]  appendDeclaration(p,  nForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(p,  nForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(p,  nForAlias(alias,  p.name),  p.declaration);	  appendDeclaration(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	62	None	replace
111	[BUG]  [BUGGY]  appendName(p,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendName(p,  nForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendName(p,  nForAlias(alias,  p.name));	  appendDeclaration(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	62	None	replace
112	[BUG]  [BUGGY]  appendDeclaration(p,  nForName(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(p,  nForName(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(p,  nForName(alias,  p.name));	  appendDeclaration(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	62	None	replace
113	[BUG]  [BUGGY]  appendDeclaration(p,  nForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(p,  nForAlias(alias,  p.name),  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(p,  nForAlias(alias,  p.name),  p.type);	  appendDeclaration(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	62	None	replace
114	[BUG]  [BUGGY]  appendDeclarationForAlias(alias,  p.name,  p.declaration));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationForAlias(alias,  p.name,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationForAlias(alias,  p.name,  p.declaration));	  appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	45	None	replace
115	[BUG]  [BUGGY]  appendDeclarationForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationForAlias(alias,  p.name),  p);	  appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	45	None	replace
116	[BUG]  [BUGGY]  appendDeclarationForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationForAlias(alias,  p.name),  p.declaration);	  appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	45	None	replace
117	[BUG]  [BUGGY]  appendDeclarationForAlias(alias,  p.name,  p.inExterns));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationForAlias(alias,  p.name,  p.inExterns));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationForAlias(alias,  p.name,  p.inExterns));	  appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	45	None	replace
118	[BUG]  [BUGGY]  appendDeclarationForAlias(alias,  p.name,  p.type));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationForAlias(alias,  p.name,  p.type));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationForAlias(alias,  p.name,  p.type));	  appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	45	None	replace
119	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  n);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  n);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	24	None	replace
120	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.type);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	24	None	replace
121	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p.type);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	24	None	replace
122	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.declaration);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.declaration);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	24	None	replace
123	[BUG]  [BUGGY]  p,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p,  appendPropForAlias(alias,  p.name),  p.declaration);	  p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	7	None	replace
124	[BUG]  [BUGGY]  p,  appendPropForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p,  appendPropForAlias(alias,  p.name),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p,  appendPropForAlias(alias,  p.name),  p.inExterns);	  p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	7	None	replace
125	[BUG]  [BUGGY]  n,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  n,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	n,  appendPropForAlias(alias,  p.name));	  p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	7	None	replace
126	[BUG]  [BUGGY]  p,  appendNameForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p,  appendNameForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p,  appendNameForAlias(alias,  p.name));	  p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	7	None	replace
127	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration,    p.declaration);    	non-compiled	[CE]  not  a  statement	63	None	replace
128	[BUG]  [BUGGY]  p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration,    p.declaration);    	non-compiled	[CE]  not  a  statement	63	None	replace
129	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration,    p.declaration);    	non-compiled	[CE]  not  a  statement	63	None	replace
130	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration,    p.declaration);    	non-compiled	[CE]  not  a  statement	63	None	replace
131	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.declaration);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	22	None	replace
132	[BUG]  [BUGGY]  appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.declaration);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	22	None	replace
133	[BUG]  [BUGGY]  appendDeclaration(p,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(p,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(p,  appendPropForAlias(alias,  p.name),  p.declaration);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	22	None	replace
134	[BUG]  [BUGGY]  p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p,  appendPropForAlias(alias,  p.name),  p,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	60	None	replace
135	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name),  p,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	60	None	replace
136	[BUG]  [BUGGY]  appendNameAndDescendants(alias,  appendPropForAlias(p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(alias,  appendPropForAlias(p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(alias,  appendPropForAlias(p.name));	  appendNameAndDescendants(p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	23	None	replace
137	[BUG]  [BUGGY]  appendNameAndDescendants(n.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	23	None	replace
138	[BUG]  [BUGGY]  appendNameAndDescendants(alias.name,  appendPropForAlias(p.name));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(alias.name,  appendPropForAlias(p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(alias.name,  appendPropForAlias(p.name));	  appendNameAndDescendants(p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	23	None	replace
139	[BUG]  [BUGGY]  appendDeclaration(p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(p.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	23	None	replace
140	[BUG]  [BUGGY]  Name  p  =  n.declaration.getName();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.declaration.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.declaration.getName();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	30	None	replace
141	[BUG]  [BUGGY]  Name  p  =  n.getName()  + ", "  +  p.name;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.getName()  + ", "  +  p.name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getName()  + ", "  +  p.name;	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	30	None	replace
142	[BUG]  [BUGGY]  Name  p  =  n.getName()  + ": "  +  p.name;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.getName()  + ": "  +  p.name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getName()  + ": "  +  p.name;	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	30	None	replace
143	[BUG]  [BUGGY]  Name  p  =  n.props.getName();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.props.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.props.getName();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	30	None	replace
144	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration.node.getLastChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.declaration.node.getLastChild();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration.node.getLastChild();	  p.declaration.node    =    p.declaration.node.getFirstChild();    	non-compiled	[CE]  not  a  statement	66	None	replace
145	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration.node.getNext();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.declaration.node.getNext();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration.node.getNext();	  p.declaration.node    =    p.declaration.node.getFirstChild();    	non-compiled	[CE]  not  a  statement	66	None	replace
146	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.inExterns);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	51	None	replace
147	[BUG]  [BUGGY]  appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.inExterns);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	51	None	replace
148	[BUG]  [BUGGY]  appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(name,  appendPropForAlias(alias,  p.name),  p.inExterns);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	51	None	replace
149	[BUG]  [BUGGY]  p.name,  p.declaration.node.getName().getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getName().getType()  ==  Token.FUNCTION);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getName().getType()  ==  Token.FUNCTION);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  not  a  statement	35	None	replace
150	[BUG]  [BUGGY]  p.name,  p.declaration.node.getNext().getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getNext().getType()  ==  Token.FUNCTION);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getNext().getType()  ==  Token.FUNCTION);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  not  a  statement	35	None	replace
151	[BUG]  [BUGGY]  p.name,  p.declaration.node.getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getType()  ==  Token.FUNCTION);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getType()  ==  Token.FUNCTION);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  not  a  statement	35	None	replace
152	[BUG]  [BUGGY]  p.name,  p.node.getParent().getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.node.getParent().getType()  ==  Token.FUNCTION);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.node.getParent().getType()  ==  Token.FUNCTION);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  not  a  statement	35	None	replace
153	[BUG]  [BUGGY]  p.name,  n.getParent().getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  n.getParent().getType()  ==  Token.FUNCTION);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  n.getParent().getType()  ==  Token.FUNCTION);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  not  a  statement	35	None	replace
154	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p,  p.inExterns);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  p,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p,  p.inExterns);	  appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	6	None	replace
155	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.node,  p.declaration));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.node,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.node,  p.declaration));	  appendPropForAlias(alias,    p.name,    p.declaration));    	non-compiled	[CE]  not  a  statement	11	None	replace
156	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.node));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.node));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.node));	  appendPropForAlias(alias,    p.name,    p.declaration));    	non-compiled	[CE]  not  a  statement	11	None	replace
157	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.statement));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.statement));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.statement));	  appendPropForAlias(alias,    p.name,    p.declaration));    	non-compiled	[CE]  not  a  statement	11	None	replace
158	[BUG]  [BUGGY]  AppendPropForAlias(alias,  p.name,  p.declaration));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  AppendPropForAlias(alias,  p.name,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	AppendPropForAlias(alias,  p.name,  p.declaration));	  appendPropForAlias(alias,    p.name,    p.declaration));    	non-compiled	[CE]  not  a  statement	11	None	replace
159	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  n.props));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  n.props));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  n.props));	  appendPropForAlias(alias,    p.name,    p.declaration));    	non-compiled	[CE]  not  a  statement	11	None	replace
160	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.parent;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.parent;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p.parent;	  p.declaration.node,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	20	None	replace
161	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name),  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name),  p.type);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	43	None	replace
162	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  p.declaration);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	43	None	replace
163	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  canCollapseChildNames);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  canCollapseChildNames);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  canCollapseChildNames);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	43	None	replace
164	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  n);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  n);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	43	None	replace
165	[BUG]  [BUGGY]  p.name  =  p.name;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name  =  p.name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name  =  p.name;	  p.name    =    p.getName();    	non-compiled	[CE]  not  a  statement	65	None	replace
166	[BUG]  [BUGGY]  p.name  =  n.getName();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name  =  n.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name  =  n.getName();	  p.name    =    p.getName();    	non-compiled	[CE]  not  a  statement	65	None	replace
167	[BUG]  [BUGGY]  p.name  =  p.declaration.getName();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name  =  p.declaration.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name  =  p.declaration.getName();	  p.name    =    p.getName();    	non-compiled	[CE]  not  a  statement	65	None	replace
168	[BUG]  [BUGGY]  p.name  =  p.declaration.node.getName();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name  =  p.declaration.node.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name  =  p.declaration.node.getName();	  p.name    =    p.getName();    	non-compiled	[CE]  not  a  statement	65	None	replace
169	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.name,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.name,  nForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(n,  p.name,  nForAlias(alias,  p.name));	  collapseDeclarationOfNameAndDescendants(p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	38	None	replace
170	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(alias,  p.name,  nForAlias(p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(alias,  p.name,  nForAlias(p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(alias,  p.name,  nForAlias(p.name));	  collapseDeclarationOfNameAndDescendants(p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	38	None	replace
171	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.type));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.type));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.type));	  collapseDeclarationOfNameAndDescendants(p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	38	None	replace
172	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.declaration));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.declaration));	  collapseDeclarationOfNameAndDescendants(p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	38	None	replace
173	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name),  p.inExterns);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	44	None	replace
174	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.name,  p.inExterns);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.name,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(n,  p.name,  p.inExterns);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	44	None	replace
175	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p.inExterns);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	44	None	replace
176	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.declaration;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration;	  p.declaration.node    =    p.declaration.node;    	non-compiled	[CE]  not  a  statement	46	None	replace
177	[BUG]  [BUGGY]  p.declaration.node  =  p.name;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.name;	  p.declaration.node    =    p.declaration.node;    	non-compiled	[CE]  not  a  statement	46	None	replace
178	[BUG]  [BUGGY]  p.declaration.node  =  p.node;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.node;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.node;	  p.declaration.node    =    p.declaration.node;    	non-compiled	[CE]  not  a  statement	46	None	replace
179	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  p.declaration);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.parent,  p.declaration);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	57	None	replace
180	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.parent);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.parent);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	57	None	replace
181	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  p.parent);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  p.parent);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	57	None	replace
182	[BUG]  [BUGGY]  appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.parent);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  appendPropForAlias(alias,  p.name),  p.parent);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	57	None	replace
183	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name),  n,  p.inExterns);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name),  n,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name),  n,  p.inExterns);	  appendPropForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	28	None	replace
184	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameForAlias(alias,  p.name),  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name),  n);	  appendPropForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	28	None	replace
185	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  n);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  n);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	3	None	replace
186	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.declaration);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	3	None	replace
187	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.inExterns);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.inExterns);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	3	None	replace
188	[BUG]  [BUGGY]  p.declaration.node,  p.name,  p.inExterns);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  p.name,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  p.name,  p.inExterns);	  p.declaration.node,    p.name);    	non-compiled	[CE]  not  a  statement	48	None	replace
189	[BUG]  [BUGGY]  p.name,  p.declaration.node);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node);	  p.declaration.node,    p.name);    	non-compiled	[CE]  not  a  statement	48	None	replace
190	[BUG]  [BUGGY]  p.declaration.node,  p.name,  p.type);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  p.name,  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  p.name,  p.type);	  p.declaration.node,    p.name);    	non-compiled	[CE]  not  a  statement	48	None	replace
191	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.name,  n.props);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.name,  n.props);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(n,  p.name,  n.props);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
192	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props,  canCollapseChildNames);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props,  canCollapseChildNames);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props,  canCollapseChildNames);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
193	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.nameForAlias(alias,  p.name),  p.props);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.nameForAlias(alias,  p.name),  p.props);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(n,  p.nameForAlias(alias,  p.name),  p.props);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
194	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.node);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.node);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.node);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	4	None	replace
195	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n.props);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n.props);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n.props);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	4	None	replace
196	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p.inExterns);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	4	None	replace
197	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration.node));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration.node));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.declaration.node));	  appendPropForAlias(alias,    p.name,    p.inExterns));    	non-compiled	[CE]  not  a  statement	13	None	replace
198	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.externs));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.externs));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.externs));	  appendPropForAlias(alias,    p.name,    p.inExterns));    	non-compiled	[CE]  not  a  statement	13	None	replace
199	[BUG]  [BUGGY]  appendNameAndDescendants(n,  appendDeclarationForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n,  appendDeclarationForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  appendDeclarationForAlias(alias,  p.name));	  appendNameAndDescendants(p,    appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	56	None	replace
200	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  n);	  appendNameAndDescendants(p,    appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	56	None	replace
201	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  appendDeclarationForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.name,  appendDeclarationForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  appendDeclarationForAlias(alias,  p.name));	  appendNameAndDescendants(p,    appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	56	None	replace
202	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p.declaration);	  appendNameAndDescendants(p,    appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	56	None	replace
203	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.type,  p.inExterns);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.type,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p.type,  p.inExterns);	  p.declaration.node,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	19	None	replace
204	[BUG]  [BUGGY]  name,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  name,  nForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	name,  nForAlias(alias,  p.name));	  p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	41	None	replace
205	[BUG]  [BUGGY]  p.name,  nForAlias(alias,  p.declaration.node));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  nForAlias(alias,  p.declaration.node));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  nForAlias(alias,  p.declaration.node));	  p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	41	None	replace
206	[BUG]  [BUGGY]  p.name,  nForAlias(alias,  p.type));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  nForAlias(alias,  p.type));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  nForAlias(alias,  p.type));	  p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	41	None	replace
207	[BUG]  [BUGGY]  appendNameAndDescendants(p,  n.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  n.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  n.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	21	None	replace
208	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.name,  p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  p.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	21	None	replace
209	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  n,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.name,  n,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  n,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	21	None	replace
210	[BUG]  [BUGGY]  appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.type));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.type));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.type));	  appendNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	21	None	replace
211	[BUG]  [BUGGY]  appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.declaration));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.declaration));	  appendNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	21	None	replace
212	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  pForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  pForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(n,  pForAlias(alias,  p.name),  p);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	42	None	replace
213	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	42	None	replace
214	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  nForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  nForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(n,  nForAlias(alias,  p.name),  p);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	42	None	replace
215	[BUG]  [BUGGY]  Name  p  =  p.name;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  p.name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.name;	  Name    p    =    p.getName();    	non-compiled	[CE]  not  a  statement	31	None	replace
216	[BUG]  [BUGGY]  Name  p  =  p.declaration.getName();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  p.declaration.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.declaration.getName();	  Name    p    =    p.getName();    	non-compiled	[CE]  not  a  statement	31	None	replace
217	[BUG]  [BUGGY]  Name  p  =  p.name.getName();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  p.name.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.name.getName();	  Name    p    =    p.getName();    	non-compiled	[CE]  not  a  statement	31	None	replace
218	[BUG]  [BUGGY]  Name  p  =  p.node.getName();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  p.node.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.node.getName();	  Name    p    =    p.getName();    	non-compiled	[CE]  not  a  statement	31	None	replace
219	[BUG]  [BUGGY]  Name  p  =  p.declaration.node.getName();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  p.declaration.node.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.declaration.node.getName();	  Name    p    =    p.getName();    	non-compiled	[CE]  not  a  statement	31	None	replace
220	[BUG]  [BUGGY]  Name  p  =  p.getPropertyName();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  p.getPropertyName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.getPropertyName();	  Name    p    =    n.getPropertyName();    	non-compiled	[CE]  not  a  statement	34	None	replace
221	[BUG]  [BUGGY]  Name  p  =  n.getPropertyName(p);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.getPropertyName(p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getPropertyName(p);	  Name    p    =    n.getPropertyName();    	non-compiled	[CE]  not  a  statement	34	None	replace
222	[BUG]  [BUGGY]  Name  p  =  n.getPropertyName()  + "_ "  +  p.name;  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.getPropertyName()  + "_ "  +  p.name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getPropertyName()  + "_ "  +  p.name;	  Name    p    =    n.getPropertyName();    	non-compiled	[CE]  not  a  statement	34	None	replace
223	[BUG]  [BUGGY]  Name  p  =  n.getPropertyName()  + ", "  +  p.name;  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.getPropertyName()  + ", "  +  p.name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getPropertyName()  + ", "  +  p.name;	  Name    p    =    n.getPropertyName();    	non-compiled	[CE]  not  a  statement	34	None	replace
224	[BUG]  [BUGGY]  Name  p  =  n.getPropertyName(p.name);  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.getPropertyName(p.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getPropertyName(p.name);	  Name    p    =    n.getPropertyName();    	non-compiled	[CE]  not  a  statement	34	None	replace
225	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.inExterns);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.inExterns);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	5	None	replace
226	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.type);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.type);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	5	None	replace
227	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration),  p.declaration);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.declaration),  p.declaration);	  appendPropForAlias(alias,    p.name,    p.declaration));    	non-compiled	[CE]  not  a  statement	11	None	replace
228	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p.parent);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name),  p.parent);	  p.declaration,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	9	None	replace
229	[BUG]  [BUGGY]  p.name,  appendPropForAlias(alias,  p.name)  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  appendPropForAlias(alias,  p.name)  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  appendPropForAlias(alias,  p.name)	  p.name,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	29	None	replace
230	[BUG]  [BUGGY]  appendDeclaration(p,  nForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(p,  nForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(p,  nForAlias(alias,  p.name),  p);	  appendDeclaration(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	62	None	replace
231	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p);	  appendNameAndDescendants(p,    appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	56	None	replace
232	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p.type);	  appendNameAndDescendants(p,    appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	56	None	replace
233	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropertyForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropertyForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropertyForAlias(alias,  p.name));	  appendNameAndDescendants(p,    appendDeclarationForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	56	None	replace
234	[BUG]  [BUGGY]  appendDeclarationForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationForAlias(alias,  p.name),  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationForAlias(alias,  p.name),  n);	  appendPropForAlias(alias,    p.name),    n);    	non-compiled	[CE]  not  a  statement	28	None	replace
235	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration.node  +  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.declaration.node  +  1;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration.node  +  1;	  p.declaration.node    =    p.declaration.node;    	non-compiled	[CE]  not  a  statement	46	None	replace
236	[BUG]  [BUGGY]  p.declaration.node  =  p.declarationNode;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.declarationNode;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declarationNode;	  p.declaration.node    =    p.declaration.node;    	non-compiled	[CE]  not  a  statement	46	None	replace
237	[BUG]  [BUGGY]  P.declaration.node  =  p.declaration.node;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  P.declaration.node  =  p.declaration.node;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	P.declaration.node  =  p.declaration.node;	  p.declaration.node    =    p.declaration.node;    	non-compiled	[CE]  not  a  statement	46	None	replace
238	[BUG]  [BUGGY]  Name  p  =  n.getPropertyName(name);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.getPropertyName(name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getPropertyName(name);	  Name    p    =    n.getPropertyName();    	non-compiled	[CE]  not  a  statement	34	None	replace
239	[BUG]  [BUGGY]  Name  p  =  n.getReferenceName();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.getReferenceName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getReferenceName();	  Name    p    =    n.getPropertyName();    	non-compiled	[CE]  not  a  statement	34	None	replace
240	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(n,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	15	None	replace
241	[BUG]  [BUGGY]  appendNameAndDescendants(parent,  appendPropForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(parent,  appendPropForAlias(alias,  p.name),  p.parent);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(parent,  appendPropForAlias(alias,  p.name),  p.parent);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	57	None	replace
242	[BUG]  [BUGGY]  appendNameAndDescendants(p.parent,  appendPropForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.parent,  appendPropForAlias(alias,  p.name),  p.parent);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.parent,  appendPropForAlias(alias,  p.name),  p.parent);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	57	None	replace
243	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name,  p.declaration);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameForAlias(alias,  p.name,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name,  p.declaration);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
244	[BUG]  [BUGGY]  appendDeclarationForAlias(alias,  p.name,  p.declaration);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationForAlias(alias,  p.name,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationForAlias(alias,  p.name,  p.declaration);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
245	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.value);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.value);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.value);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
246	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type);	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	37	None	replace
247	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.inExterns);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.inExterns);	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	37	None	replace
248	[BUG]  [BUGGY]  appendNameAndDescendants(p,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  nForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  nForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	37	None	replace
249	[BUG]  [BUGGY]  appendDeclaration(n,  p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(n,  p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(n,  p.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(n,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	52	None	replace
250	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	40	None	replace
251	[BUG]  [BUGGY]  p.declaration.node,  p.name,  p.id);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  p.name,  p.id);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  p.name,  p.id);	  p.declaration.node,    p.name);    	non-compiled	[CE]  not  a  statement	48	None	replace
252	[BUG]  [BUGGY]  p.name  =  p.getName()  + ", "  +  p.declaration.node.getParent();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name  =  p.getName()  + ", "  +  p.declaration.node.getParent();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name  =  p.getName()  + ", "  +  p.declaration.node.getParent();	  p.name    =    p.getName();    	non-compiled	[CE]  not  a  statement	65	None	replace
253	[BUG]  [BUGGY]  p.name  =  p.node.getName();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name  =  p.node.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name  =  p.node.getName();	  p.name    =    p.getName();    	non-compiled	[CE]  not  a  statement	65	None	replace
254	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameForAlias(alias,  p.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name);	  appendNameForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
255	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameForAlias(alias,  p.name,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameForAlias(alias,  p.name,  p.name));	  appendNameForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
256	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.name,  nForAlias(alias,  p.name),  n.props);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(n,  p.name,  nForAlias(alias,  p.name),  n.props);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(n,  p.name,  nForAlias(alias,  p.name),  n.props);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
257	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props,  n.declaration);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props,  n.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props,  n.declaration);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
258	[BUG]  [BUGGY]  p.name,  p.declaration.node.getNameNode().getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getNameNode().getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getNameNode().getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	32	None	replace
259	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.parent);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.parent);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	44	None	replace
260	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.statement);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.statement);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.statement);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	44	None	replace
261	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  n,  p.declaration,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n,    p.declaration);    	non-compiled	[CE]  not  a  statement	27	None	replace
262	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n,    p.declaration);    	non-compiled	[CE]  not  a  statement	27	None	replace
263	[BUG]  [BUGGY]  p,  appendPropForAlias(alias,  p.name),  n,  p.declaration);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p,  appendPropForAlias(alias,  p.name),  n,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p,  appendPropForAlias(alias,  p.name),  n,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    n,    p.declaration);    	non-compiled	[CE]  not  a  statement	27	None	replace
264	[BUG]  [BUGGY]  p.name,  p.declaration.node.getFirstChild().getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getFirstChild().getType()  ==  Token.FUNCTION);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getFirstChild().getType()  ==  Token.FUNCTION);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  not  a  statement	35	None	replace
265	[BUG]  [BUGGY]  P.name,  p.declaration.node.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  P.name,  p.declaration.node.getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	P.name,  p.declaration.node.getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
266	[BUG]  [BUGGY]  Name  p  =(Name)n.props.get(p,  n.declaration);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.get(p,  n.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.get(p,  n.declaration);	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
267	[BUG]  [BUGGY]  Name  p  =(Name)n.props.get(p,  n.props);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.get(p,  n.props);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.get(p,  n.props);	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
268	[BUG]  [BUGGY]  Name  p  =(Name)n.props.get(p,  n.type);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.get(p,  n.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.get(p,  n.type);	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
269	[BUG]  [BUGGY]  Name  p  =  n.getNamespaceURI();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.getNamespaceURI();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getNamespaceURI();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	30	None	replace
270	[BUG]  [BUGGY]  Name  p  =  n.declaration.node.getName();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.declaration.node.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.declaration.node.getName();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	30	None	replace
271	[BUG]  [BUGGY]  Name  p  =  n.getParent();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  n.getParent();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  n.getParent();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	30	None	replace
272	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  null);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  null);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  null);	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	54	None	replace
273	[BUG]  [BUGGY]  appendNameAndDescendants(p,  nForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  nForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  nForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	54	None	replace
274	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  p.inExterns);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  p.inExterns);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	43	None	replace
275	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type),  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.type),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.type),  p);	  appendPropForAlias(alias,    p.name,    p.type));    	non-compiled	[CE]  not  a  statement	14	None	replace
276	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  p.sourceName));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  p.sourceName));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.type,  p.sourceName));	  appendPropForAlias(alias,    p.name,    p.type));    	non-compiled	[CE]  not  a  statement	14	None	replace
277	[BUG]  [BUGGY]  appendNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	21	None	replace
278	[BUG]  [BUGGY]  appendNameAndDescendants(p,  alias.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  alias.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  alias.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	21	None	replace
279	[BUG]  [BUGGY]  appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  p.name,  appendPropForAlias(alias,  p.name),  p.declaration);	  appendNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	21	None	replace
280	[BUG]  [BUGGY]  appendDeclaration(p,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(p,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(p,  appendPropForAlias(alias,  p.name),  p);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	16	None	replace
281	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.type  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name),  p.type  +  1);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name),  p.type  +  1);	  p.declaration.node,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	19	None	replace
282	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendForAlias(alias,  p.name),  p,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
283	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p,  p.declaration);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
284	[BUG]  [BUGGY]  if(p.name!=  null)  {  p,  appendPropForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.name!=  null)  {  p,  appendPropForAlias(alias,  p.name));  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.name!=  null)  {  p,  appendPropForAlias(alias,  p.name));  }	  p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	7	None	replace
285	[BUG]  [BUGGY]  p,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p,  appendPropForAlias(alias,  p.name),  p.type);	  p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	7	None	replace
286	[BUG]  [BUGGY]  p,  appendPropForName(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p,  appendPropForName(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p,  appendPropForName(alias,  p.name));	  p,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	7	None	replace
287	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  alias.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  alias.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  alias.name,  appendPropForAlias(alias,  p.name));	  appendDeclarationOfNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
288	[BUG]  [BUGGY]  p.name,  nForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  nForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  nForAlias(alias,  p.name),  p.declaration);	  p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	41	None	replace
289	[BUG]  [BUGGY]  p.name,  nForAlias(alias,  p.parent));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  nForAlias(alias,  p.parent));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  nForAlias(alias,  p.parent));	  p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	41	None	replace
290	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.statement);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.statement);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.statement);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	3	None	replace
291	[BUG]  [BUGGY]  appendPathForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPathForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPathForAlias(alias,  p.name),  p);	  appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	6	None	replace
292	[BUG]  [BUGGY]  appendSimpleDeclaration(appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendSimpleDeclaration(appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendSimpleDeclaration(appendPropForAlias(alias,  p.name),  p);	  appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	6	None	replace
293	[BUG]  [BUGGY]  appendStringForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendStringForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendStringForAlias(alias,  p.name),  p);	  appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	6	None	replace
294	[BUG]  [BUGGY]  Preconditions.checkArgument(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Preconditions.checkArgument(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Preconditions.checkArgument(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
295	[BUG]  [BUGGY]  Preconditions.checkState(p.name!=  null  &&  p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Preconditions.checkState(p.name!=  null  &&  p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Preconditions.checkState(p.name!=  null  &&  p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
296	[BUG]  [BUGGY]  Preconditions.checkArgument(p.name!=  null  &&  p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Preconditions.checkArgument(p.name!=  null  &&  p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Preconditions.checkArgument(p.name!=  null  &&  p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
297	[BUG]  [BUGGY]  prependState(p.name,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  prependState(p.name,  nForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	prependState(p.name,  nForAlias(alias,  p.name));	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
298	[BUG]  [BUGGY]  Preconditions.checkArgument(p.name!=  null  &&  p.name.length()  ==  0)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Preconditions.checkArgument(p.name!=  null  &&  p.name.length()  ==  0)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Preconditions.checkArgument(p.name!=  null  &&  p.name.length()  ==  0)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
299	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p,  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  p,  appendPropForAlias(alias,  p.name),  n);	  appendDeclarationOfNameAndDescendants(n,    p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	17	None	replace
300	[BUG]  [BUGGY]  appendNameAndDescendants(n,  p,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(n,  p,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(n,  p,  appendPropForAlias(alias,  p.name),  p);	  appendDeclarationOfNameAndDescendants(n,    p,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	17	None	replace
301	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.inExterns);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.inExterns);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	24	None	replace
302	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.sourceName);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.sourceName);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.sourceName);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	24	None	replace
303	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.node);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.node);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.node);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	51	None	replace
304	[BUG]  [BUGGY]  Name  p  =  p.getParent();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  p.getParent();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.getParent();	  Name    p    =    p.getName();    	non-compiled	[CE]  not  a  statement	31	None	replace
305	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration.node.getNameNode();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.declaration.node.getNameNode();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration.node.getNameNode();	  p.declaration.node    =    p.declaration.node.getParent();    	non-compiled	[CE]  not  a  statement	49	None	replace
306	[BUG]  [BUGGY]  alias  =  p.getName()  + ", "  +  n.props;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  alias  =  p.getName()  + ", "  +  n.props;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	alias  =  p.getName()  + ", "  +  n.props;	  alias    =    p.getName();    	non-compiled	[CE]  not  a  statement	47	None	replace
307	[BUG]  [BUGGY]  p.name,  p.declaration.node.getFirstChild().getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getFirstChild().getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getFirstChild().getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	32	None	replace
308	[BUG]  [BUGGY]  Name  p  =  p.getQualifiedName();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  p.getQualifiedName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.getQualifiedName();	  Name    p    =    p.getName();    	non-compiled	[CE]  not  a  statement	31	None	replace
309	[BUG]  [BUGGY]  appendNameAndDescendants(alias,  p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(alias,  p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(alias,  p.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	21	None	replace
310	[BUG]  [BUGGY]  appendNameAndDescendants(p,  alias.name,  appendPropForAlias(alias,  p.type));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  alias.name,  appendPropForAlias(alias,  p.type));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  alias.name,  appendPropForAlias(alias,  p.type));	  appendNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	21	None	replace
311	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
312	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.inExterns);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.inExterns);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
313	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.type);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.type);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
314	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.inexterns);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.inexterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.inexterns);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	64	None	replace
315	[BUG]  [BUGGY]  appendDeclaration(p,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(p,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(p,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(n,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	52	None	replace
316	[BUG]  [BUGGY]  append(p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  append(p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	append(p.name,  appendPropForAlias(alias,  p.name));	  appendNameAndDescendants(n,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	52	None	replace
317	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name):  p.parent;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name):  p.parent;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name):  p.parent;	  p.declaration.node,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	20	None	replace
318	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.declaration));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.declaration));	  appendDeclarationOfNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
319	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.type));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.type));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  p.name,  appendPropForAlias(alias,  p.type));	  appendDeclarationOfNameAndDescendants(n,    p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	1	None	replace
320	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name),  p);	  p.declaration,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	10	None	replace
321	[BUG]  [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name,  p.type));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration,  appendPropForAlias(alias,  p.name,  p.type));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration,  appendPropForAlias(alias,  p.name,  p.type));	  p.declaration,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	10	None	replace
322	[BUG]  [BUGGY]  if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  }	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	40	None	replace
323	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration,  p.inExterns);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration,  p.inExterns);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	40	None	replace
324	[BUG]  [BUGGY]  p,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p,  appendPropForAlias(alias,  p.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p,  appendPropForAlias(alias,  p.name);	  collapseDeclarationOfNameAndDescendants(n,    appendPropForAlias(alias,    p.name),    p);    	non-compiled	[CE]  not  a  statement	26	None	replace
325	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  p.declaration);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(n,  p.name,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(n,  p.name,  p.declaration);	  appendDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	37	None	replace
326	[BUG]  [BUGGY]  Name  p  =  p.declaration.getPropertyName();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  p.declaration.getPropertyName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.declaration.getPropertyName();	  Name    p    =    n.getPropertyName();    	non-compiled	[CE]  not  a  statement	34	None	replace
327	[BUG]  [BUGGY]  Name  p  =  p.declaration.node.getPropertyName();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =  p.declaration.node.getPropertyName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =  p.declaration.node.getPropertyName();	  Name    p    =    n.getPropertyName();    	non-compiled	[CE]  not  a  statement	34	None	replace
328	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p,  p.declaration,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p,    p.declaration);    	non-compiled	[CE]  not  a  statement	60	None	replace
329	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.statement);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.statement);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.type,  p.statement);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	24	None	replace
330	[BUG]  [BUGGY]  p.declaration.node,  p.name,  p.parent);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  p.name,  p.parent);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  p.name,  p.parent);	  p.declaration.node,    p.name);    	non-compiled	[CE]  not  a  statement	48	None	replace
331	[BUG]  [BUGGY]  p.declaration.node,  p.name,  p.name);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  p.name,  p.name);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  p.name,  p.name);	  p.declaration.node,    p.name);    	non-compiled	[CE]  not  a  statement	48	None	replace
332	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.type));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.type));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.type));	  appendNameAndDescendants(p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	23	None	replace
333	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.name),  p);	  appendNameAndDescendants(p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	23	None	replace
334	[BUG]  [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.declaration));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.declaration));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p.name,  appendPropForAlias(alias,  p.declaration));	  appendNameAndDescendants(p.name,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	23	None	replace
335	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  p.statement);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  p.statement);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.type,  p.statement);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	43	None	replace
336	[BUG]  [BUGGY]  if(p.inExterns)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.inExterns)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.inExterns)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  }	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    p.inExterns);    	non-compiled	[CE]  not  a  statement	44	None	replace
337	[BUG]  [BUGGY]  if(p.name!=  null  &&  p.name.length()  ==  0)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.name!=  null  &&  p.name.length()  ==  0)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.name!=  null  &&  p.name.length()  ==  0)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
338	[BUG]  [BUGGY]  if(p.name!=  null  &&  p.name.length()  >  0)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.name!=  null  &&  p.name.length()  >  0)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.name!=  null  &&  p.name.length()  >  0)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
339	[BUG]  [BUGGY]  if(p.name!=  null  &&  p.name.equals( " "))  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.name!=  null  &&  p.name.equals( " "))  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.name!=  null  &&  p.name.equals( " "))  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
340	[BUG]  [BUGGY]  if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p.declaration);  }	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
341	[BUG]  [BUGGY]  if(p.name!=  null  &&  p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.name!=  null  &&  p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.name!=  null  &&  p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name));  }	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
342	[BUG]  [BUGGY]  if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p);  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  p);  }	  if(p.name!=    null)    {    collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name));    }    	non-compiled	[CE]  not  a  statement	61	None	replace
343	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props,  n.props);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props,  n.props);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props,  n.props);	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
344	[BUG]  [BUGGY]  if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props);  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  nForAlias(alias,  p.name),  n.props);  }	  collapseDeclarationOfNameAndDescendants(p,    nForAlias(alias,    p.name),    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
345	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration.node  ||  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.declaration.node  ||  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration.node  ||  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION;	  p.declaration.node    =    p.declaration.node;    	non-compiled	[CE]  not  a  statement	46	None	replace
346	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration.node  ||  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.declaration.node  ||  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration.node  ||  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH);	  p.declaration.node    =    p.declaration.node;    	non-compiled	[CE]  not  a  statement	46	None	replace
347	[BUG]  [BUGGY]  p.declaration.node  =  p.declaration.node  ||  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node  =  p.declaration.node  ||  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node  =  p.declaration.node  ||  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR;	  p.declaration.node    =    p.declaration.node;    	non-compiled	[CE]  not  a  statement	46	None	replace
348	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	22	None	replace
349	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.inExterns);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.inExterns);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	22	None	replace
350	[BUG]  [BUGGY]  appendDeclaration(p,  nForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(p,  nForAlias(alias,  p.name),  n);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(p,  nForAlias(alias,  p.name),  n);	  appendDeclaration(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	62	None	replace
351	[BUG]  [BUGGY]  appendDeclaration(declaration,  p,  nForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(declaration,  p,  nForAlias(alias,  p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(declaration,  p,  nForAlias(alias,  p.name));	  appendDeclaration(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	62	None	replace
352	[BUG]  [BUGGY]  appendDeclaration(n,  p.name,  p.declaration);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclaration(n,  p.name,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclaration(n,  p.name,  p.declaration);	  appendDeclaration(p,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	62	None	replace
353	[BUG]  [BUGGY]  p.name,  appendPropForAlias(alias,  p.name),  p.declaration);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  appendPropForAlias(alias,  p.name),  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  appendPropForAlias(alias,  p.name),  p.declaration);	  p.name,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	29	None	replace
354	[BUG]  [BUGGY]  alias  =  p.declaration.node.getName();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  alias  =  p.declaration.node.getName();  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	alias  =  p.declaration.node.getName();	  alias    =    p.getName();    	non-compiled	[CE]  not  a  statement	47	None	replace
355	[BUG]  [BUGGY]  p.name,  p.declaration.node.getParent().getType()  ==  Token.FUNCTION  ||  p.declaration.node.getParent().getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getParent().getType()  ==  Token.FUNCTION  ||  p.declaration.node.getParent().getType()  ==  Token.NAME);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getParent().getType()  ==  Token.FUNCTION  ||  p.declaration.node.getParent().getType()  ==  Token.NAME);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  not  a  statement	35	None	replace
356	[BUG]  [BUGGY]  p.name,  p.declaration.node.getNameNode().getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getNameNode().getType()  ==  Token.FUNCTION);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getNameNode().getType()  ==  Token.FUNCTION);	  p.name,    p.declaration.node.getParent().getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  not  a  statement	35	None	replace
357	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.declaration,  p.declaration);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
358	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration,  p.inExterns);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.declaration,  p.inExterns);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
359	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration,  p.node);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendPropForAlias(alias,  p.name,  p.declaration,  p.node);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendPropForAlias(alias,  p.name,  p.declaration,  p.node);	  appendPropForAlias(alias,    p.name,    p.declaration);    	non-compiled	[CE]  not  a  statement	55	None	replace
360	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration,  p.declaration);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration,  p.declaration);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.declaration,  p.declaration);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration,    p.declaration);    	non-compiled	[CE]  not  a  statement	63	None	replace
361	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.node);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.node);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.node);	  collapseDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration,    p.declaration);    	non-compiled	[CE]  not  a  statement	63	None	replace
362	[BUG]  [BUGGY]  p.name,  p.declaration.node.getType()  ==  Token.NAME  ||  p.declaration.node.getParent().getType()  ==  Token.VAR);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getType()  ==  Token.NAME  ||  p.declaration.node.getParent().getType()  ==  Token.VAR);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getType()  ==  Token.NAME  ||  p.declaration.node.getParent().getType()  ==  Token.VAR);	  p.name,    p.declaration.node.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
363	[BUG]  [BUGGY]  p.name,  p.declaration.node.getType()  ==  Token.NAME  ||  p.declaration.node.getParent().getType()  ==  Token.CALL);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getType()  ==  Token.NAME  ||  p.declaration.node.getParent().getType()  ==  Token.CALL);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getType()  ==  Token.NAME  ||  p.declaration.node.getParent().getType()  ==  Token.CALL);	  p.name,    p.declaration.node.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
364	[BUG]  [BUGGY]  p.name,  p.declaration.node.getType()  ==  Token.NAME  ||  p.declaration.node.getParent().getType()  ==  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.name,  p.declaration.node.getType()  ==  Token.NAME  ||  p.declaration.node.getParent().getType()  ==  Token.EXPR_RESULT);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.name,  p.declaration.node.getType()  ==  Token.NAME  ||  p.declaration.node.getParent().getType()  ==  Token.EXPR_RESULT);	  p.name,    p.declaration.node.getType()    ==    Token.NAME);    	non-compiled	[CE]  not  a  statement	36	None	replace
365	[BUG]  [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p.parent);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p.parent);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendNameAndDescendants(p,  appendDeclarationForAlias(alias,  p.name),  p.parent);	  appendNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.parent);    	non-compiled	[CE]  not  a  statement	57	None	replace
366	[BUG]  [BUGGY]  alias.name,  nForAlias(p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  alias.name,  nForAlias(p.name));  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	alias.name,  nForAlias(p.name));	  p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	41	None	replace
367	[BUG]  [BUGGY]  Name  p  =(Name)n.props.get(p,  n.props.size());  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.get(p,  n.props.size());  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.get(p,  n.props.size());	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
368	[BUG]  [BUGGY]  Name  p  =(Name)n.props.get(p).name;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.get(p).name;  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.get(p).name;	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
369	[BUG]  [BUGGY]  Name  p  =(Name)n.props.remove(p);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  Name  p  =(Name)n.props.remove(p);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	Name  p  =(Name)n.props.remove(p);	  Name    p    =(Name)n.props.get(p);    	non-compiled	[CE]  not  a  statement	33	None	replace
370	[BUG]  [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.inExterns);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.inExterns);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	appendDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name),  p.declaration,  p.inExterns);	  appendDeclarationOfNameAndDescendants(p,    appendPropForAlias(alias,    p.name),    p.declaration);    	non-compiled	[CE]  not  a  statement	2	None	replace
371	[BUG]  [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name)/  2,  p.type);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  p.declaration.node,  appendPropForAlias(alias,  p.name)/  2,  p.type);  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	p.declaration.node,  appendPropForAlias(alias,  p.name)/  2,  p.type);	  p.declaration.node,    appendPropForAlias(alias,    p.name),    p.type);    	non-compiled	[CE]  not  a  statement	19	None	replace
372	[BUG]  [BUGGY]  if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      boolean  canCollapseChildNames  =  n.canCollapseUnannotatedChildNames();  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {        [BUGGY]  if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name));  }  [BUGGY]      p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	452	453	8	replace	if(p.name!=  null)  {  collapseDeclarationOfNameAndDescendants(p.name,  nForAlias(alias,  p.name));  }	  collapseDeclarationOfNameAndDescendants(p.name,    nForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	38	None	replace
