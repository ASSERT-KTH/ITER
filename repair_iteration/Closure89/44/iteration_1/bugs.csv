bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
2	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
3	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
4	[BUG]  [BUGGY]  if(!p.inExterns  &&  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(!p.inExterns  &&  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
5	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]    [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	  	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
6	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
7	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
8	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
9	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
10	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
11	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
12	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
13	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node  [BUGGY]  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node	if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&    p.declaration.node.getParent()  !=  null  &&  	non-compiled	[CE]  not  a  statement	90	None	replace
