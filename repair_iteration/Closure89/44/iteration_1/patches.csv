bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration    ==    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
2	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  n  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  n  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  n  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration    ==    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
3	[BUG]  [BUGGY]  if(n.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(n.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(n.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	7	None	replace
4	[BUG]  [BUGGY]  if(p.declaration  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	7	None	replace
5	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	7	None	replace
6	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	7	None	replace
7	[BUG]  [BUGGY]  If(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  If(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	If(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	7	None	replace
8	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    parent!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	4	None	replace
9	[BUG]  [BUGGY]  if(!p.inExterns  &&  parent  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  parent  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  parent  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    parent!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	4	None	replace
10	[BUG]  [BUGGY]  if(p.inExterns  &&  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  &&  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  &&  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    parent!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	4	None	replace
11	[BUG]  [BUGGY]  if(!p.inExterns  &&  parent!=  null  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  parent!=  null  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  parent!=  null  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    parent!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	4	None	replace
12	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &	  if(!p.inExterns    &&    parent!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	4	None	replace
13	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    parent!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	4	None	replace
14	[BUG]  [BUGGY]  if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu	  if(!p.declaration.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    nu    	non-compiled	[CE]  not  a  statement	8	None	replace
15	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu	  if(!p.declaration.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    nu    	non-compiled	[CE]  not  a  statement	8	None	replace
16	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu	  if(!p.declaration.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    nu    	non-compiled	[CE]  not  a  statement	8	None	replace
17	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu	  if(!p.declaration.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    nu    	non-compiled	[CE]  not  a  statement	8	None	replace
18	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu	  if(!p.declaration.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    nu    	non-compiled	[CE]  not  a  statement	8	None	replace
19	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  nu  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  nu  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  nu	  if(!p.declaration.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    nu    	non-compiled	[CE]  not  a  statement	8	None	replace
20	[BUG]  [BUGGY]  if(!p.inExterns  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    n!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	3	None	replace
21	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    n!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	3	None	replace
22	[BUG]  [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  cannotCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    n!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	3	None	replace
23	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    n!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	3	None	replace
24	[BUG]  [BUGGY]  if(!p.inExterns  &&  parent!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  parent!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  parent!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    n!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	3	None	replace
25	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    n!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	3	None	replace
26	[BUG]  [BUGGY]  if(n.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(n.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(n.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	1	None	replace
27	[BUG]  [BUGGY]  if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	1	None	replace
28	[BUG]  [BUGGY]  if(p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	1	None	replace
29	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	1	None	replace
30	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	1	None	replace
31	[BUG]  [BUGGY]  if(p.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	1	None	replace
32	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  n.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  n.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  ||  n.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    ||    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	2	None	replace
33	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    ||    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	2	None	replace
34	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &	  if(!p.inExterns    &&    canCollapseChildNames    ||    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	2	None	replace
35	[BUG]  [BUGGY]  if(!p.inExterns  ||  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  ||  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  ||  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    ||    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	2	None	replace
36	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    ||    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	2	None	replace
37	[BUG]  [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  cannotCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    ||    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	2	None	replace
38	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	10	None	replace
39	[BUG]  [BUGGY]  if(p.inExterns!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	10	None	replace
40	[BUG]  [BUGGY]  if(n.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(n.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(n.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	10	None	replace
41	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &	  if(p.declaration!=    null    &&    p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	10	None	replace
42	[BUG]  [BUGGY]  if(p.declaration  ==  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration  ==  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration  ==  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	10	None	replace
43	[BUG]  [BUGGY]  if(p.inExterns  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  ==  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	10	None	replace
44	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getNext()!=    null    &&    	non-compiled	[CE]  not  a  statement	9	None	replace
45	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getNext()!=    null    &&    	non-compiled	[CE]  not  a  statement	9	None	replace
46	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()  ==  null  &&  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()  ==  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()  ==  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getNext()!=    null    &&    	non-compiled	[CE]  not  a  statement	9	None	replace
47	[BUG]  [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getNext()!=    null    &&    	non-compiled	[CE]  not  a  statement	9	None	replace
48	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getNext()!=    null    &&    	non-compiled	[CE]  not  a  statement	9	None	replace
49	[BUG]  [BUGGY]  if(!p.inExterns  &&  parent.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  parent.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  parent.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()    ==    null    &&    	non-compiled	[CE]  not  a  statement	12	None	replace
50	[BUG]  [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &    	non-compiled	[CE]  not  a  statement	6	None	replace
51	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &    	non-compiled	[CE]  not  a  statement	6	None	replace
52	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &    	non-compiled	[CE]  not  a  statement	6	None	replace
53	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &    	non-compiled	[CE]  not  a  statement	6	None	replace
54	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.	  if(p.declaration!=    null    &&    p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node    	non-compiled	[CE]  not  a  statement	13	None	replace
55	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.n  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.n  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.n	  if(p.declaration!=    null    &&    p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node    	non-compiled	[CE]  not  a  statement	13	None	replace
56	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration	  if(p.declaration!=    null    &&    p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node    	non-compiled	[CE]  not  a  statement	13	None	replace
57	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p	  if(p.declaration!=    null    &&    p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node    	non-compiled	[CE]  not  a  statement	13	None	replace
58	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&	  if(p.declaration!=    null    &&    p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node    	non-compiled	[CE]  not  a  statement	13	None	replace
59	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.	  if(p.declaration!=    null    &&    p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node    	non-compiled	[CE]  not  a  statement	13	None	replace
60	[BUG]  [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias	      	non-compiled	[CE]  not  a  statement	5	None	replace
61	[BUG]  [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias	      	non-compiled	[CE]  not  a  statement	5	None	replace
62	[BUG]  [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias	      	non-compiled	[CE]  not  a  statement	5	None	replace
63	[BUG]  [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR);  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR);	      	non-compiled	[CE]  not  a  statement	5	None	replace
64	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR);  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR);	      	non-compiled	[CE]  not  a  statement	5	None	replace
65	[BUG]  [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME);  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME);	      	non-compiled	[CE]  not  a  statement	5	None	replace
66	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME);  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME);	      	non-compiled	[CE]  not  a  statement	5	None	replace
67	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu	  if(!p.inExterns    &&    parent!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	4	None	replace
68	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  nu	  if(!p.inExterns    &&    parent!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	4	None	replace
69	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {	      	non-compiled	[CE]  not  a  statement	5	None	replace
70	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR_RESULT)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR_RESULT)  {	      	non-compiled	[CE]  not  a  statement	5	None	replace
71	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  updateSimpleDe  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  updateSimpleDe  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  updateSimpleDe	      	non-compiled	[CE]  not  a  statement	5	None	replace
72	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {	      	non-compiled	[CE]  not  a  statement	5	None	replace
73	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.GETPROP)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.GETPROP)  {  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.GETPROP)  {	      	non-compiled	[CE]  not  a  statement	5	None	replace
74	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  updateSimpleDeclaration  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  updateSimpleDeclaration  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  updateSimpleDeclaration	      	non-compiled	[CE]  not  a  statement	5	None	replace
75	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.SCRIPT)  {  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.SCRIPT)  {  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.SCRIPT)  {	      	non-compiled	[CE]  not  a  statement	5	None	replace
76	[BUG]  [BUGGY]  if(p.inExterns  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	10	None	replace
77	[BUG]  [BUGGY]  if(p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	10	None	replace
78	[BUG]  [BUGGY]  if(p.parent!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.parent!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.parent!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	10	None	replace
79	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getNext()!=    null    &&    	non-compiled	[CE]  not  a  statement	9	None	replace
80	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getNext()!=    null    &&    	non-compiled	[CE]  not  a  statement	9	None	replace
81	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=	  if(!p.declaration.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    nu    	non-compiled	[CE]  not  a  statement	8	None	replace
82	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.	  if(!p.declaration.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    nu    	non-compiled	[CE]  not  a  statement	8	None	replace
83	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &	  if(!p.inExterns    &&    canCollapseChildNames    ||    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	2	None	replace
84	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration    ==    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
85	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &    	non-compiled	[CE]  not  a  statement	6	None	replace
86	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	7	None	replace
87	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    n!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	3	None	replace
88	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH);  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH);	      	non-compiled	[CE]  not  a  statement	5	None	replace
89	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH)  {  updateSimpleDeclaration  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH)  {  updateSimpleDeclaration  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH)  {  updateSimpleDeclaration	      	non-compiled	[CE]  not  a  statement	5	None	replace
90	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDe  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDe  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDe	      	non-compiled	[CE]  not  a  statement	5	None	replace
91	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR_RESULT)  {  updateSimpleDe  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR_RESULT)  {  updateSimpleDe  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR_RESULT)  {  updateSimpleDe	      	non-compiled	[CE]  not  a  statement	5	None	replace
92	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION);  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  not  a  statement	5	None	replace
93	[BUG]  [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration	      	non-compiled	[CE]  not  a  statement	5	None	replace
94	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()    ==    null    &&    	non-compiled	[CE]  not  a  statement	12	None	replace
95	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()    ==    null    &&    	non-compiled	[CE]  not  a  statement	12	None	replace
96	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    n!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	3	None	replace
97	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  n!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    n!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	3	None	replace
98	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	1	None	replace
99	[BUG]  [BUGGY]  if(!p.inExterns  ||  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  ||  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  ||  parent!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    parent!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	4	None	replace
100	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.inExterns  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.inExterns  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    parent!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	4	None	replace
101	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	7	None	replace
102	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	7	None	replace
103	[BUG]  [BUGGY]  if(p.node!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.node!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.node!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.declaration!=    null    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	7	None	replace
104	[BUG]  [BUGGY]  if(!p.declaration.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu	  if(!p.declaration.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    nu    	non-compiled	[CE]  not  a  statement	8	None	replace
105	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.declaration.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.	  if(!p.declaration.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    nu    	non-compiled	[CE]  not  a  statement	8	None	replace
106	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration    ==    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
107	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (n.canCollapse()  &&  canCollapseChildNames)  {  updateObjLitOrFunctionDeclaration(n,  alias);  }  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	455	457	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration    ==    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
