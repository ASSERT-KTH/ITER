bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  globalNames);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  globalNames);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  globalNames);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
2	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  UNSAFE_THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  UNSAFE_THIS);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
3	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  refs);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  refs);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  refs);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
4	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  nameMap);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  nameMap);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  nameMap);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
5	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
6	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  null);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  null);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  null);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
7	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  UNKNOWN_SYNTHETIC);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  UNKNOWN_SYNTHETIC);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  UNKNOWN_SYNTHETIC);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
8	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  3);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  3);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  3);	  flattenNameRef(alias,    r.node,    rParent,    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
9	[BUG]  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  1);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenPrefixes(alias,  r.node,  rParent,  1);	  flattenNameRef(alias,    r.node,    rParent,    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
10	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  2);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  2);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  2);	  flattenNameRef(alias,    r.node,    rParent,    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
11	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  1);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  1);	  flattenNameRef(alias,    r.node,    rParent,    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
12	[BUG]  [BUGGY]  flattenRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);	  flattenRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	4	None	replace
13	[BUG]  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  UNSAFE_THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenPrefixes(alias,  r.node,  rParent,  UNSAFE_THIS);	  flattenRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	4	None	replace
14	[BUG]  [BUGGY]  flattenObjectLitKey(alias,  r.node,  rParent,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectLitKey(alias,  r.node,  rParent,  UNSAFE_THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectLitKey(alias,  r.node,  rParent,  UNSAFE_THIS);	  flattenRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	4	None	replace
15	[BUG]  [BUGGY]  flattenRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);	  flattenRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	4	None	replace
16	[BUG]  [BUGGY]  flattenRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS);	  flattenRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	4	None	replace
17	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  1);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  1);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  1);	  flattenNameRef(alias,    r.node,    rParent,    0);    	non-compiled	[CE]  not  a  statement	9	None	replace
18	[BUG]  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  0);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  0);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenPrefixes(alias,  r.node,  rParent,  0);	  flattenNameRef(alias,    r.node,    rParent,    0);    	non-compiled	[CE]  not  a  statement	9	None	replace
19	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  UNSAFE_THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  UNSAFE_THIS);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_SIGNATURES);    	non-compiled	[CE]  not  a  statement	14	None	replace
20	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  DEFAULT_NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  DEFAULT_NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  DEFAULT_NAMESPACE_REDEFINED_WARNING);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_SIGNATURES);    	non-compiled	[CE]  not  a  statement	14	None	replace
21	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  true);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  true);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  true);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_SIGNATURES);    	non-compiled	[CE]  not  a  statement	14	None	replace
22	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  1);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  1);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_SIGNATURES);    	non-compiled	[CE]  not  a  statement	14	None	replace
23	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  true);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  true);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  true);	  flattenNameRef(alias,    r.node,    rParent,    false);    	non-compiled	[CE]  not  a  statement	11	None	replace
24	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  true);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  true);	  flattenNameRef(alias,    r.node,    rParent,    false);    	non-compiled	[CE]  not  a  statement	11	None	replace
25	[BUG]  [BUGGY]  flattenRef(alias,  r.node,  rParent,  true);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenRef(alias,  r.node,  rParent,  true);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenRef(alias,  r.node,  rParent,  true);	  flattenNameRef(alias,    r.node,    rParent,    false);    	non-compiled	[CE]  not  a  statement	11	None	replace
26	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  false);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  false);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  false);	  flattenNameRef(alias,    r.node,    rParent,    false);    	non-compiled	[CE]  not  a  statement	11	None	replace
27	[BUG]  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  false);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  false);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenPrefixes(alias,  r.node,  rParent,  false);	  flattenNameRef(alias,    r.node,    rParent,    false);    	non-compiled	[CE]  not  a  statement	11	None	replace
28	[BUG]  [BUGGY]  FlattenRef(alias,  r.node,  rParent,  true);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenRef(alias,  r.node,  rParent,  true);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenRef(alias,  r.node,  rParent,  true);	  flattenNameRef(alias,    r.node,    rParent,    false);    	non-compiled	[CE]  not  a  statement	11	None	replace
29	[BUG]  [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {	      	non-compiled	[CE]  not  a  statement	8	None	replace
30	[BUG]  [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()!=  null  ||  r.isSet()))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()!=  null  ||  r.isSet()))  {  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()!=  null  ||  r.isSet()))  {	      	non-compiled	[CE]  not  a  statement	8	None	replace
31	[BUG]  [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  throw  new  IllegalArgumentException( " ");	      	non-compiled	[CE]  not  a  statement	8	None	replace
32	[BUG]  [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  flattenPrefixes(alias,  r,  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  flattenPrefixes(alias,  r,  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  flattenPrefixes(alias,  r,	      	non-compiled	[CE]  not  a  statement	8	None	replace
33	[BUG]  [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenPrefixes(alias,  r,  1);  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenPrefixes(alias,  r,  1);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenPrefixes(alias,  r,  1);	      	non-compiled	[CE]  not  a  statement	8	None	replace
34	[BUG]  [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  return;  [CE]  not  a  statement  [FE]                                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  return;  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  r.isSet()))  {  return;	      	non-compiled	[CE]  not  a  statement	8	None	replace
35	[BUG]  [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  flattenPrefixes(alias,  r  [CE]  not  a  statement  [FE]                                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  flattenPrefixes(alias,  r  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  flattenPrefixes(alias,  r	      	non-compiled	[CE]  not  a  statement	8	None	replace
36	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  refs);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  refs);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  refs);	  flattenNameRef(alias,    r.node,    rParent,    globalNames);    	non-compiled	[CE]  not  a  statement	5	None	replace
37	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  globalNames,  originalName);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  globalNames,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  globalNames,  originalName);	  flattenNameRef(alias,    r.node,    rParent,    globalNames);    	non-compiled	[CE]  not  a  statement	5	None	replace
38	[BUG]  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  globalNames);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  globalNames);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenPrefixes(alias,  r.node,  rParent,  globalNames);	  flattenNameRef(alias,    r.node,    rParent,    globalNames);    	non-compiled	[CE]  not  a  statement	5	None	replace
39	[BUG]  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  null);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  null);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenPrefixes(alias,  r.node,  rParent,  null);	  flattenNameRef(alias,    r.node,    rParent,    null);    	non-compiled	[CE]  not  a  statement	10	None	replace
40	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  originalName,  null);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  originalName,  null);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  originalName,  null);	  flattenNameRef(alias,    r.node,    rParent,    null);    	non-compiled	[CE]  not  a  statement	10	None	replace
41	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  globalNames);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  globalNames);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  globalNames);	  flattenNameRef(alias,    r.node,    rParent,    null);    	non-compiled	[CE]  not  a  statement	10	None	replace
42	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);	  flattenNameRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	2	None	replace
43	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS);	  flattenNameRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	2	None	replace
44	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);	  flattenNameRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	2	None	replace
45	[BUG]  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  nameMap);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  nameMap);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenPrefixes(alias,  r.node,  rParent,  nameMap);	  flattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	1	None	replace
46	[BUG]  [BUGGY]  FlattenNameRef(nameMap,  r.node,  rParent,  alias);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(nameMap,  r.node,  rParent,  alias);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(nameMap,  r.node,  rParent,  alias);	  flattenNameRef(alias,    r.node,    rParent,    nameMap);    	non-compiled	[CE]  not  a  statement	6	None	replace
47	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  localNames);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  localNames);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  localNames);	  flattenNameRef(alias,    r.node,    rParent,    nameMap);    	non-compiled	[CE]  not  a  statement	6	None	replace
48	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_REDEFINED_WARNING);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
49	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_REDEFINED_WARNING);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
50	[BUG]  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenPrefixes(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
51	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  UNSAFE_THIS,  rParent);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  UNSAFE_THIS,  rParent);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  UNSAFE_THIS,  rParent);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
52	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
53	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
54	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  UNSAFE_THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  UNSAFE_THIS);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
55	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  globalNames);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  globalNames);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  globalNames);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
56	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
57	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  nameMap);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  nameMap);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  nameMap);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
58	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  null);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  null);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  null);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
59	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
60	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  UNSAFE_THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  UNSAFE_THIS);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  not  a  statement	15	None	replace
61	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  r.type);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  r.type);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  r.type);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  not  a  statement	15	None	replace
62	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  n.refs);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  n.refs);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  n.refs);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  not  a  statement	15	None	replace
63	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  globalNames,  originalName);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  globalNames,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  globalNames,  originalName);	  flattenNameRef(alias,    r.node,    rParent,    globalNames);    	non-compiled	[CE]  not  a  statement	5	None	replace
64	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  false,  r.type);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  false,  r.type);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  false,  r.type);	  flattenNameRef(alias,    r.node,    rParent,    false);    	non-compiled	[CE]  not  a  statement	11	None	replace
65	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);	  flattenNameRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	2	None	replace
66	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_WARNING);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_WARNING);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_WARNING);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
67	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_WARNING);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_WARNING);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  UNSAFE_NAMESPACE_WARNING);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
68	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  r.node);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  r.node);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  r.node);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
69	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  rParent);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  rParent);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  rParent);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
70	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  r.getTwin());  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  r.getTwin());  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  r.getTwin());	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
71	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  globalName);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  globalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  globalName);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
72	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  false);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  false);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  false);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
73	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  true);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  true);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
74	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  twin);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  twin);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  twin);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
75	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  this);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  this);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  this);	  flattenNameRef(alias,    r.node,    rParent,    null);    	non-compiled	[CE]  not  a  statement	10	None	replace
76	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  null,  r.originalName);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  null,  r.originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  null,  r.originalName);	  flattenNameRef(alias,    r.node,    rParent,    null);    	non-compiled	[CE]  not  a  statement	10	None	replace
77	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  0);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  0);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_SIGNATURES);    	non-compiled	[CE]  not  a  statement	14	None	replace
78	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  originalName);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  originalName);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  not  a  statement	15	None	replace
79	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  nameMap);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  nameMap);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  nameMap);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  not  a  statement	15	None	replace
80	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  globalName);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  globalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  globalName);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
81	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  true);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  true);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
82	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  localNameMap);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  localNameMap);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  localNameMap);	  flattenNameRef(alias,    r.node,    rParent,    nameMap);    	non-compiled	[CE]  not  a  statement	6	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(r.node.getType()  ==  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  Preconditions.checkState(r.node.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	Preconditions.checkState(r.node.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  not  a  statement	8	None	replace
84	[BUG]  [BUGGY]  Context.report(JSError.make(r.node,  rParent,  UNSAFE_THIS));  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  Context.report(JSError.make(r.node,  rParent,  UNSAFE_THIS));  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	Context.report(JSError.make(r.node,  rParent,  UNSAFE_THIS));	      	non-compiled	[CE]  not  a  statement	8	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkState(r.node.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  Preconditions.checkState(r.node.getType()  ==  Token.NAME);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	Preconditions.checkState(r.node.getType()  ==  Token.NAME);	      	non-compiled	[CE]  not  a  statement	8	None	replace
86	[BUG]  [BUGGY]  Context.report(JSError.make(r,  n,  UNSAFE_THIS));  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  Context.report(JSError.make(r,  n,  UNSAFE_THIS));  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	Context.report(JSError.make(r,  n,  UNSAFE_THIS));	      	non-compiled	[CE]  not  a  statement	8	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(r.node.getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  Preconditions.checkState(r.node.getType()  ==  Token.FUNCTION);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	Preconditions.checkState(r.node.getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  not  a  statement	8	None	replace
88	[BUG]  [BUGGY]  Preconditions.checkState(r.node.getType()  ==  Token.GETPROP);  [CE]  not  a  statement  [FE]                                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  Preconditions.checkState(r.node.getType()  ==  Token.GETPROP);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	Preconditions.checkState(r.node.getType()  ==  Token.GETPROP);	      	non-compiled	[CE]  not  a  statement	8	None	replace
89	[BUG]  [BUGGY]  Context.report(JSError.make(r,  n,  UNSAFE_THIS,  originalName));  [CE]  not  a  statement  [FE]                                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  Context.report(JSError.make(r,  n,  UNSAFE_THIS,  originalName));  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	Context.report(JSError.make(r,  n,  UNSAFE_THIS,  originalName));	      	non-compiled	[CE]  not  a  statement	8	None	replace
90	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  3);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  3);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  3);	  flattenNameRef(alias,    r.node,    rParent,    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
91	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  0);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  0);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  0);	  flattenNameRef(alias,    r.node,    rParent,    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
92	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  false);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  false);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  false);	  flattenNameRef(alias,    r.node,    rParent,    0);    	non-compiled	[CE]  not  a  statement	9	None	replace
93	[BUG]  [BUGGY]  flattenRef(alias,  r.node,  rParent,  false);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenRef(alias,  r.node,  rParent,  false);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenRef(alias,  r.node,  rParent,  false);	  flattenRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	4	None	replace
94	[BUG]  [BUGGY]  flattenRef(alias,  r.node,  rParent,  0);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenRef(alias,  r.node,  rParent,  0);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenRef(alias,  r.node,  rParent,  0);	  flattenRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	4	None	replace
95	[BUG]  [BUGGY]  flattenRef(alias,  r.node,  rParent,  3);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenRef(alias,  r.node,  rParent,  3);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenRef(alias,  r.node,  rParent,  3);	  flattenRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	4	None	replace
96	[BUG]  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  globalName);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  globalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenPrefixes(alias,  r.node,  rParent,  globalName);	  flattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	1	None	replace
97	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  originalName);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE,  originalName);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  not  a  statement	15	None	replace
98	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  UNKNOWN_EXPR_TYPE,  r.type);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  UNKNOWN_EXPR_TYPE,  r.type);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  UNKNOWN_EXPR_TYPE,  r.type);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  not  a  statement	15	None	replace
99	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  UNKNOWN_EXPR_TYPE,  r.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  UNKNOWN_EXPR_TYPE,  r.name);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  UNKNOWN_EXPR_TYPE,  r.name);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  not  a  statement	15	None	replace
100	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  UNKNOWN_EXPR_TYPE,  r.type);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  UNKNOWN_EXPR_TYPE,  r.type);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  UNKNOWN_EXPR_TYPE,  r.type);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  not  a  statement	15	None	replace
101	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  originalName);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  originalName);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_SIGNATURES);    	non-compiled	[CE]  not  a  statement	14	None	replace
102	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  originalName);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES,  originalName);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_SIGNATURES);    	non-compiled	[CE]  not  a  statement	14	None	replace
103	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  INVALID_SIGNATURES);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  INVALID_SIGNATURES);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  INVALID_SIGNATURES);	  flattenNameRef(alias,    r.node,    rParent,    UNKNOWN_SIGNATURES);    	non-compiled	[CE]  not  a  statement	14	None	replace
104	[BUG]  [BUGGY]  FlattenUtil.flattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenUtil.flattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenUtil.flattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS);	  flattenNameRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	2	None	replace
105	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  originalName,  rParent,  globalNames);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  originalName,  rParent,  globalNames);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  originalName,  rParent,  globalNames);	  flattenNameRef(alias,    r.node,    rParent,    globalNames);    	non-compiled	[CE]  not  a  statement	5	None	replace
106	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  originalName,  rParent,  globalNames);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  originalName,  rParent,  globalNames);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  originalName,  rParent,  globalNames);	  flattenNameRef(alias,    r.node,    rParent,    globalNames);    	non-compiled	[CE]  not  a  statement	5	None	replace
107	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  originalName,  rParent,  nameMap);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  originalName,  rParent,  nameMap);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  originalName,  rParent,  nameMap);	  flattenNameRef(alias,    r.node,    rParent,    nameMap);    	non-compiled	[CE]  not  a  statement	6	None	replace
108	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  originalName);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  rParent,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  rParent,  originalName);	  flattenNameRef(alias,    r.node,    rParent,    nameMap);    	non-compiled	[CE]  not  a  statement	6	None	replace
109	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  nameMap,  n.refs);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  nameMap,  n.refs);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  nameMap,  n.refs);	  flattenNameRef(alias,    r.node,    rParent,    nameMap);    	non-compiled	[CE]  not  a  statement	6	None	replace
110	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  null,  r.isSet());  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  null,  r.isSet());  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  null,  r.isSet());	  flattenNameRef(alias,    r.node,    rParent,    null);    	non-compiled	[CE]  not  a  statement	10	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkArgument(r.node.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  Preconditions.checkArgument(r.node.getType()  ==  Token.NAME);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	Preconditions.checkArgument(r.node.getType()  ==  Token.NAME);	      	non-compiled	[CE]  not  a  statement	8	None	replace
112	[BUG]  [BUGGY]  n.removeChild(r.node);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  n.removeChild(r.node);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	n.removeChild(r.node);	      	non-compiled	[CE]  not  a  statement	8	None	replace
113	[BUG]  [BUGGY]  Preconditions.checkState(r.node.getType()  ==  Token.THIS);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  Preconditions.checkState(r.node.getType()  ==  Token.THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	Preconditions.checkState(r.node.getType()  ==  Token.THIS);	      	non-compiled	[CE]  not  a  statement	8	None	replace
114	[BUG]  [BUGGY]  Preconditions.checkArgument(r.node.getType()  ==  Token.THIS);  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  Preconditions.checkArgument(r.node.getType()  ==  Token.THIS);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	Preconditions.checkArgument(r.node.getType()  ==  Token.THIS);	      	non-compiled	[CE]  not  a  statement	8	None	replace
115	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  refs);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  refs);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  refs);	  flattenObjectRef(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	13	None	replace
116	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  false,  r.originalName);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  false,  r.originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  false,  r.originalName);	  flattenNameRef(alias,    r.node,    rParent,    false);    	non-compiled	[CE]  not  a  statement	11	None	replace
117	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  false,  r.refs);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  false,  r.refs);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  false,  r.refs);	  flattenNameRef(alias,    r.node,    rParent,    false);    	non-compiled	[CE]  not  a  statement	11	None	replace
118	[BUG]  [BUGGY]  FlattenRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenRef(alias,  r.node,  rParent,  UNSAFE_THIS,  originalName);	  flattenRef(alias,    r.node,    rParent,    UNSAFE_THIS);    	non-compiled	[CE]  not  a  statement	4	None	replace
119	[BUG]  [BUGGY]  FlattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  r.node);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  r.node);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenNameRef(alias,  r.node,  UNSAFE_NAMESPACE_WARNING,  r.node);	  flattenNameRef(alias,    r.node,    rParent,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  not  a  statement	12	None	replace
120	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  originalName,  rParent);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  originalName,  rParent);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  originalName,  rParent);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
121	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  flattenRefs);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  flattenRefs);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  flattenRefs);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
122	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  flattenNames);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {    [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  flattenNames);  [BUGGY]    }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  flattenNames);	  FlattenPrefixes(alias,    r.node,    rParent,    originalName);    	non-compiled	[CE]  not  a  statement	3	None	replace
