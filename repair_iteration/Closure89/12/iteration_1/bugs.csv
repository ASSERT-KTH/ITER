bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  originalName);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenPrefixes(alias,  r.node,  rParent,  originalName);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenPrefixes(alias,  r.node,  rParent,  originalName);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
2	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNSAFE_THIS);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
3	[BUG]  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  originalName);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  FlattenPrefixes(alias,  r.node,  rParent,  originalName);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	FlattenPrefixes(alias,  r.node,  rParent,  originalName);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
4	[BUG]  [BUGGY]  flattenRef(alias,  r.node,  rParent,  UNSAFE_THIS);  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenRef(alias,  r.node,  rParent,  UNSAFE_THIS);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenRef(alias,  r.node,  rParent,  UNSAFE_THIS);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
5	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  globalNames);  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  globalNames);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  globalNames);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
6	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  nameMap);  [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  nameMap);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  nameMap);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
7	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  1);  [CE]  not  a  statement  [FE]                AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  1);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  1);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
8	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]                  AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]    [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	  	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
9	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  0);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  0);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  0);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
10	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  null);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  null);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  null);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
11	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  false);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  false);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  false);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
12	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  NAMESPACE_REDEFINED_WARNING);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
13	[BUG]  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  originalName);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenObjectRef(alias,  r.node,  rParent,  originalName);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenObjectRef(alias,  r.node,  rParent,  originalName);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
14	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_SIGNATURES);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
15	[BUG]  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE);  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  for  (Ref  r  :  n.refs)  {  Node  rParent  =  r.node.getParent();      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  [BUGGY]  flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE);  [BUGGY]  }  }  }    if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2519763153394848	329	329	8	replace	flattenNameRef(alias,  r.node,  rParent,  UNKNOWN_EXPR_TYPE);	flattenNameRef(alias,  r.node,  rParent,  originalName);  	non-compiled	[CE]  not  a  statement	24	None	replace
