bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias);  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  propAlias);	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
2	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias);  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias);	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
3	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  n);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  n);  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  n);	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
4	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias);  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias);  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  propAlias);	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
5	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  n.props);  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  n.props);  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  n.props);	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
6	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias);  [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias);  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias);	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
7	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(propAlias,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(propAlias,  p.name);  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(propAlias,  p.name);	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
8	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]                  AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]    [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	  	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
9	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias);  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias);	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
10	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias));  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias));	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
11	[BUG]  [BUGGY]  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
12	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name));	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
13	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  appendPropForAlias(alias,  p.name);  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	appendPropForAlias(alias,  p.name);	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
14	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  n.name);  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  n.name);  [BUGGY]  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  n.name);	flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  	non-compiled	[CE]  not  a  statement	80	None	replace
