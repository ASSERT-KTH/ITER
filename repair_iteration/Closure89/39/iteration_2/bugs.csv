bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias);	  if(p.canCollapse())    {    flattenReferencesToCollapsibleDescendantNames(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
2	[BUG]  [BUGGY]  AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  if(p.canCollapse())    {    flattenReferencesToCollapsibleDescendantNames(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
3	[BUG]  [BUGGY]  parent.flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  parent.flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	parent.flattenReferencesToCollapsibleDescendantNames(p,  propAlias);	  if(p.canCollapse())    {    flattenReferencesToCollapsibleDescendantNames(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
4	[BUG]  [BUGGY]  AppendPropsToCollapsibleDescendantNames(p,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  AppendPropsToCollapsibleDescendantNames(p,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	AppendPropsToCollapsibleDescendantNames(p,  propAlias);	  if(p.canCollapse())    {    flattenReferencesToCollapsibleDescendantNames(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
5	[BUG]  [BUGGY]  AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendants(p,  propAlias);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendants(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendants(p,  propAlias);  }	  if(p.canCollapse())    {    flattenReferencesToCollapsibleDescendantNames(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
6	[BUG]  [BUGGY]  AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  if(p.canCollapse())    {    flattenReferencesToCollapsibleDescendantNames(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
7	[BUG]  [BUGGY]  AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantsNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantsNames(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	AppendPropForAlias(alias,  p.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantsNames(p,  propAlias);  }	  if(p.canCollapse())    {    flattenReferencesToCollapsibleDescendantNames(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
8	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	3	None	replace
9	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	3	None	replace
10	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(n,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	3	None	replace
11	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  n);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  n);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  n);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	3	None	replace
12	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	3	None	replace
13	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	2	None	replace
14	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	2	None	replace
15	[BUG]  [BUGGY]  flattenReferencesTo(p,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesTo(p,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesTo(p,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	2	None	replace
16	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  p);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  p);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  p);	  flattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	2	None	replace
17	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias);	  flattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	2	None	replace
18	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(alias,  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(alias,  p);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(alias,  p);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	6	None	replace
19	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  alias);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  alias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  alias);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	6	None	replace
20	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	6	None	replace
21	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  alias);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	6	None	replace
22	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.props);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.props);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	6	None	replace
23	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	5	None	replace
24	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	5	None	replace
25	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	5	None	replace
26	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	5	None	replace
27	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
28	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
29	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
30	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
31	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  propAlias));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  propAlias));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  propAlias));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
32	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.props,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.props,  appendPropForAlias(alias,  p.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n.props,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
33	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	for(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
34	[BUG]  [BUGGY]  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
35	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	for(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
36	[BUG]  [BUGGY]  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  compiler.reportCodeChange();  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	compiler.reportCodeChange();	      	non-compiled	[CE]  not  a  statement	8	None	replace
37	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(!p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(!p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	for(Name  p  :  n.props)  {  if(!p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
38	[BUG]  [BUGGY]  for(Name  n  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  for(Name  n  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	for(Name  n  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
39	[BUG]  [BUGGY]  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  else  {  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  else  {  compiler.reportCodeChange();  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
40	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	10	None	replace
41	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	10	None	replace
42	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	10	None	replace
43	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	10	None	replace
44	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  appendPropForAlias(p));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  appendPropForAlias(p));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  appendPropForAlias(p));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	10	None	replace
45	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  appendPropForAlias(alias));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  appendPropForAlias(alias));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	10	None	replace
46	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  propAlias);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  appendPropForAlias(alias,  p.name,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	appendPropForAlias(alias,  p.name,  propAlias);	  appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
47	[BUG]  [BUGGY]  appendAlias(alias,  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  appendAlias(alias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	appendAlias(alias,  p.name);	  appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
48	[BUG]  [BUGGY]  appendPropForAlias(alias,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  appendPropForAlias(alias,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	appendPropForAlias(alias,  propAlias);	  appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
49	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  n.props);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  appendPropForAlias(alias,  p.name,  n.props);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	appendPropForAlias(alias,  p.name,  n.props);	  appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
50	[BUG]  [BUGGY]  appendPropForAlias(propAlias,  p.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  appendPropForAlias(propAlias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	appendPropForAlias(propAlias,  p.name);	  appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
51	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  appendNameForAlias(alias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	appendNameForAlias(alias,  p.name);	  appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
52	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	14	None	replace
53	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	14	None	replace
54	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	14	None	replace
55	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	14	None	replace
56	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  n.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  n.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  n.name);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	14	None	replace
57	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	14	None	replace
58	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  p.name);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
59	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  p.name);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
60	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(propAlias,  alias);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(propAlias,  alias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(propAlias,  alias);	  flattenReferencesToCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
61	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
62	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  n);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  n);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  n);	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	9	None	replace
63	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  n.props);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  n.props);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  n.props);	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	9	None	replace
64	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  p.name);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(propAlias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	9	None	replace
65	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);	  flattenReferencesToCollapsibleDescendantNames(propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	7	None	replace
66	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	7	None	replace
67	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(alias,  p.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(alias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(alias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	7	None	replace
68	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(n,    propAlias);    	non-compiled	[CE]  not  a  statement	4	None	replace
69	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  n);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  n);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(propAlias,  n);	  FlattenReferencesToCollapsibleDescendantNames(n,    propAlias);    	non-compiled	[CE]  not  a  statement	4	None	replace
70	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p);	  FlattenReferencesToCollapsibleDescendantNames(n,    propAlias);    	non-compiled	[CE]  not  a  statement	4	None	replace
71	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  n);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  n);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  n);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	3	None	replace
72	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	3	None	replace
73	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.props);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.props);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	6	None	replace
74	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	6	None	replace
75	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  null);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  null);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  null);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias);    	non-compiled	[CE]  not  a  statement	6	None	replace
76	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  appendPropForAlias(alias,  p.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
77	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
78	[BUG]  [BUGGY]  appendStringForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  appendStringForAlias(alias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	appendStringForAlias(alias,  p.name);	  appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
79	[BUG]  [BUGGY]  appendDescriptorForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  appendDescriptorForAlias(alias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	appendDescriptorForAlias(alias,  p.name);	  appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
80	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  appendPropForAlias(alias,  p.name,  p.type);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	appendPropForAlias(alias,  p.name,  p.type);	  appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
81	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
82	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
83	[BUG]  [BUGGY]  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  propAlias));	      	non-compiled	[CE]  not  a  statement	8	None	replace
84	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  p.name);  }  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  p.name);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  p.name);  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
85	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  n.props);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  n.props);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  propAlias,  n.props);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	5	None	replace
86	[BUG]  [BUGGY]  AppendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  AppendPropForAlias(alias,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	AppendPropForAlias(alias,  p.name);	  if(p.canCollapse())    {    flattenReferencesToCollapsibleDescendantNames(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
87	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	10	None	replace
88	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(propAlias));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(propAlias));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(propAlias));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	10	None	replace
89	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(p.name));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(p.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	10	None	replace
90	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  p.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  p.name);	  FlattenReferencesToCollapsibleDescendantNames(n,    propAlias);    	non-compiled	[CE]  not  a  statement	4	None	replace
91	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);	  flattenReferencesToCollapsibleDescendantNames(propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	7	None	replace
92	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(p.collapsePropertiesOnExternTypes)  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(p.collapsePropertiesOnExternTypes)  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	for(Name  p  :  n.props)  {  if(p.collapsePropertiesOnExternTypes)  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
93	[BUG]  [BUGGY]  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  else  {  for(Name  p  :  n.props)  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  else  {  for(Name  p  :  n.props)  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  else  {  for(Name  p  :  n.props)  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
94	[BUG]  [BUGGY]  AppendPropForAlias(alias,  p.name)  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  AppendPropForAlias(alias,  p.name)  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	AppendPropForAlias(alias,  p.name)  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  if(p.canCollapse())    {    flattenReferencesToCollapsibleDescendantNames(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
95	[BUG]  [BUGGY]  AppendPropForAlias(alias,  p.name)&&  p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  AppendPropForAlias(alias,  p.name)&&  p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	AppendPropForAlias(alias,  p.name)&&  p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  if(p.canCollapse())    {    flattenReferencesToCollapsibleDescendantNames(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
96	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
97	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(n,    propAlias);    	non-compiled	[CE]  not  a  statement	4	None	replace
98	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	10	None	replace
99	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n.props,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n.props,  propAlias);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(n.props,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	5	None	replace
100	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	3	None	replace
101	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
102	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }    [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	305	305	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	12	None	replace
