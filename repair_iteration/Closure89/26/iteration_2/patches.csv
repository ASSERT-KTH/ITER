bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propAlias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propAlias));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	48	None	replace
2	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  appendPropForAlias(alias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  appendPropForAlias(alias));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	48	None	replace
3	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  appendPropForAlias(alias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  appendPropForAlias(alias));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	48	None	replace
4	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	48	None	replace
5	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  alias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  alias,  appendPropForAlias(alias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  alias,  appendPropForAlias(alias));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	48	None	replace
6	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.props));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.props));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.props));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	48	None	replace
7	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  p.name);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	54	None	replace
8	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  p.type);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  p.type);	  flattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	54	None	replace
9	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias));	  flattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	54	None	replace
10	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	54	None	replace
11	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	54	None	replace
12	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  null);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  null);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	21	None	replace
13	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  null));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  null));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  null));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	21	None	replace
14	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  null,  propAlias);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  null,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  null,  propAlias);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	21	None	replace
15	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  this);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  this);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  this);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	21	None	replace
16	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  null);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  null);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	21	None	replace
17	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(propAlias,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(propAlias,    p);    	non-compiled	[CE]  not  a  statement	20	None	replace
18	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(propAlias,  p.name);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(propAlias,  p.name);	  FlattenReferencesToCollapsibleDescendants(propAlias,    p);    	non-compiled	[CE]  not  a  statement	20	None	replace
19	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propertyAlias);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propertyAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propertyAlias);	  FlattenReferencesToCollapsibleDescendants(propAlias,    p);    	non-compiled	[CE]  not  a  statement	20	None	replace
20	[BUG]  [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  p.name,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendantNames(alias,  p.name,  propAlias);	  appendPropForAlias(alias,    p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	11	None	replace
21	[BUG]  [BUGGY]  appendAlias(alias,  p.name,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(alias,  p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(alias,  p.name,  propAlias);	  appendPropForAlias(alias,    p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	11	None	replace
22	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  propAlias,  n);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForAlias(alias,  p.name,  propAlias,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForAlias(alias,  p.name,  propAlias,  n);	  appendPropForAlias(alias,    p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	11	None	replace
23	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  propAlias  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForAlias(alias,  p.name,  propAlias  +  1);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForAlias(alias,  p.name,  propAlias  +  1);	  appendPropForAlias(alias,    p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	11	None	replace
24	[BUG]  [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  propAlias.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  propAlias.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendantNames(alias,  propAlias.name);	  appendPropForAlias(alias,    propAlias.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
25	[BUG]  [BUGGY]  AppendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  AppendPropForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	AppendPropForAlias(alias,  p.name);	  appendPropForAlias(alias,    propAlias.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
26	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  alias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  alias);	  FlattenReferencesToCollapsibleDescendantNames(n,    alias);    	non-compiled	[CE]  not  a  statement	9	None	replace
27	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n.props,  alias);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n.props,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n.props,  alias);	  FlattenReferencesToCollapsibleDescendantNames(n,    alias);    	non-compiled	[CE]  not  a  statement	9	None	replace
28	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  alias,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  alias,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(n,    alias);    	non-compiled	[CE]  not  a  statement	9	None	replace
29	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(n,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(n,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(n,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(n,    alias);    	non-compiled	[CE]  not  a  statement	9	None	replace
30	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantsNames(p,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantsNames(p,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantsNames(p,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(propAlias,    p);    	non-compiled	[CE]  not  a  statement	28	None	replace
31	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  p);	  flattenReferencesToCollapsibleDescendantNames(propAlias,    p);    	non-compiled	[CE]  not  a  statement	28	None	replace
32	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(alias,  p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(alias,  p.name,  propAlias);	  appendNameForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	42	None	replace
33	[BUG]  [BUGGY]  appendNameForAlias(propAlias,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(propAlias,  p.name);	  appendNameForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	42	None	replace
34	[BUG]  [BUGGY]  appendNameForAlias(alias,  propAlias.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(alias,  propAlias.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(alias,  propAlias.name);	  appendNameForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	42	None	replace
35	[BUG]  [BUGGY]  appendNameForAlias(alias,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(alias,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(alias,  propAlias,  p.name);	  appendNameForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	42	None	replace
36	[BUG]  [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendantNames(alias,  propAlias,  p.name);	  appendPropForAlias(alias,    propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	60	None	replace
37	[BUG]  [BUGGY]  AppendPropForAlias(alias,  p.name,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  AppendPropForAlias(alias,  p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	AppendPropForAlias(alias,  p.name,  propAlias);	  appendPropForAlias(alias,    propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	60	None	replace
38	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	57	None	replace
39	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	57	None	replace
40	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	57	None	replace
41	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	57	None	replace
42	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propAlias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propAlias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propAlias,  p.name));	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	57	None	replace
43	[BUG]  [BUGGY]  appendPropForCollapsibleDescendantNames(p,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendantNames(p,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendantNames(p,  propAlias);	  appendPropForCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
44	[BUG]  [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  propAlias,  p.type);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  propAlias,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendantNames(alias,  propAlias,  p.type);	  appendPropForCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
45	[BUG]  [BUGGY]  appendPropForCollapsibleDescendantNames(propAlias,  alias);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendantNames(propAlias,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendantNames(propAlias,  alias);	  appendPropForCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
46	[BUG]  [BUGGY]  appendAliasForCollapsibleDescendantNames(alias,  propAlias);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAliasForCollapsibleDescendantNames(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAliasForCollapsibleDescendantNames(alias,  propAlias);	  appendPropForCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
47	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  alias,  propAlias);	  flattenReferencesToCollapsibleDescendants(p,    alias);    	non-compiled	[CE]  not  a  statement	24	None	replace
48	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p.name,  propAlias);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p.name,  propAlias);	  flattenReferencesToCollapsibleDescendants(p,    alias);    	non-compiled	[CE]  not  a  statement	24	None	replace
49	[BUG]  [BUGGY]  appendPropForCollapsibleDescendantNames(p,  propAlias.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendantNames(p,  propAlias.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendantNames(p,  propAlias.name);	  appendPropForAlias(propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
50	[BUG]  [BUGGY]  appendStringForAlias(alias,  p.name,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(alias,  p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(alias,  p.name,  propAlias);	  appendStringForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	43	None	replace
51	[BUG]  [BUGGY]  appendStringForAlias(alias,  propAlias.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(alias,  propAlias.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(alias,  propAlias.name);	  appendStringForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	43	None	replace
52	[BUG]  [BUGGY]  appendStringForAlias(alias,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(alias,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(alias,  propAlias,  p.name);	  appendStringForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	43	None	replace
53	[BUG]  [BUGGY]  appendStringForAlias(propAlias,  p.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(propAlias,  p.name);	  appendStringForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	43	None	replace
54	[BUG]  [BUGGY]  AppendStringForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  AppendStringForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	AppendStringForAlias(alias,  p.name);	  appendStringForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	43	None	replace
55	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	30	None	replace
56	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	30	None	replace
57	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n.props,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n.props,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n.props,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	30	None	replace
58	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  n.props);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  n.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	30	None	replace
59	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  p.props);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  p.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(propAlias,  p.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	30	None	replace
60	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	45	None	replace
61	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias,  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	45	None	replace
62	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	45	None	replace
63	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  inlineAliases);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  inlineAliases);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  inlineAliases);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	45	None	replace
64	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	45	None	replace
65	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	40	None	replace
66	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	40	None	replace
67	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	40	None	replace
68	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	40	None	replace
69	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	40	None	replace
70	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  alias);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  alias);	  FlattenReferencesToCollapsibleDescendants(p,    alias);    	non-compiled	[CE]  not  a  statement	16	None	replace
71	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(n,  alias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(n,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(n,  alias);	  FlattenReferencesToCollapsibleDescendants(p,    alias);    	non-compiled	[CE]  not  a  statement	16	None	replace
72	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n.props);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n.props);	  FlattenReferencesToCollapsibleDescendants(p,    alias);    	non-compiled	[CE]  not  a  statement	16	None	replace
73	[BUG]  [BUGGY]  appendDescriptorForAlias(alias,  p.name,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendDescriptorForAlias(alias,  p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendDescriptorForAlias(alias,  p.name,  propAlias);	  appendDescriptorForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	52	None	replace
74	[BUG]  [BUGGY]  appendDescriptorForAlias(alias,  propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendDescriptorForAlias(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendDescriptorForAlias(alias,  propAlias);	  appendDescriptorForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	52	None	replace
75	[BUG]  [BUGGY]  appendDescriptorForAlias(alias,  propAlias.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendDescriptorForAlias(alias,  propAlias.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendDescriptorForAlias(alias,  propAlias.name);	  appendDescriptorForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	52	None	replace
76	[BUG]  [BUGGY]  appendDescriptorForCollapsibleDescendantNames(alias,  p.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendDescriptorForCollapsibleDescendantNames(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendDescriptorForCollapsibleDescendantNames(alias,  p.name);	  appendDescriptorForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	52	None	replace
77	[BUG]  [BUGGY]  appendDescriptorForAlias(propAlias,  p.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendDescriptorForAlias(propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendDescriptorForAlias(propAlias,  p.name);	  appendDescriptorForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	52	None	replace
78	[BUG]  [BUGGY]  appendDescriptorForAlias(alias,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendDescriptorForAlias(alias,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendDescriptorForAlias(alias,  propAlias,  p.name);	  appendDescriptorForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	52	None	replace
79	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	53	None	replace
80	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	53	None	replace
81	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	53	None	replace
82	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	53	None	replace
83	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	53	None	replace
84	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	53	None	replace
85	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  alias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  alias);	  FlattenReferencesToCollapsibleDescendants(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	63	None	replace
86	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  propAlias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  propAlias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  propAlias));	  FlattenReferencesToCollapsibleDescendants(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	63	None	replace
87	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  alias,  propAlias);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  alias,  propAlias);	  FlattenReferencesToCollapsibleDescendants(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	63	None	replace
88	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  propAlias);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  propAlias);	  FlattenReferencesToCollapsibleDescendants(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	63	None	replace
89	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  alias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  alias);	  flattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	14	None	replace
90	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  alias);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  alias);	  flattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	14	None	replace
91	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  alias,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(n,  alias,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	14	None	replace
92	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  n);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  n);	  FlattenReferencesToCollapsibleDescendants(p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	19	None	replace
93	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  n.props);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  n.props);	  FlattenReferencesToCollapsibleDescendants(p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	19	None	replace
94	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  appendPropForAlias(alias,  propAlias));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  appendPropForAlias(alias,  propAlias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  appendPropForAlias(alias,  propAlias));	  FlattenReferencesToCollapsibleDescendants(p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	19	None	replace
95	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  true);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  true);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  true);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    false);    	non-compiled	[CE]  not  a  statement	22	None	replace
96	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  false);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  false);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  false);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    false);    	non-compiled	[CE]  not  a  statement	22	None	replace
97	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  false,  n.props);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  false,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  false,  n.props);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    false);    	non-compiled	[CE]  not  a  statement	22	None	replace
98	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  false);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  false);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  false);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    false);    	non-compiled	[CE]  not  a  statement	22	None	replace
99	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  false,  n);  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  false,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  false,  n);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    false);    	non-compiled	[CE]  not  a  statement	22	None	replace
100	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(n,    propAlias);    	non-compiled	[CE]  not  a  statement	56	None	replace
101	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(n,    propAlias);    	non-compiled	[CE]  not  a  statement	56	None	replace
102	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(n,    propAlias);    	non-compiled	[CE]  not  a  statement	56	None	replace
103	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  p.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(p.name,    alias);    	non-compiled	[CE]  not  a  statement	15	None	replace
104	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  p.props);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  p.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  p.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    n.props);    	non-compiled	[CE]  not  a  statement	10	None	replace
105	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  n.props);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  n.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    n.props);    	non-compiled	[CE]  not  a  statement	10	None	replace
106	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  n.props);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(propAlias,  n.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    n.props);    	non-compiled	[CE]  not  a  statement	10	None	replace
107	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n.name,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n.name,  propAlias);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	62	None	replace
108	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n,  propAlias);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	62	None	replace
109	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(n,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(n,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(n,  propAlias,  p.name);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	62	None	replace
110	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n.props,  propAlias);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n.props,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n.props,  propAlias);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	62	None	replace
111	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  n.name);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  n.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  n.name);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	62	None	replace
112	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	55	None	replace
113	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  n,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	55	None	replace
114	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	55	None	replace
115	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	64	None	replace
116	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	64	None	replace
117	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(propAlias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	64	None	replace
118	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.props,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.props,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n.props,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	64	None	replace
119	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  propAlias));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  propAlias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  propAlias));	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	6	None	replace
120	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	6	None	replace
121	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  null,  propAlias);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  null,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  null,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    null);    	non-compiled	[CE]  not  a  statement	38	None	replace
122	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  null);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  null);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    null);    	non-compiled	[CE]  not  a  statement	38	None	replace
123	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  null);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  null);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    null);    	non-compiled	[CE]  not  a  statement	38	None	replace
124	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantsNames(p,  propAlias,  null);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantsNames(p,  propAlias,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantsNames(p,  propAlias,  null);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    null);    	non-compiled	[CE]  not  a  statement	38	None	replace
125	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  propAlias,  p.type);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForAlias(alias,  p.name,  propAlias,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForAlias(alias,  p.name,  propAlias,  p.type);	  appendPropForAlias(alias,    p.name,    p.type);    	non-compiled	[CE]  not  a  statement	51	None	replace
126	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForAlias(alias,  p.name,  p.type,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForAlias(alias,  p.name,  p.type,  propAlias);	  appendPropForAlias(alias,    p.name,    p.type);    	non-compiled	[CE]  not  a  statement	51	None	replace
127	[BUG]  [BUGGY]  appendPropForAlias(alias,  p.name,  propAlias,  type);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForAlias(alias,  p.name,  propAlias,  type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForAlias(alias,  p.name,  propAlias,  type);	  appendPropForAlias(alias,    p.name,    p.type);    	non-compiled	[CE]  not  a  statement	51	None	replace
128	[BUG]  [BUGGY]  appendPropForAlias(alias,  propAlias,  p.type);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForAlias(alias,  propAlias,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForAlias(alias,  propAlias,  p.type);	  appendPropForAlias(alias,    p.name,    p.type);    	non-compiled	[CE]  not  a  statement	51	None	replace
129	[BUG]  [BUGGY]  appendPropForAlias(propAlias,  p.name,  p.type);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForAlias(propAlias,  p.name,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForAlias(propAlias,  p.name,  p.type);	  appendPropForAlias(alias,    p.name,    p.type);    	non-compiled	[CE]  not  a  statement	51	None	replace
130	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	44	None	replace
131	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.name);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	44	None	replace
132	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  p.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(propAlias,  p.name);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	44	None	replace
133	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(n.props,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(n.props,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(n.props,  propAlias);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	18	None	replace
134	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(propAlias,  n.props);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(propAlias,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(propAlias,  n.props);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	18	None	replace
135	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  n);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(propAlias,  n);	  FlattenReferencesToCollapsibleDescendantNames(n,    propAlias);    	non-compiled	[CE]  not  a  statement	32	None	replace
136	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n.props,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	36	None	replace
137	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n.name,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	36	None	replace
138	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	59	None	replace
139	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	59	None	replace
140	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name);	  FlattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	59	None	replace
141	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  propAlias));	  FlattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	59	None	replace
142	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  p.name);	  FlattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	59	None	replace
143	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  p.type);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  p.type);	  FlattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	59	None	replace
144	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	41	None	replace
145	[BUG]  [BUGGY]  appendPropForCollapsibleDescendants(alias,  p.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendants(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendants(alias,  p.name);	  appendPropForCollapsibleDescendants(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	2	None	replace
146	[BUG]  [BUGGY]  appendPropForCollapsibleDescendants(alias,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendants(alias,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendants(alias,  propAlias,  p.name);	  appendPropForCollapsibleDescendants(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	2	None	replace
147	[BUG]  [BUGGY]  appendPropForCollapsibleDescendants(p,  propAlias);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendants(p,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendants(p,  propAlias);	  appendPropForCollapsibleDescendants(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	2	None	replace
148	[BUG]  [BUGGY]  appendPropForCollapsibleDescendants(alias,  propName);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendants(alias,  propName);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendants(alias,  propName);	  appendPropForCollapsibleDescendants(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	2	None	replace
149	[BUG]  [BUGGY]  appendPropForCollapsibleDescendants(alias,  propAlias,  p.type);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendants(alias,  propAlias,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendants(alias,  propAlias,  p.type);	  appendPropForCollapsibleDescendants(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	2	None	replace
150	[BUG]  [BUGGY]  appendAliasForCollapsibleDescendants(alias,  propAlias);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAliasForCollapsibleDescendants(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAliasForCollapsibleDescendants(alias,  propAlias);	  appendPropForCollapsibleDescendants(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	2	None	replace
151	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  n);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  n);	  FlattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	37	None	replace
152	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name);	  FlattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	37	None	replace
153	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	34	None	replace
154	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n.props,  propAlias);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n.props,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  n.props,  propAlias);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	25	None	replace
155	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  n,  propAlias);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	25	None	replace
156	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(n,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(n,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(n,  propAlias);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	25	None	replace
157	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  n);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  n);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	17	None	replace
158	[BUG]  [BUGGY]  appendPropForCollapsibleDescendantNames(propAlias,  p.name);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendantNames(propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendantNames(propAlias,  p.name);	  appendPropForCollapsibleDescendantNames(alias,    p.name);    	non-compiled	[CE]  not  a  statement	4	None	replace
159	[BUG]  [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  prop.name);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  prop.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendantNames(alias,  prop.name);	  appendPropForCollapsibleDescendantNames(alias,    p.name);    	non-compiled	[CE]  not  a  statement	4	None	replace
160	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    appendPropForAlias(alias,    propAlias));    	non-compiled	[CE]  not  a  statement	47	None	replace
161	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  flattenReferencesToCollapsibleDescendants(alias,  propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  flattenReferencesToCollapsibleDescendants(alias,  propAlias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  flattenReferencesToCollapsibleDescendants(alias,  propAlias));	  FlattenReferencesToCollapsibleDescendants(p,    appendPropForAlias(alias,    propAlias));    	non-compiled	[CE]  not  a  statement	47	None	replace
162	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendPropForAlias(alias,  propName));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendPropForAlias(alias,  propName));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  appendPropForAlias(alias,  propName));	  FlattenReferencesToCollapsibleDescendants(p,    appendPropForAlias(alias,    propAlias));    	non-compiled	[CE]  not  a  statement	47	None	replace
163	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  appendAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    appendPropForAlias(alias,    propAlias));    	non-compiled	[CE]  not  a  statement	47	None	replace
164	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n.name,  propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  n.name,  propAlias);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	58	None	replace
165	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  n.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  n.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  alias,  n.name);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	58	None	replace
166	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  alias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n.props,  alias);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
167	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantsNames(p,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantsNames(p,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantsNames(p,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(propAlias,    p);    	non-compiled	[CE]  not  a  statement	31	None	replace
168	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(alias,  p);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(alias,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(alias,  p);	  FlattenReferencesToCollapsibleDescendantNames(propAlias,    p);    	non-compiled	[CE]  not  a  statement	31	None	replace
169	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  n);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  alias,  n);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	23	None	replace
170	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  alias,  collapsePropertiesOnExternTypes);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	46	None	replace
171	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropertiesOnExternTypes);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	46	None	replace
172	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  collapsePropertiesOnExternTypes);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	46	None	replace
173	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(alias,  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(alias,  p.name);	  FlattenReferencesToCollapsibleDescendantNames(p.name,    alias);    	non-compiled	[CE]  not  a  statement	7	None	replace
174	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n.name,  alias);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n.name,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n.name,  alias);	  FlattenReferencesToCollapsibleDescendantNames(p.name,    alias);    	non-compiled	[CE]  not  a  statement	7	None	replace
175	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	61	None	replace
176	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n.props,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n.props,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n.props,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	61	None	replace
177	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  n);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	61	None	replace
178	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  propAlias,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	61	None	replace
179	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	61	None	replace
180	[BUG]  [BUGGY]  appendStringForAlias(p,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(p,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(p,  propAlias);	  appendStringForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	49	None	replace
181	[BUG]  [BUGGY]  appendStringToAlias(alias,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringToAlias(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringToAlias(alias,  propAlias);	  appendStringForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	49	None	replace
182	[BUG]  [BUGGY]  appendStringForAlias(alias,  propName);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(alias,  propName);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(alias,  propName);	  appendStringForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	49	None	replace
183	[BUG]  [BUGGY]  appendAliasForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAliasForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAliasForAlias(alias,  p.name);	  appendNameForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	50	None	replace
184	[BUG]  [BUGGY]  appendNameForAlias(p,  propAlias);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(p,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(p,  propAlias);	  appendNameForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	50	None	replace
185	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  null));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  null));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  null));	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	33	None	replace
186	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  this);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  this);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  this);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	33	None	replace
187	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  null);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias,  null);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	33	None	replace
188	[BUG]  [BUGGY]  appendAlias(p,  propAlias);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(p,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(p,  propAlias);	  appendAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	5	None	replace
189	[BUG]  [BUGGY]  appendAlias(alias,  p);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(alias,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(alias,  p);	  appendAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	5	None	replace
190	[BUG]  [BUGGY]  appendAlias(p.name,  propAlias);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(p.name,  propAlias);	  appendAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	5	None	replace
191	[BUG]  [BUGGY]  appendAlias(propAlias,  p.name);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(propAlias,  p.name);	  appendAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	5	None	replace
192	[BUG]  [BUGGY]  appendAlias(alias,  propAlias.name);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(alias,  propAlias.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(alias,  propAlias.name);	  appendAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	3	None	replace
193	[BUG]  [BUGGY]  appendAlias(alias,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(alias,  propAlias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(alias,  propAlias,  p.name);	  appendAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	3	None	replace
194	[BUG]  [BUGGY]  appendAlias(alias,  p.name,  p.type);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(alias,  p.name,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(alias,  p.name,  p.type);	  appendAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	3	None	replace
195	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);	  flattenReferencesToCollapsibleDescendantNames(propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	35	None	replace
196	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias.name);	  flattenReferencesToCollapsibleDescendantNames(propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	35	None	replace
197	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	29	None	replace
198	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  p.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  p.name);	  FlattenReferencesToCollapsibleDescendantNames(n,    alias);    	non-compiled	[CE]  not  a  statement	9	None	replace
199	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  p);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  p);	  FlattenReferencesToCollapsibleDescendantNames(n,    alias);    	non-compiled	[CE]  not  a  statement	9	None	replace
200	[BUG]  [BUGGY]  appendPathForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPathForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPathForAlias(alias,  p.name);	  appendPropForAlias(propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
201	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	44	None	replace
202	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n,  propAlias.name);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	44	None	replace
203	[BUG]  [BUGGY]  appendPropForCollapsibleDescendants(alias,  p);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendants(alias,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendants(alias,  p);	  appendPropForCollapsibleDescendants(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	2	None	replace
204	[BUG]  [BUGGY]  appendReferencesForCollapsibleDescendants(alias,  propAlias);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendReferencesForCollapsibleDescendants(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendReferencesForCollapsibleDescendants(alias,  propAlias);	  appendPropForCollapsibleDescendants(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	2	None	replace
205	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	54	None	replace
206	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name  + ", "  +  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(alias,  p.name  + ", "  +  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(alias,  p.name  + ", "  +  p.name);	  appendNameForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	42	None	replace
207	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(alias,  p.name  +  1);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(alias,  p.name  +  1);	  appendNameForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	42	None	replace
208	[BUG]  [BUGGY]  AppendNameForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  AppendNameForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	AppendNameForAlias(alias,  p.name);	  appendNameForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	42	None	replace
209	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	45	None	replace
210	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  appendPropForAlias(alias,  propAlias));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  appendPropForAlias(alias,  propAlias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  appendPropForAlias(alias,  propAlias));	  FlattenReferencesToCollapsibleDescendantNames(p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	8	None	replace
211	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	8	None	replace
212	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	30	None	replace
213	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	40	None	replace
214	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	40	None	replace
215	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  n.props);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  n.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
216	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p.name,  alias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p.name,  alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p.name,  alias);	  flattenReferencesToCollapsibleDescendants(p,    alias);    	non-compiled	[CE]  not  a  statement	24	None	replace
217	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  null,  propAlias);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  null,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  null,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    null);    	non-compiled	[CE]  not  a  statement	38	None	replace
218	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  null);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  null);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    null);    	non-compiled	[CE]  not  a  statement	38	None	replace
219	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(alias,  propAlias);	  appendAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	5	None	replace
220	[BUG]  [BUGGY]  appendPropAlias(alias,  propAlias);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropAlias(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropAlias(alias,  propAlias);	  appendAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	5	None	replace
221	[BUG]  [BUGGY]  appendStringToAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringToAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringToAlias(alias,  p.name);	  appendStringForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	49	None	replace
222	[BUG]  [BUGGY]  appendStringForAlias(alias,  p);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(alias,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(alias,  p);	  appendStringForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	49	None	replace
223	[BUG]  [BUGGY]  appendString(alias,  p.name);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendString(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendString(alias,  p.name);	  appendStringForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	49	None	replace
224	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propAlias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propAlias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propAlias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	61	None	replace
225	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  propAlias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  propAlias,  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  propAlias,  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendants(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	63	None	replace
226	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendAlias);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  appendAlias);	  FlattenReferencesToCollapsibleDescendants(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	63	None	replace
227	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(n,  propAlias,  p.props);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(n,  propAlias,  p.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(n,  propAlias,  p.props);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	18	None	replace
228	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	29	None	replace
229	[BUG]  [BUGGY]  AppendUtil.appendAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  AppendUtil.appendAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	AppendUtil.appendAlias(alias,  p.name);	  appendAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	3	None	replace
230	[BUG]  [BUGGY]  appendAlias(alias,  p.name  + ", "  +  p.name);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(alias,  p.name  + ", "  +  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(alias,  p.name  + ", "  +  p.name);	  appendAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	3	None	replace
231	[BUG]  [BUGGY]  appendAlias(alias,  p.name  +  1);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(alias,  p.name  +  1);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(alias,  p.name  +  1);	  appendAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	3	None	replace
232	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  false);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  false);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n,  false);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    false);    	non-compiled	[CE]  not  a  statement	22	None	replace
233	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  true);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  true);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  true);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    false);    	non-compiled	[CE]  not  a  statement	22	None	replace
234	[BUG]  [BUGGY]  appendStringForAlias(alias,  p.name  + ", "  +  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(alias,  p.name  + ", "  +  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(alias,  p.name  + ", "  +  p.name);	  appendStringForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	43	None	replace
235	[BUG]  [BUGGY]  appendStringForAlias(alias,  p.name  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(alias,  p.name  +  1);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(alias,  p.name  +  1);	  appendStringForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	43	None	replace
236	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForOlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForOlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForOlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	46	None	replace
237	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	46	None	replace
238	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  n.name);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	41	None	replace
239	[BUG]  [BUGGY]  appendReferencesForCollapsibleDescendantNames(alias,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendReferencesForCollapsibleDescendantNames(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendReferencesForCollapsibleDescendantNames(alias,  propAlias);	  appendPropForCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
240	[BUG]  [BUGGY]  appendAliasForCollapsibleDescendantNames(alias,  p.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAliasForCollapsibleDescendantNames(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAliasForCollapsibleDescendantNames(alias,  p.name);	  appendPropForCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
241	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  null);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  n,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  n,  null);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	33	None	replace
242	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  null);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  null);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	33	None	replace
243	[BUG]  [BUGGY]  p.flattenReferencesToCollapsibleDescendantNames(propAlias,  p);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  p.flattenReferencesToCollapsibleDescendantNames(propAlias,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	p.flattenReferencesToCollapsibleDescendantNames(propAlias,  p);	  flattenReferencesToCollapsibleDescendantNames(propAlias,    p);    	non-compiled	[CE]  not  a  statement	28	None	replace
244	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  n);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  n);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	26	None	replace
245	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	26	None	replace
246	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendAliasForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendAliasForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  appendAliasForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    appendPropForAlias(alias,    propAlias));    	non-compiled	[CE]  not  a  statement	47	None	replace
247	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  flattenReferencesToCollapsibleDescendants(alias,  p.name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  flattenReferencesToCollapsibleDescendants(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  flattenReferencesToCollapsibleDescendants(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    appendPropForAlias(alias,    propAlias));    	non-compiled	[CE]  not  a  statement	47	None	replace
248	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendPropForLias(alias,  p.name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendPropForLias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  appendPropForLias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    appendPropForAlias(alias,    propAlias));    	non-compiled	[CE]  not  a  statement	47	None	replace
249	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(propAlias,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(propAlias,    p);    	non-compiled	[CE]  not  a  statement	31	None	replace
250	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  n.props);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  n.props);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	27	None	replace
251	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	53	None	replace
252	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  n.props);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  n.props);	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	36	None	replace
253	[BUG]  [BUGGY]  AppendDescriptorForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  AppendDescriptorForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	AppendDescriptorForAlias(alias,  p.name);	  appendDescriptorForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	52	None	replace
254	[BUG]  [BUGGY]  AppendDescriptorForAlias(alias,  p.name,  propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  AppendDescriptorForAlias(alias,  p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	AppendDescriptorForAlias(alias,  p.name,  propAlias);	  appendDescriptorForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	52	None	replace
255	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	17	None	replace
256	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  n.props);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  n.props);	  FlattenReferencesToCollapsibleDescendants(p,    alias);    	non-compiled	[CE]  not  a  statement	16	None	replace
257	[BUG]  [BUGGY]  appendReferencesForCollapsibleDescendantNames(alias,  p.name);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendReferencesForCollapsibleDescendantNames(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendReferencesForCollapsibleDescendantNames(alias,  p.name);	  appendPropForCollapsibleDescendantNames(alias,    p.name);    	non-compiled	[CE]  not  a  statement	4	None	replace
258	[BUG]  [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  p.name  +  propAlias);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendantNames(alias,  p.name  +  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendantNames(alias,  p.name  +  propAlias);	  appendPropForCollapsibleDescendantNames(alias,    p.name);    	non-compiled	[CE]  not  a  statement	4	None	replace
259	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	6	None	replace
260	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	6	None	replace
261	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.props);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  n.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    n.props);    	non-compiled	[CE]  not  a  statement	10	None	replace
262	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  alias,  appendPropForAlias(propAlias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p.name,  alias,  appendPropForAlias(propAlias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p.name,  alias,  appendPropForAlias(propAlias));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	48	None	replace
263	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  appendPropForAlias(alias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n,  appendPropForAlias(alias));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	48	None	replace
264	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propName));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propName));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  appendPropForAlias(propName));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias));    	non-compiled	[CE]  not  a  statement	48	None	replace
265	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  n);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	23	None	replace
266	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  null);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  n,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  n,  null);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	21	None	replace
267	[BUG]  [BUGGY]  appendAliasForAlias(alias,  p.name,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAliasForAlias(alias,  p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAliasForAlias(alias,  p.name,  propAlias);	  appendPropForAlias(alias,    p.name,    propAlias);    	non-compiled	[CE]  not  a  statement	11	None	replace
268	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  propAlias));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  propAlias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  propAlias));	  flattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	14	None	replace
269	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	14	None	replace
270	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p.name,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p.name,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p.name,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	57	None	replace
271	[BUG]  [BUGGY]  appendAliasForName(alias,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAliasForName(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAliasForName(alias,  propAlias);	  appendNameForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	50	None	replace
272	[BUG]  [BUGGY]  appendReferencesForAlias(alias,  propAlias);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendReferencesForAlias(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendReferencesForAlias(alias,  propAlias);	  appendNameForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	50	None	replace
273	[BUG]  [BUGGY]  appendNameForAlias(alias,  p);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(alias,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(alias,  p);	  appendNameForAlias(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	50	None	replace
274	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n.props);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  n.props);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	25	None	replace
275	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  n.props);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  alias,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  alias,  n.props);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	25	None	replace
276	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name));	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	26	None	replace
277	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  false,  n.name);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  false,  n.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  false,  n.name);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    false);    	non-compiled	[CE]  not  a  statement	22	None	replace
278	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name));	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	58	None	replace
279	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	58	None	replace
280	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  collapsePropertiesOnExternTypes);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  collapsePropertiesOnExternTypes);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	45	None	replace
281	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForOlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForOlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForOlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    collapsePropertiesOnExternTypes);    	non-compiled	[CE]  not  a  statement	45	None	replace
282	[BUG]  [BUGGY]  appendAlias(alias,  p.name,  p.collapseProperties);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(alias,  p.name,  p.collapseProperties);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(alias,  p.name,  p.collapseProperties);	  appendAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	3	None	replace
283	[BUG]  [BUGGY]  appendAlias(alias,  p.name,  p.union);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(alias,  p.name,  p.union);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(alias,  p.name,  p.union);	  appendAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	3	None	replace
284	[BUG]  [BUGGY]  appendAlias(alias,  p.name,  p);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendAlias(alias,  p.name,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendAlias(alias,  p.name,  p);	  appendAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	3	None	replace
285	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias,  appendPropForAlias(alias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias,  appendPropForAlias(alias));	  FlattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	59	None	replace
286	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name,  p.type);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(alias,  p.name,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(alias,  p.name,  p.type);	  appendNameForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	42	None	replace
287	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name,  p.collapseProperties);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(alias,  p.name,  p.collapseProperties);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(alias,  p.name,  p.collapseProperties);	  appendNameForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	42	None	replace
288	[BUG]  [BUGGY]  appendNameForAlias(alias,  p.name,  p.union);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendNameForAlias(alias,  p.name,  p.union);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendNameForAlias(alias,  p.name,  p.union);	  appendNameForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	42	None	replace
289	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  n.props,  n.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  n.props,  n.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  n.props,  n.name);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	18	None	replace
290	[BUG]  [BUGGY]  appendPropForLlapsibleDescendantNames(alias,  p.name);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForLlapsibleDescendantNames(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForLlapsibleDescendantNames(alias,  p.name);	  appendPropForCollapsibleDescendantNames(alias,    p.name);    	non-compiled	[CE]  not  a  statement	4	None	replace
291	[BUG]  [BUGGY]  AppendUtil.appendPropForAlias(alias,  p.name,  p.type);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  AppendUtil.appendPropForAlias(alias,  p.name,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	AppendUtil.appendPropForAlias(alias,  p.name,  p.type);	  appendPropForAlias(alias,    p.name,    p.type);    	non-compiled	[CE]  not  a  statement	51	None	replace
292	[BUG]  [BUGGY]  appendDescriptorForAlias(alias,  p.name,  p.type);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendDescriptorForAlias(alias,  p.name,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendDescriptorForAlias(alias,  p.name,  p.type);	  appendDescriptorForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	52	None	replace
293	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	57	None	replace
294	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  p);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	57	None	replace
295	[BUG]  [BUGGY]  appendReferencesForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendReferencesForAlias(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendReferencesForAlias(alias,  p.name);	  appendPropForAlias(propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
296	[BUG]  [BUGGY]  append(alias,  p.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  append(alias,  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	append(alias,  p.name);	  appendPropForAlias(propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
297	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	64	None	replace
298	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	64	None	replace
299	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  propAlias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  alias,  propAlias,  appendPropForAlias(alias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  alias,  propAlias,  appendPropForAlias(alias));	  FlattenReferencesToCollapsibleDescendants(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	63	None	replace
300	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias,  appendPropForAlias(alias));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias,  appendPropForAlias(alias));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias,  appendPropForAlias(alias));	  flattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	54	None	replace
301	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias,  appendPropForAlias(alias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias,  appendPropForAlias(alias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  propAlias,  appendPropForAlias(alias);	  flattenReferencesToCollapsibleDescendantNames(p.name,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	54	None	replace
302	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  appendPropForAlias(alias,  p.name));	  flattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	14	None	replace
303	[BUG]  [BUGGY]  appendStringForAlias(alias,  p.name,  p.type);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(alias,  p.name,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(alias,  p.name,  p.type);	  appendStringForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	43	None	replace
304	[BUG]  [BUGGY]  appendStringForAlias(alias,  p.name,  p.desc);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(alias,  p.name,  p.desc);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(alias,  p.name,  p.desc);	  appendStringForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	43	None	replace
305	[BUG]  [BUGGY]  appendStringForAlias(alias,  p.name,  p.state);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendStringForAlias(alias,  p.name,  p.state);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendStringForAlias(alias,  p.name,  p.state);	  appendStringForAlias(alias,    p.name);    	non-compiled	[CE]  not  a  statement	43	None	replace
306	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  alias,  p.props);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  alias,  p.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  alias,  p.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
307	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.props,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.props,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  n.props,  propAlias);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
308	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  n.props);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  n.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  n.props);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    n.props);    	non-compiled	[CE]  not  a  statement	39	None	replace
309	[BUG]  [BUGGY]  p.flattenReferencesToCollapsibleDescendantNames(propAlias,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  p.flattenReferencesToCollapsibleDescendantNames(propAlias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	p.flattenReferencesToCollapsibleDescendantNames(propAlias,  propAlias);	  flattenReferencesToCollapsibleDescendantNames(propAlias,    p);    	non-compiled	[CE]  not  a  statement	28	None	replace
310	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  p);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	53	None	replace
311	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p);	  FlattenReferencesToCollapsibleDescendantNames(propAlias,    p);    	non-compiled	[CE]  not  a  statement	31	None	replace
312	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	61	None	replace
313	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	44	None	replace
314	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  n.name));	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	44	None	replace
315	[BUG]  [BUGGY]  appendReferencesToCollapsibleDescendantNames(alias,  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendReferencesToCollapsibleDescendantNames(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendReferencesToCollapsibleDescendantNames(alias,  propAlias);	  appendPropForCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
316	[BUG]  [BUGGY]  appendPropForLlapsibleDescendantNames(alias,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForLlapsibleDescendantNames(alias,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForLlapsibleDescendantNames(alias,  propAlias);	  appendPropForCollapsibleDescendantNames(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	1	None	replace
317	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendPropAlias(alias,  p.name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendPropAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  appendPropAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendants(p,    appendPropForAlias(alias,    propAlias));    	non-compiled	[CE]  not  a  statement	47	None	replace
318	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendPropForAlias(alias,  propAlias),  p.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  appendPropForAlias(alias,  propAlias),  p.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  appendPropForAlias(alias,  propAlias),  p.name);	  FlattenReferencesToCollapsibleDescendants(p,    appendPropForAlias(alias,    propAlias));    	non-compiled	[CE]  not  a  statement	47	None	replace
319	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(propAlias,  appendPropForAlias(alias,  p.name),  p);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(propAlias,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(propAlias,  appendPropForAlias(alias,  p.name),  p);	  FlattenReferencesToCollapsibleDescendants(propAlias,    p);    	non-compiled	[CE]  not  a  statement	20	None	replace
320	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.props));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.props));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  p.props));	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	55	None	replace
321	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.props));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.props));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  alias,  appendPropForAlias(alias,  p.props));	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  not  a  statement	55	None	replace
322	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  n.name);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    n.name);    	non-compiled	[CE]  not  a  statement	62	None	replace
323	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  null);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForAlias(alias,  p.name),  null);	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	33	None	replace
324	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(n,  propAlias,  p.props);	  flattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	27	None	replace
325	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(n,  propAlias,  p.props);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(n,  propAlias,  p.props);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(n,  propAlias,  p.props);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	25	None	replace
326	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  n.props,  n.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendants(p,  propAlias,  n.props,  n.name);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendants(p,  propAlias,  n.props,  n.name);	  flattenReferencesToCollapsibleDescendants(p,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	25	None	replace
327	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n.props,  p);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(n.props,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(n.props,  p);	  FlattenReferencesToCollapsibleDescendantNames(p,    n.props);    	non-compiled	[CE]  not  a  statement	10	None	replace
328	[BUG]  [BUGGY]  appendPropForAlias(alias,  propAlias.toString());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForAlias(alias,  propAlias.toString());  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForAlias(alias,  propAlias.toString());	  appendPropForAlias(alias,    propAlias.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
329	[BUG]  [BUGGY]  appendPropForAlias(alias,  propAlias.toLowerCase());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForAlias(alias,  propAlias.toLowerCase());  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForAlias(alias,  propAlias.toLowerCase());	  appendPropForAlias(alias,    propAlias.name);    	non-compiled	[CE]  not  a  statement	13	None	replace
330	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  alias,  propAlias,  appendPropForAlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    propAlias);    	non-compiled	[CE]  not  a  statement	6	None	replace
331	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForOlias(alias,  p.name));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForOlias(alias,  p.name));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendantNames(p,  propAlias,  appendPropForOlias(alias,  p.name));	  FlattenReferencesToCollapsibleDescendantNames(p,    propAlias,    n);    	non-compiled	[CE]  not  a  statement	29	None	replace
332	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  null);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p,  propAlias,  null);	  FlattenReferencesToCollapsibleDescendantNames(p,    alias,    null);    	non-compiled	[CE]  not  a  statement	38	None	replace
333	[BUG]  [BUGGY]  appendPropForAlias(alias,  propAlias,  p.name,  p.type);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForAlias(alias,  propAlias,  p.name,  p.type);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForAlias(alias,  propAlias,  p.name,  p.type);	  appendPropForAlias(alias,    propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	60	None	replace
334	[BUG]  [BUGGY]  appendPathForAlias(alias,  p.name,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPathForAlias(alias,  p.name,  propAlias);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPathForAlias(alias,  p.name,  propAlias);	  appendPropForAlias(alias,    propAlias,    p.name);    	non-compiled	[CE]  not  a  statement	60	None	replace
335	[BUG]  [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  null);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  null);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	FlattenReferencesToCollapsibleDescendants(p,  propAlias,  appendPropForAlias(alias,  p.name),  null);	  FlattenReferencesToCollapsibleDescendants(p,    propAlias,    null);    	non-compiled	[CE]  not  a  statement	21	None	replace
336	[BUG]  [BUGGY]  appendPropForCollapsibleDescendants(alias,  propAlias,  p);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendants(alias,  propAlias,  p);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendants(alias,  propAlias,  p);	  appendPropForCollapsibleDescendants(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	2	None	replace
337	[BUG]  [BUGGY]  appendPropForCollapsibleDescendants(alias,  propAlias,  p.node);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  appendPropForCollapsibleDescendants(alias,  propAlias,  p.node);  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	appendPropForCollapsibleDescendants(alias,  propAlias,  p.node);	  appendPropForCollapsibleDescendants(alias,    propAlias);    	non-compiled	[CE]  not  a  statement	2	None	replace
338	[BUG]  [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  n.props));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {      [BUGGY]  flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  n.props));  [BUGGY]      }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	302	302	8	replace	flattenReferencesToCollapsibleDescendantNames(p.name,  propAlias,  appendPropForAlias(alias,  n.props));	  flattenReferencesToCollapsibleDescendantNames(p.name,    propAlias,    n.props);    	non-compiled	[CE]  not  a  statement	36	None	replace
