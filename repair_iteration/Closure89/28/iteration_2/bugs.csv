bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	10	None	replace
2	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	10	None	replace
3	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	10	None	replace
4	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	9	None	replace
5	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&!NodeUtil  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&!NodeUtil  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&!NodeUtil	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	9	None	replace
6	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	9	None	replace
7	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	9	None	replace
8	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
9	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
10	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
11	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
12	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
13	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
14	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
15	[BUG]  [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
16	[BUG]  [BUGGY]  Node  rParent  =  n.getParent();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Node  rParent  =  n.getParent();  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.getParent();	      	non-compiled	[CE]  not  a  statement	4	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(n.props!=  null);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Preconditions.checkState(n.props!=  null);  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props!=  null);	      	non-compiled	[CE]  not  a  statement	4	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkState(n.props  ==  null);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Preconditions.checkState(n.props  ==  null);  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props  ==  null);	      	non-compiled	[CE]  not  a  statement	4	None	replace
19	[BUG]  [BUGGY]  Name  p  =  n.getName();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Name  p  =  n.getName();  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.getName();	      	non-compiled	[CE]  not  a  statement	4	None	replace
20	[BUG]  [BUGGY]  Node  r  =  n.getFirstChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Node  r  =  n.getFirstChild();  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getFirstChild();	      	non-compiled	[CE]  not  a  statement	4	None	replace
21	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Context.reportCodeChange();  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.reportCodeChange();	      	non-compiled	[CE]  not  a  statement	4	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkNotNull(r.props);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Preconditions.checkNotNull(r.props);  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkNotNull(r.props);	      	non-compiled	[CE]  not  a  statement	4	None	replace
23	[BUG]  [BUGGY]  if(n.props!=  null  &&!n.props.isEmpty())  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!n.props.isEmpty())  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!n.props.isEmpty())  {	  if(n.props!=    null    ||!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	3	None	replace
24	[BUG]  [BUGGY]  if(n.props  ==  null  ||!n.props.isEmpty())  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  ||!n.props.isEmpty())  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!n.props.isEmpty())  {	  if(n.props!=    null    ||!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	3	None	replace
25	[BUG]  [BUGGY]  if(n.props  ==  null  &&!n.props.isEmpty())  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  &&!n.props.isEmpty())  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!n.props.isEmpty())  {	  if(n.props!=    null    ||!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	3	None	replace
26	[BUG]  [BUGGY]  if(n.props!=  null  ||!n.props.equals(originalName))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  ||!n.props.equals(originalName))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!n.props.equals(originalName))  {	  if(n.props!=    null    ||!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	3	None	replace
27	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
28	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
29	[BUG]  [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	5	None	replace
30	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	5	None	replace
31	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	5	None	replace
32	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
33	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
34	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
35	[BUG]  [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
36	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
37	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getName()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getName()  ==  null  ||  n.isSet()))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getName()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
38	[BUG]  [BUGGY]  if(props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
39	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  ||  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  ||  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  ||  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
40	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	5	None	replace
41	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {	  if(n.props    ==    null)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
42	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {	  if(n.props    ==    null)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
43	[BUG]  [BUGGY]  Node  p  =  n.getParent();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Node  p  =  n.getParent();  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getParent();	      	non-compiled	[CE]  not  a  statement	4	None	replace
44	[BUG]  [BUGGY]  Node  p  =  n.getNode();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Node  p  =  n.getNode();  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getNode();	      	non-compiled	[CE]  not  a  statement	4	None	replace
45	[BUG]  [BUGGY]  Node  r  =  n.getNode();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Node  r  =  n.getNode();  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getNode();	      	non-compiled	[CE]  not  a  statement	4	None	replace
46	[BUG]  [BUGGY]  Node  p  =  r.node.getParent();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Node  p  =  r.node.getParent();  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  r.node.getParent();	      	non-compiled	[CE]  not  a  statement	4	None	replace
47	[BUG]  [BUGGY]  Node  r  =  n.getParent();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Node  r  =  n.getParent();  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getParent();	      	non-compiled	[CE]  not  a  statement	4	None	replace
48	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
49	[BUG]  [BUGGY]  if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	5	None	replace
50	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	10	None	replace
51	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  ||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  ||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  ||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	9	None	replace
52	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
53	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&!NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props  ==  null);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Preconditions.checkArgument(n.props  ==  null);  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props  ==  null);	      	non-compiled	[CE]  not  a  statement	4	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props!=  null);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  Preconditions.checkArgument(n.props!=  null);  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props!=  null);	      	non-compiled	[CE]  not  a  statement	4	None	replace
56	[BUG]  [BUGGY]  if(n.props!=  null  &&!n.props.equals(originalName))  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props!=  null  &&!n.props.equals(originalName))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!n.props.equals(originalName))  {	  if(n.props!=    null    ||!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	3	None	replace
57	[BUG]  [BUGGY]  if(n.props  >=  null  &&!n.props.isEmpty())  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  >=  null  &&!n.props.isEmpty())  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  >=  null  &&!n.props.isEmpty())  {	  if(n.props!=    null    ||!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	3	None	replace
58	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props    ==    null)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
59	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props    ==    null)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
60	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||	  if(n.props    ==    null)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
61	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {	  if(n.props    ==    null)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
62	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }        [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]    for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
