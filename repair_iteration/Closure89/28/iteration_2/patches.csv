bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    	non-compiled	[CE]  not  a  statement	60	None	replace
2	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    	non-compiled	[CE]  not  a  statement	60	None	replace
3	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()!=  null  ||  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()!=  null  ||  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()!=  null  ||	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    	non-compiled	[CE]  not  a  statement	60	None	replace
4	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  null  ||	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    	non-compiled	[CE]  not  a  statement	60	None	replace
5	[BUG]  [BUGGY]  if(n.props  ==  null  &&!n.props.isEmpty()  ||!n.props.isEmpty())  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&!n.props.isEmpty()  ||!n.props.isEmpty())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!n.props.isEmpty()  ||!n.props.isEmpty())  {	  if(n.props    ==    null    &&!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	25	None	replace
6	[BUG]  [BUGGY]  Node  r  =  n.getNext();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getNext();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getNext();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	47	None	replace
7	[BUG]  [BUGGY]  Node  r  =  n.getRawParent();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getRawParent();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getRawParent();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	47	None	replace
8	[BUG]  [BUGGY]  Node  r  =  n.getLastChild();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getLastChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getLastChild();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	47	None	replace
9	[BUG]  [BUGGY]  Node  r  =  n.getPrefix();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getPrefix();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getPrefix();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	47	None	replace
10	[BUG]  [BUGGY]  Node  r  =  n.getReferenceName();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getReferenceName();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getReferenceName();	  Node    r    =    n.getParent();    	non-compiled	[CE]  not  a  statement	47	None	replace
11	[BUG]  [BUGGY]  Node  r  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.removeFirstChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.removeFirstChild();	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	20	None	replace
12	[BUG]  [BUGGY]  Node  r  =  n.getAncestor(1);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getAncestor(1);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getAncestor(1);	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	20	None	replace
13	[BUG]  [BUGGY]  Node  r  =  n.getPreviousChild();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getPreviousChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getPreviousChild();	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	20	None	replace
14	[BUG]  [BUGGY]  Node  r  =  n.getAncestor(2);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getAncestor(2);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getAncestor(2);	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	20	None	replace
15	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()!=  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()!=  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()!=  null  ||  n.isSet()))  {	  if(n.props    ==    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	10	None	replace
16	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props    ==    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	10	None	replace
17	[BUG]  [BUGGY]  Node  p  =  n.getPosition();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getPosition();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getPosition();	  Node    p    =    n.getNode();    	non-compiled	[CE]  not  a  statement	44	None	replace
18	[BUG]  [BUGGY]  Node  p  =  n.getNameNode();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getNameNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getNameNode();	  Node    p    =    n.getNode();    	non-compiled	[CE]  not  a  statement	44	None	replace
19	[BUG]  [BUGGY]  Node  p  =  n.getFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getFirstChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getFirstChild();	  Node    p    =    n.getNode();    	non-compiled	[CE]  not  a  statement	44	None	replace
20	[BUG]  [BUGGY]  Node  p  =  n.getPrefix();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getPrefix();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getPrefix();	  Node    p    =    n.getNode();    	non-compiled	[CE]  not  a  statement	44	None	replace
21	[BUG]  [BUGGY]  Node  p  =  n.getParentNode();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getParentNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getParentNode();	  Node    p    =    n.getNode();    	non-compiled	[CE]  not  a  statement	44	None	replace
22	[BUG]  [BUGGY]  Node  r  =  n.getNameNode();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getNameNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getNameNode();	  Node    r    =    n.getNode();    	non-compiled	[CE]  not  a  statement	45	None	replace
23	[BUG]  [BUGGY]  Node  r  =  n.getRawNode();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getRawNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getRawNode();	  Node    r    =    n.getNode();    	non-compiled	[CE]  not  a  statement	45	None	replace
24	[BUG]  [BUGGY]  Node  r  =  n.getOwnerNode();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getOwnerNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getOwnerNode();	  Node    r    =    n.getNode();    	non-compiled	[CE]  not  a  statement	45	None	replace
25	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    ||    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	51	None	replace
26	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    ||    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	51	None	replace
27	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    ||    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	51	None	replace
28	[BUG]  [BUGGY]  if(n!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	9	None	replace
29	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (r.getTwin()  ==  null  ||  n.isSet()))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	9	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&  n.props.length()  >  0);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&  n.props.length()  >  0);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props!=  null  &&  n.props.length()  >  0);	  Preconditions.checkArgument(n.props!=    null);    	non-compiled	[CE]  not  a  statement	55	None	replace
31	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&!n.props.isEmpty());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&!n.props.isEmpty());  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props!=  null  &&!n.props.isEmpty());	  Preconditions.checkArgument(n.props!=    null);    	non-compiled	[CE]  not  a  statement	55	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&  n.props.length  >  0);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&  n.props.length  >  0);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props!=  null  &&  n.props.length  >  0);	  Preconditions.checkArgument(n.props!=    null);    	non-compiled	[CE]  not  a  statement	55	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props!=  null  ||  n.props.length()  ==  0);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkArgument(n.props!=  null  ||  n.props.length()  ==  0);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props!=  null  ||  n.props.length()  ==  0);	  Preconditions.checkArgument(n.props!=    null);    	non-compiled	[CE]  not  a  statement	55	None	replace
34	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  &&  n.isSet()))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  &&  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  &&  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    ||    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	39	None	replace
35	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    ||    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	39	None	replace
36	[BUG]  [BUGGY]  Node  p  =  n.getNext();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getNext();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getNext();	  Node    p    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
37	[BUG]  [BUGGY]  Node  p  =  n.getProp(Node.SOURCENAME_PROP);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getProp(Node.SOURCENAME_PROP);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getProp(Node.SOURCENAME_PROP);	  Node    p    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
38	[BUG]  [BUGGY]  Node  p  =  n.getLastChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getLastChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getLastChild();	  Node    p    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
39	[BUG]  [BUGGY]  Node  p  =  n.getProp(Node.NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getProp(Node.NAMESPACE_REDEFINED_WARNING);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getProp(Node.NAMESPACE_REDEFINED_WARNING);	  Node    p    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
40	[BUG]  [BUGGY]  Node  rParent  =  n.getNext();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.getNext();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.getNext();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
41	[BUG]  [BUGGY]  Node  rParent  =  n.getRawParent();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.getRawParent();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.getRawParent();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
42	[BUG]  [BUGGY]  Node  rParent  =  n.getRootNode();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.getRootNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.getRootNode();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
43	[BUG]  [BUGGY]  Node  rParent  =  n.getPrefix();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.getPrefix();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.getPrefix();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
44	[BUG]  [BUGGY]  Node  rParent  =  n.getReferenceName();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.getReferenceName();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.getReferenceName();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
45	[BUG]  [BUGGY]  Node  rParent  =  n.getNameNode();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.getNameNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.getNameNode();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
46	[BUG]  [BUGGY]  Node  p  =  n.node.getParent();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.node.getParent();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.node.getParent();	  Node    p    =    r.node.getParent();    	non-compiled	[CE]  not  a  statement	46	None	replace
47	[BUG]  [BUGGY]  Node  p  =  r.node.getNext();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  r.node.getNext();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  r.node.getNext();	  Node    p    =    r.node.getParent();    	non-compiled	[CE]  not  a  statement	46	None	replace
48	[BUG]  [BUGGY]  Node  p  =  n.node.getNext();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.node.getNext();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.node.getNext();	  Node    p    =    r.node.getParent();    	non-compiled	[CE]  not  a  statement	46	None	replace
49	[BUG]  [BUGGY]  Node  p  =  r.node.getLastChild();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  r.node.getLastChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  r.node.getLastChild();	  Node    p    =    r.node.getParent();    	non-compiled	[CE]  not  a  statement	46	None	replace
50	[BUG]  [BUGGY]  Node  p  =  r.node.getPrefix();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  r.node.getPrefix();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  r.node.getPrefix();	  Node    p    =    r.node.getParent();    	non-compiled	[CE]  not  a  statement	46	None	replace
51	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	4	None	replace
52	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
53	[BUG]  [BUGGY]  if(n.props  ==  null  &&!n.props.equals(originalName))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&!n.props.equals(originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!n.props.equals(originalName))  {	  if(n.props!=    null    ||!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
54	[BUG]  [BUGGY]  if(n.props  ==  null  ||!n.props.equals(originalName))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!n.props.equals(originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!n.props.equals(originalName))  {	  if(n.props!=    null    ||!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
55	[BUG]  [BUGGY]  if(n.props!=  null  ||!n.props.equals(alias))  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!n.props.equals(alias))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!n.props.equals(alias))  {	  if(n.props!=    null    ||!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
56	[BUG]  [BUGGY]  if(n.props!=  null  ||!n.props.equals(nameMap.get(alias)))  {  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!n.props.equals(nameMap.get(alias)))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!n.props.equals(nameMap.get(alias)))  {	  if(n.props!=    null    ||!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkNotNull(n.props);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkNotNull(n.props);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkNotNull(n.props);	  Preconditions.checkNotNull(r.props);    	non-compiled	[CE]  not  a  statement	22	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkState(r.props!=  null);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(r.props!=  null);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(r.props!=  null);	  Preconditions.checkNotNull(r.props);    	non-compiled	[CE]  not  a  statement	22	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkState(n.props!=  null,  r.props);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props!=  null,  r.props);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props!=  null,  r.props);	  Preconditions.checkNotNull(r.props);    	non-compiled	[CE]  not  a  statement	22	None	replace
60	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)||  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
61	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
62	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
63	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkState(n.props!=  null  &&  n.props.length()  >  0);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props!=  null  &&  n.props.length()  >  0);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props!=  null  &&  n.props.length()  >  0);	  Preconditions.checkState(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	18	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkState(n.props!=  null  &&!n.props.isEmpty());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props!=  null  &&!n.props.isEmpty());  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props!=  null  &&!n.props.isEmpty());	  Preconditions.checkState(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	18	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkState(n.props!=  null  &&  n.props.equals(originalName));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props!=  null  &&  n.props.equals(originalName));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props!=  null  &&  n.props.equals(originalName));	  Preconditions.checkState(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	18	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(n.props  >=  null);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props  >=  null);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props  >=  null);	  Preconditions.checkState(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	18	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(n.props!=  null  &&  n.props.length  >  0);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props!=  null  &&  n.props.length  >  0);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props!=  null  &&  n.props.length  >  0);	  Preconditions.checkState(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	18	None	replace
69	[BUG]  [BUGGY]  if(r.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	40	None	replace
70	[BUG]  [BUGGY]  if(n.props!=  null  ||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	40	None	replace
71	[BUG]  [BUGGY]  if(n.props!=  null  &&!n.props.equals(alias))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!n.props.equals(alias))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!n.props.equals(alias))  {	  if(n.props!=    null    &&!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	56	None	replace
72	[BUG]  [BUGGY]  if(n.props!=  null  &&!n.props.equals(nameMap.get(alias)))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!n.props.equals(nameMap.get(alias)))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!n.props.equals(nameMap.get(alias)))  {	  if(n.props!=    null    &&!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	56	None	replace
73	[BUG]  [BUGGY]  if(n.props!=  null  &&!n.props.equals( " "))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!n.props.equals( " "))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!n.props.equals( " "))  {	  if(n.props!=    null    &&!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	56	None	replace
74	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isLitKey(r.node,  rParent))  {	  if(r.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	35	None	replace
75	[BUG]  [BUGGY]  if(n.props!=  null  ||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(r.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	35	None	replace
76	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
77	[BUG]  [BUGGY]  if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
78	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
79	[BUG]  [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
80	[BUG]  [BUGGY]  if(n.props!=  null  &&!n.props.isEmpty()  ||!n.props.isEmpty())  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!n.props.isEmpty()  ||!n.props.isEmpty())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!n.props.isEmpty()  ||!n.props.isEmpty())  {	  if(n.props!=    null    &&!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	23	None	replace
81	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	6	None	replace
82	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	6	None	replace
83	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    n.isSet())    {    	non-compiled	[CE]  not  a  statement	61	None	replace
84	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    n.isSet())    {    	non-compiled	[CE]  not  a  statement	61	None	replace
85	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    n.isSet())    {    	non-compiled	[CE]  not  a  statement	61	None	replace
86	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isPropertyName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isPropertyName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isPropertyName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    n.isSet())    {    	non-compiled	[CE]  not  a  statement	61	None	replace
87	[BUG]  [BUGGY]  if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    n.isSet())    {    	non-compiled	[CE]  not  a  statement	61	None	replace
88	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&(n.props    ==    null    ||    n.props.length()    ==    0))    {    	non-compiled	[CE]  not  a  statement	42	None	replace
89	[BUG]  [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&(n.props    ==    null    ||    n.props.length()    ==    0))    {    	non-compiled	[CE]  not  a  statement	42	None	replace
90	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&(n.props    ==    null    ||    n.props.length()    ==    0))    {    	non-compiled	[CE]  not  a  statement	42	None	replace
91	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  >=  0))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  >=  0))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&(n.props  ==  null  ||  n.props.length()  >=  0))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&(n.props    ==    null    ||    n.props.length()    ==    0))    {    	non-compiled	[CE]  not  a  statement	42	None	replace
92	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.getType()  ==  Token.NAME  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.getType()  ==  Token.NAME  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
93	[BUG]  [BUGGY]  if(n.getParent()!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.getParent()!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.getParent()!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
94	[BUG]  [BUGGY]  if(n.getTwin()!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (props.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.getTwin()!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (props.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.getTwin()!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (props.getTwin()  ==  null  ||  n.isSet()))  {	  if(props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
95	[BUG]  [BUGGY]  if(r.node!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.node!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.node!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
96	[BUG]  [BUGGY]  if(n  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
97	[BUG]  [BUGGY]  Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING,  n.props));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING,  n.props));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING,  n.props));	  Context.reportCodeChange();    	non-compiled	[CE]  not  a  statement	21	None	replace
98	[BUG]  [BUGGY]  Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING));	  Context.reportCodeChange();    	non-compiled	[CE]  not  a  statement	21	None	replace
99	[BUG]  [BUGGY]  Context.report(JSError.make(r.node,  n,  UNSAFE_THIS));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Context.report(JSError.make(r.node,  n,  UNSAFE_THIS));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.report(JSError.make(r.node,  n,  UNSAFE_THIS));	  Context.reportCodeChange();    	non-compiled	[CE]  not  a  statement	21	None	replace
100	[BUG]  [BUGGY]  Context.report(JSError.make(r.node,  UNSAFE_THIS));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Context.report(JSError.make(r.node,  UNSAFE_THIS));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.report(JSError.make(r.node,  UNSAFE_THIS));	  Context.reportCodeChange();    	non-compiled	[CE]  not  a  statement	21	None	replace
101	[BUG]  [BUGGY]  Context.report(JSError.make(r.node,  UNSAFE_THIS,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Context.report(JSError.make(r.node,  UNSAFE_THIS,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.report(JSError.make(r.node,  UNSAFE_THIS,  NAMESPACE_REDEFINED_WARNING));	  Context.reportCodeChange();    	non-compiled	[CE]  not  a  statement	21	None	replace
102	[BUG]  [BUGGY]  Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS));  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS));	  Context.reportCodeChange();    	non-compiled	[CE]  not  a  statement	21	None	replace
103	[BUG]  [BUGGY]  if(n.props  ==  null  ||  n.props.isEmpty())  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||  n.props.isEmpty())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||  n.props.isEmpty())  {	  if(n.props    ==    null    ||!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	24	None	replace
104	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
105	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)||    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	50	None	replace
106	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)||    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	50	None	replace
107	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)||    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	50	None	replace
108	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getName()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	37	None	replace
109	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getName()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	37	None	replace
110	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getName()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getName()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  (n.getName()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getName()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	37	None	replace
111	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getName()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	37	None	replace
112	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()!=  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()!=  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()!=  null  ||  n.isSet()))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	58	None	replace
113	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	27	None	replace
114	[BUG]  [BUGGY]  Name  p  =  r.node.getName();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  r.node.getName();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  r.node.getName();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
115	[BUG]  [BUGGY]  Name  p  =  n.getPrettyPrinter().getName();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  n.getPrettyPrinter().getName();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.getPrettyPrinter().getName();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
116	[BUG]  [BUGGY]  Name  p  =  n.getReferenceName();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  n.getReferenceName();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.getReferenceName();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
117	[BUG]  [BUGGY]  Name  p  =  n.getPrefix();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  n.getPrefix();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.getPrefix();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
118	[BUG]  [BUGGY]  Name  p  =  n.getQualifiedName();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  n.getQualifiedName();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.getQualifiedName();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
119	[BUG]  [BUGGY]  Name  p  =  n.getNamespaceURI();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  n.getNamespaceURI();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.getNamespaceURI();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
120	[BUG]  [BUGGY]  Preconditions.checkNotState(n.props!=  null);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkNotState(n.props!=  null);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkNotState(n.props!=  null);	  Preconditions.checkState(n.props!=    null);    	non-compiled	[CE]  not  a  statement	17	None	replace
121	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isName(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
122	[BUG]  [BUGGY]  if(r.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
123	[BUG]  [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
124	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
125	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
126	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)  &&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)  &&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)  &&!NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
127	[BUG]  [BUGGY]  if(r.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	48	None	replace
128	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	48	None	replace
129	[BUG]  [BUGGY]  if(n.props  ==  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	48	None	replace
130	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isName(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isName(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isName(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	48	None	replace
131	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isName(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isName(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isName(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	48	None	replace
132	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	52	None	replace
133	[BUG]  [BUGGY]  if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	52	None	replace
134	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	52	None	replace
135	[BUG]  [BUGGY]  if(r.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
136	[BUG]  [BUGGY]  if(r.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    nodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	49	None	replace
137	[BUG]  [BUGGY]  if(n.props!=  null  ||  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    nodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	49	None	replace
138	[BUG]  [BUGGY]  if(n.props!=  null  &&  nodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  nodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  nodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    nodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	49	None	replace
139	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
140	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil.isObjectLitKey(r.node,    originalName))    {    	non-compiled	[CE]  not  a  statement	53	None	replace
141	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil.isObjectLitKey(r.node,    originalName))    {    	non-compiled	[CE]  not  a  statement	53	None	replace
142	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil.isObjectLitKey(r.node,    originalName))    {    	non-compiled	[CE]  not  a  statement	53	None	replace
143	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
144	[BUG]  [BUGGY]  if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
145	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
146	[BUG]  [BUGGY]  if(r.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props    ==    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	31	None	replace
147	[BUG]  [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.props    ==    null    ||    n.props.isSet()))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
148	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.props    ==    null    ||    n.props.isSet()))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
149	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.props    ==    null    ||    n.props.isSet()))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
150	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil    	non-compiled	[CE]  not  a  statement	5	None	replace
151	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil    	non-compiled	[CE]  not  a  statement	5	None	replace
152	[BUG]  [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil    	non-compiled	[CE]  not  a  statement	5	None	replace
153	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil    	non-compiled	[CE]  not  a  statement	5	None	replace
154	[BUG]  [BUGGY]  if(r.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	36	None	replace
155	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)||  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	36	None	replace
156	[BUG]  [BUGGY]  if(n.props!=  null  ||  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	36	None	replace
157	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	36	None	replace
158	[BUG]  [BUGGY]  Node  r  =  n.getImmediateParentNode();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getImmediateParentNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getImmediateParentNode();	  Node    r    =    n.getNode();    	non-compiled	[CE]  not  a  statement	45	None	replace
159	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    n.isSet())    {    	non-compiled	[CE]  not  a  statement	61	None	replace
160	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isPrefixKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isPrefixKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isPrefixKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    n.isSet())    {    	non-compiled	[CE]  not  a  statement	61	None	replace
161	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  n.isSet())  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    n.isSet())    {    	non-compiled	[CE]  not  a  statement	61	None	replace
162	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(NodeUtil.isName(n)&&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	9	None	replace
163	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	9	None	replace
164	[BUG]  [BUGGY]  Preconditions.checkState(n.props!=  null,  n.props);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props!=  null,  n.props);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props!=  null,  n.props);	  Preconditions.checkState(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	18	None	replace
165	[BUG]  [BUGGY]  Preconditions.checkState(n.props!=  null  &&  n.props.containsKey(alias));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props!=  null  &&  n.props.containsKey(alias));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props!=  null  &&  n.props.containsKey(alias));	  Preconditions.checkState(n.props!=    null);    	non-compiled	[CE]  not  a  statement	17	None	replace
166	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent)&&  (n.getName()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getName()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	37	None	replace
167	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(r.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	15	None	replace
168	[BUG]  [BUGGY]  Name  p  =  n.props.getName();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  n.props.getName();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.props.getName();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
169	[BUG]  [BUGGY]  Name  p  =  n.getParent();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  n.getParent();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.getParent();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
170	[BUG]  [BUGGY]  Name  p  =  n.getPosition();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  n.getPosition();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.getPosition();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
171	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isName(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	40	None	replace
172	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isPrefixKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isPrefixKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isPrefixKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	40	None	replace
173	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	40	None	replace
174	[BUG]  [BUGGY]  Node  p  =  n.node.getPrefix();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.node.getPrefix();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.node.getPrefix();	  Node    p    =    r.node.getParent();    	non-compiled	[CE]  not  a  statement	46	None	replace
175	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
176	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isName(r.node,  rParent))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
177	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props!=  null,  n.props);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkArgument(n.props!=  null,  n.props);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props!=  null,  n.props);	  Preconditions.checkArgument(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	54	None	replace
178	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&  n.props.equals(originalName));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&  n.props.equals(originalName));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props!=  null  &&  n.props.equals(originalName));	  Preconditions.checkArgument(n.props!=    null);    	non-compiled	[CE]  not  a  statement	55	None	replace
179	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&  n.props.containsKey(alias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&  n.props.containsKey(alias));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props!=  null  &&  n.props.containsKey(alias));	  Preconditions.checkArgument(n.props!=    null);    	non-compiled	[CE]  not  a  statement	55	None	replace
180	[BUG]  [BUGGY]  Node  r  =  n.firstChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.firstChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.firstChild();	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	20	None	replace
181	[BUG]  [BUGGY]  Node  r  =  n.getOwnerChild();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getOwnerChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getOwnerChild();	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	20	None	replace
182	[BUG]  [BUGGY]  if(n.props!=  null  &&  nodeUtil.isPrefixKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  nodeUtil.isPrefixKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  nodeUtil.isPrefixKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    nodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	49	None	replace
183	[BUG]  [BUGGY]  if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    nodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	49	None	replace
184	[BUG]  [BUGGY]  Context.report(JSError.make(r.node,  originalName));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Context.report(JSError.make(r.node,  originalName));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.report(JSError.make(r.node,  originalName));	  Context.reportCodeChange();    	non-compiled	[CE]  not  a  statement	21	None	replace
185	[BUG]  [BUGGY]  Context.report(JSError.make(r.node,  n.props));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Context.report(JSError.make(r.node,  n.props));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.report(JSError.make(r.node,  n.props));	  Context.reportCodeChange();    	non-compiled	[CE]  not  a  statement	21	None	replace
186	[BUG]  [BUGGY]  Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING,  originalName));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING,  originalName));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.report(JSError.make(r.node,  NAMESPACE_REDEFINED_WARNING,  originalName));	  Context.reportCodeChange();    	non-compiled	[CE]  not  a  statement	21	None	replace
187	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    &&!NodeUtil.isLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
188	[BUG]  [BUGGY]  Node  p  =  n.getImmediateParentNode();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getImmediateParentNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getImmediateParentNode();	  Node    p    =    n.getNode();    	non-compiled	[CE]  not  a  statement	44	None	replace
189	[BUG]  [BUGGY]  Node  p  =  n.getImmediateParent();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.getImmediateParent();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.getImmediateParent();	  Node    p    =    n.getNode();    	non-compiled	[CE]  not  a  statement	44	None	replace
190	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isObjectLitKey(r.node,  rParent));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(NodeUtil.isObjectLitKey(r.node,  rParent));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(NodeUtil.isObjectLitKey(r.node,  rParent));	  Preconditions.checkNotNull(r.props);    	non-compiled	[CE]  not  a  statement	22	None	replace
191	[BUG]  [BUGGY]  Preconditions.checkState(NAMESPACE_REDEFINED_WARNING  ==  n.props);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(NAMESPACE_REDEFINED_WARNING  ==  n.props);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(NAMESPACE_REDEFINED_WARNING  ==  n.props);	  Preconditions.checkNotNull(r.props);    	non-compiled	[CE]  not  a  statement	22	None	replace
192	[BUG]  [BUGGY]  if(n.props!=  null  &&!n.props.equals(name))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!n.props.equals(name))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!n.props.equals(name))  {	  if(n.props!=    null    &&!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	56	None	replace
193	[BUG]  [BUGGY]  if(n.props  ==  null  ||!n.props.equals(alias))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!n.props.equals(alias))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!n.props.equals(alias))  {	  if(n.props!=    null    ||!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
194	[BUG]  [BUGGY]  if(n.props  ==  null  ||!n.props.equals(nameMap.get(alias)))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!n.props.equals(nameMap.get(alias)))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!n.props.equals(nameMap.get(alias)))  {	  if(n.props!=    null    ||!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
195	[BUG]  [BUGGY]  Node  rParent  =  n.parent();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.parent();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.parent();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
196	[BUG]  [BUGGY]  Node  rParent  =  n.getParentNode();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.getParentNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.getParentNode();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
197	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  rParent))  {	  if(n.props    ==    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
198	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	4	None	replace
199	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
200	[BUG]  [BUGGY]  if(n.getName()!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.getName()!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.getName()!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
201	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil    	non-compiled	[CE]  not  a  statement	5	None	replace
202	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
203	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  nu  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  nu  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (n.getTwin()  ==  nu	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    	non-compiled	[CE]  not  a  statement	60	None	replace
204	[BUG]  [BUGGY]  if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(r.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    	non-compiled	[CE]  not  a  statement	60	None	replace
205	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isPrefixKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isPrefixKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isPrefixKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	36	None	replace
206	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isName(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	59	None	replace
207	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  nParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  nParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  nParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&(n.props    ==    null    ||    n.props.length()    ==    0))    {    	non-compiled	[CE]  not  a  statement	42	None	replace
208	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  nParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  nParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(r.node,  nParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&(n.props    ==    null    ||    n.props.length()    ==    0))    {    	non-compiled	[CE]  not  a  statement	42	None	replace
209	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  rParent)&&(n.props  ==  null  ||  n.props.length()  ==  0))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&(n.props    ==    null    ||    n.props.length()    ==    0))    {    	non-compiled	[CE]  not  a  statement	42	None	replace
210	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(n.node,  rParent)  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(n.node,  rParent)  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(n.node,  rParent)  &&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
211	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  originalName)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  originalName)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  originalName)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
212	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
213	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isPropertyName(r.node,  originalName))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isPropertyName(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isPropertyName(r.node,  originalName))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
214	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&  n.props.contains(originalName));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkArgument(n.props!=  null  &&  n.props.contains(originalName));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props!=  null  &&  n.props.contains(originalName));	  Preconditions.checkNotNull(r.props);    	non-compiled	[CE]  not  a  statement	22	None	replace
215	[BUG]  [BUGGY]  if(n.props!=  null  &&!n.props.isEmpty()  ||  n.props.isEmpty())  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!n.props.isEmpty()  ||  n.props.isEmpty())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!n.props.isEmpty()  ||  n.props.isEmpty())  {	  if(n.props    >=    null    &&!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	57	None	replace
216	[BUG]  [BUGGY]  Preconditions.checkState(n.props!=  null  &&  n.props.contains(originalName));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props!=  null  &&  n.props.contains(originalName));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props!=  null  &&  n.props.contains(originalName));	  Preconditions.checkState(n.props!=    null);    	non-compiled	[CE]  not  a  statement	17	None	replace
217	[BUG]  [BUGGY]  Preconditions.checkState(n.props!=  null,  n.props.length);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props!=  null,  n.props.length);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props!=  null,  n.props.length);	  Preconditions.checkState(n.props!=    null);    	non-compiled	[CE]  not  a  statement	17	None	replace
218	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  originalName)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  originalName)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  originalName)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	9	None	replace
219	[BUG]  [BUGGY]  if(n.props  >=  null  &&!n.props.equals(originalName))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  >=  null  &&!n.props.equals(originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  >=  null  &&!n.props.equals(originalName))  {	  if(n.props!=    null    ||!n.props.equals(originalName))    {    	non-compiled	[CE]  not  a  statement	26	None	replace
220	[BUG]  [BUGGY]  if(n.props  ==  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	36	None	replace
221	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	36	None	replace
222	[BUG]  [BUGGY]  Node  r  =  n.getRootNode();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getRootNode();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getRootNode();	  Node    r    =    n.getNode();    	non-compiled	[CE]  not  a  statement	45	None	replace
223	[BUG]  [BUGGY]  Node  r  =  n.getOwnerDocument();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getOwnerDocument();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getOwnerDocument();	  Node    r    =    n.getNode();    	non-compiled	[CE]  not  a  statement	45	None	replace
224	[BUG]  [BUGGY]  if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&    nodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	49	None	replace
225	[BUG]  [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(n.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  ||!NodeUtil.isObjectLitKey(n.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  ||!NodeUtil.isObjectLitKey(n.node,  rParent))  {	  if(r.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	35	None	replace
226	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
227	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  r.node)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  r.node)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  r.node)&&  NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	14	None	replace
228	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
229	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  originalName)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(r.node,  originalName)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(r.node,  originalName)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	6	None	replace
230	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil    	non-compiled	[CE]  not  a  statement	5	None	replace
231	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  nodeUtil.  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  nodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  nodeUtil.	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil    	non-compiled	[CE]  not  a  statement	5	None	replace
232	[BUG]  [BUGGY]  Node  rParent  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.removeFirstChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.removeFirstChild();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
233	[BUG]  [BUGGY]  Node  rParent  =  n.cloneTwin();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.cloneTwin();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.cloneTwin();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
234	[BUG]  [BUGGY]  Node  rParent  =  n.getFirstChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  rParent  =  n.getFirstChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  rParent  =  n.getFirstChild();	  Node    rParent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	16	None	replace
235	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
236	[BUG]  [BUGGY]  if(n.props  >=  null  ||!n.props.isEmpty())  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  >=  null  ||!n.props.isEmpty())  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  >=  null  ||!n.props.isEmpty())  {	  if(n.props    ==    null    ||!n.props.isEmpty())    {    	non-compiled	[CE]  not  a  statement	24	None	replace
237	[BUG]  [BUGGY]  Preconditions.checkState(n.props  ==  null  ||!n.props.isEmpty());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props  ==  null  ||!n.props.isEmpty());  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props  ==  null  ||!n.props.isEmpty());	  Preconditions.checkState(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	18	None	replace
238	[BUG]  [BUGGY]  Preconditions.checkState(nameMap.containsKey(n.props),  n.props  ==  null);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(nameMap.containsKey(n.props),  n.props  ==  null);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(nameMap.containsKey(n.props),  n.props  ==  null);	  Preconditions.checkState(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	18	None	replace
239	[BUG]  [BUGGY]  Preconditions.checkState(n.props  ==  null  ||  n.props!=  null);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkState(n.props  ==  null  ||  n.props!=  null);  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkState(n.props  ==  null  ||  n.props!=  null);	  Preconditions.checkState(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	18	None	replace
240	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  nParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  nParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  nParent)&&  (n.props  ==  null  ||  n.props.isSet()))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.props    ==    null    ||    n.props.isSet()))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
241	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props  ==  null  ||!n.props.isEmpty());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkArgument(n.props  ==  null  ||!n.props.isEmpty());  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props  ==  null  ||!n.props.isEmpty());	  Preconditions.checkArgument(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	54	None	replace
242	[BUG]  [BUGGY]  Preconditions.checkArgument(n.props  ==  null  ||  n.props.contains(originalName));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Preconditions.checkArgument(n.props  ==  null  ||  n.props.contains(originalName));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Preconditions.checkArgument(n.props  ==  null  ||  n.props.contains(originalName));	  Preconditions.checkArgument(n.props    ==    null);    	non-compiled	[CE]  not  a  statement	54	None	replace
243	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||	  if(n.props    ==    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&    (n.getTwin()    ==    null    ||    	non-compiled	[CE]  not  a  statement	60	None	replace
244	[BUG]  [BUGGY]  if(n.props!=  null)&&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null)&&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null)&&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	7	None	replace
245	[BUG]  [BUGGY]  Context.report(JSError.make(r.getSourceName(),  n,  UNSAFE_THIS));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Context.report(JSError.make(r.getSourceName(),  n,  UNSAFE_THIS));  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Context.report(JSError.make(r.getSourceName(),  n,  UNSAFE_THIS));	  Context.reportCodeChange();    	non-compiled	[CE]  not  a  statement	21	None	replace
246	[BUG]  [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props  ==  null  ||!NodeUtil.isObjectLitKey(r.node,  rParent)||!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
247	[BUG]  [BUGGY]  if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  nodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.	  if(n.props!=    null    ||!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.    	non-compiled	[CE]  not  a  statement	4	None	replace
248	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isName(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isName(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  NodeUtil.isName(r.node,  rParent))  {	  if(n.props    ==    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
249	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  r.node))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  r.node))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  r.node))  {	  if(n.props    ==    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
250	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n.node,  rParent))  {	  if(n.props    ==    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	33	None	replace
251	[BUG]  [BUGGY]  Node  p  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.removeFirstChild();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.removeFirstChild();	  Node    p    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
252	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	2	None	replace
253	[BUG]  [BUGGY]  if(n.getParent()  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.getParent()  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.getParent()  ==  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
254	[BUG]  [BUGGY]  if(n.getName().equals(alias)&&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.getName().equals(alias)&&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.getName().equals(alias)&&!NodeUtil.isObjectLitKey(r.node,  rParent)&&  (n.getTwin()  ==  null  ||  n.isSet()))  {	  if(props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&    (n.getTwin()    ==    null    ||    n.isSet()))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
255	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  r.node)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  r.node)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(n,  r.node)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(r.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	27	None	replace
256	[BUG]  [BUGGY]  Name  p  =  n.getPrettyPrinter();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  n.getPrettyPrinter();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.getPrettyPrinter();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
257	[BUG]  [BUGGY]  Name  p  =  n.getNamespace();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Name  p  =  n.getNamespace();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Name  p  =  n.getNamespace();	  Name    p    =    n.getName();    	non-compiled	[CE]  not  a  statement	19	None	replace
258	[BUG]  [BUGGY]  Node  p  =  n.parent.getParent();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.parent.getParent();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.parent.getParent();	  Node    p    =    r.node.getParent();    	non-compiled	[CE]  not  a  statement	46	None	replace
259	[BUG]  [BUGGY]  Node  p  =  n.props.getParent();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  p  =  n.props.getParent();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  p  =  n.props.getParent();	  Node    p    =    r.node.getParent();    	non-compiled	[CE]  not  a  statement	46	None	replace
260	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isName(r.node,  originalName))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isName(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isName(r.node,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil.isObjectLitKey(r.node,    originalName))    {    	non-compiled	[CE]  not  a  statement	53	None	replace
261	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.mayHaveSideEffects(r.node,  originalName))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.mayHaveSideEffects(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.mayHaveSideEffects(r.node,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil.isObjectLitKey(r.node,    originalName))    {    	non-compiled	[CE]  not  a  statement	53	None	replace
262	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.parent,  originalName))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.parent,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.parent,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil.isObjectLitKey(r.node,    originalName))    {    	non-compiled	[CE]  not  a  statement	53	None	replace
263	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  initialized))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  initialized))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  initialized))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent)    &&!NodeUtil.isObjectLitKey(r.node,    originalName))    {    	non-compiled	[CE]  not  a  statement	53	None	replace
264	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	48	None	replace
265	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isImmutableValue(r.node,  originalName))  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isImmutableValue(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isImmutableValue(r.node,  originalName))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	48	None	replace
266	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isName(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isName(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isName(r.node,  rParent))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	48	None	replace
267	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent),  originalName)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent),  originalName)  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent),  originalName)  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	48	None	replace
268	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isPropertyName(r.node,  originalName))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isPropertyName(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isPropertyName(r.node,  originalName))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	48	None	replace
269	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(n,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(n,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(n,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
270	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(n,  r.node)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isName(n,  r.node)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isName(n,  r.node)&&!NodeUtil.isObjectLitKey(r.node,  rParent))  {	  if(n.props!=    null    &&!NodeUtil.isName(r.node,    rParent)||!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	3	None	replace
271	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isImmutableValue(r.node,  originalName))  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isImmutableValue(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isImmutableValue(r.node,  originalName))  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
272	[BUG]  [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent),  originalName)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent),  originalName)  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&!NodeUtil.isObjectLitKey(r.node,  rParent),  originalName)  {	  if(n.props!=    null    &&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	32	None	replace
273	[BUG]  [BUGGY]  Node  r  =  n.getFirstChild().getNext();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getFirstChild().getNext();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getFirstChild().getNext();	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	20	None	replace
274	[BUG]  [BUGGY]  Node  r  =  n.getFirstChild().cloneTree();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  Node  r  =  n.getFirstChild().cloneTree();  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	Node  r  =  n.getFirstChild().cloneTree();	  Node    r    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	20	None	replace
275	[BUG]  [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (!NodeUtil.isObjectLitKey(r.node,  rParent)  &&  (r.getTwin()  ==  null  ||  r.isSet()))  {  flattenNameRef(alias,  r.node,  rParent,  originalName);  }  }  }          [BUGGY]  if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {  [BUGGY]      for  (Name  p  :  n.props)  {  flattenPrefixes(alias,  p,  1);  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesTo  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.22360679774997896	337	337	8	replace	if(n.props!=  null  &&  NodeUtil.isObjectLitKey(r.node,  rParent)&&!NodeUtil.isObjectLitKey(r.node,  originalName))  {	  if(n.props!=    null    &&    NodeUtil.isObjectLitKey(r.node,    rParent)&&!NodeUtil.isObjectLitKey(r.node,    rParent))    {    	non-compiled	[CE]  not  a  statement	40	None	replace
