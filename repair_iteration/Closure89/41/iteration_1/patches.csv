bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
2	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
3	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
4	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
5	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
6	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0);    	non-compiled	[CE]  not  a  statement	14	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0);    	non-compiled	[CE]  not  a  statement	14	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  0);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  0);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  0);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0);    	non-compiled	[CE]  not  a  statement	14	None	replace
10	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
11	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
12	[BUG]  [BUGGY]  For(Name  p  :  n.props)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.props)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.props)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
13	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias);    	non-compiled	[CE]  not  a  statement	8	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  n.props);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  n.props);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  n.props);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias);    	non-compiled	[CE]  not  a  statement	8	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length  +  1);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length  +  1);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  n.props.length);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  n.props.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  n.props.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  n.props,  0,  n.props.length);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  n.props,  0,  n.props.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  n.props,  0,  n.props.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(n,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(n,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(n,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n.props.length);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n.props.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n.props.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	17	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	17	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	17	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias.length);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias.length);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias.length);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	17	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	17	None	replace
26	[BUG]  [BUGGY]  for(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
27	[BUG]  [BUGGY]  For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.property))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.property))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.property))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
28	[BUG]  [BUGGY]  for(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.property))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.property))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.property))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
29	[BUG]  [BUGGY]  For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
30	[BUG]  [BUGGY]  For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length  -  1);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length  -  1);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    	non-compiled	[CE]  not  a  statement	9	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  propAlias.length);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  propAlias.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  propAlias.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    	non-compiled	[CE]  not  a  statement	9	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length  +  1);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.length  +  1);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    	non-compiled	[CE]  not  a  statement	9	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  p.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  p.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(p.name,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  alias.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(p.name,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  alias.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(p.name,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  alias.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  0,  p.name);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  0,  p.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  0,  p.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  1);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  1);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    	non-compiled	[CE]  not  a  statement	13	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  2,  propAlias);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  2,  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  2,  propAlias);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    	non-compiled	[CE]  not  a  statement	13	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  p.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  p.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    	non-compiled	[CE]  not  a  statement	13	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  p.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  p.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  p.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    	non-compiled	[CE]  not  a  statement	13	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias,  p.name);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias,  p.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias,  p.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    	non-compiled	[CE]  not  a  statement	13	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  -1);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  -1);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  -1);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    -1,    propAlias);    	non-compiled	[CE]  not  a  statement	15	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    -1,    propAlias);    	non-compiled	[CE]  not  a  statement	15	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  alias);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  alias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  alias);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    -1,    propAlias);    	non-compiled	[CE]  not  a  statement	15	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  4,  propAlias);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  4,  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  4,  propAlias);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    -1,    propAlias);    	non-compiled	[CE]  not  a  statement	15	None	replace
49	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
50	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
51	[BUG]  [BUGGY]  For(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
52	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  p.name);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  p.name);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  p.name);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	18	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  2,  propAlias);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  2,  propAlias);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  2,  propAlias);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	18	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n.props);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n.props);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n.props);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	18	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  propAlias);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	18	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	18	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	18	None	replace
59	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
60	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
61	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
62	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
63	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
64	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
65	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
66	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
67	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
68	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
69	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
70	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.property);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.property);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.property);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    -1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	16	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  4,  propAlias);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  4,  propAlias);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  4,  propAlias);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    -1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	16	None	replace
73	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  IllegalArgumentException( " ");	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
74	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  IllegalStateException( " ");	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
75	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  UnsupportedOperationException( " ");  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  UnsupportedOperationException( " ");	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
76	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  n.name);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  n.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  n.name);	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
77	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  propAlias);	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
78	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING  for  alias: "  +  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING  for  alias: "  +  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING  for  alias: "  +  propAlias);	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
79	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  n.getName());  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  n.getName());  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  n.getName());	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
80	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
81	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(!p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(!p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(!p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
82	[BUG]  [BUGGY]  for(Name  n  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
83	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
84	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(p.isCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(p.isCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(p.isCollapse())  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias,  collapsePropertiesOnExternTypes);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias,  collapsePropertiesOnExternTypes);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias,  collapsePropertiesOnExternTypes);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    -1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	16	None	replace
86	[BUG]  [BUGGY]  throw  new  AssertionError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  n.name);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  AssertionError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  n.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  AssertionError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  n.name);	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
87	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  alias);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  alias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING: "  +  alias);	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
88	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
89	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
90	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
91	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p,  propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p,  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p,  propAlias);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    	non-compiled	[CE]  not  a  statement	13	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  n);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  n);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  n);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    	non-compiled	[CE]  not  a  statement	13	None	replace
94	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  3,  propAlias);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  3,  propAlias);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  3,  propAlias);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	18	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  n.props,  n.props.length);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  n.props,  n.props.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  n.props,  n.props.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length  -  1);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length  -  1);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length  +  2);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length  +  2);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length  +  2);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
98	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
99	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
100	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
101	[BUG]  [BUGGY]  Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
102	[BUG]  [BUGGY]  Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
103	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
104	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
105	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
106	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesToAppendPropForAlias(alias,  p.name);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesToAppendPropForAlias(alias,  p.name);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesToAppendPropForAlias(alias,  p.name);  }	  for(Name    p    :    n.props)    {    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
107	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
108	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
109	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  p.name,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  p.name,  p.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  p.name,  p.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.length);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.length);  compiler.reportCodeChange();  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.length);  compiler.reportCodeChange();	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	17	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias,  collapsePropertiesOnExternTypes);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias,  collapsePropertiesOnExternTypes);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1,  propAlias,  collapsePropertiesOnExternTypes);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    -1,    propAlias);    	non-compiled	[CE]  not  a  statement	15	None	replace
113	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  String  alias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  String  alias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  String  alias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
114	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
115	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  String  alias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  prop  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  String  alias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  prop  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  String  alias  =  appendPropForAlias(alias,  p.name);  if(p.canCollapse())  {  flattenReferencesTo(p,  prop	      	non-compiled	[CE]  not  a  statement	7	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  n.length);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  n.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  0,  n.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    	non-compiled	[CE]  not  a  statement	9	None	replace
117	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  -1);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0);    	non-compiled	[CE]  not  a  statement	14	None	replace
118	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
119	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
120	[BUG]  [BUGGY]  For(Name  p  :  n.props)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.props)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.props)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
121	[BUG]  [BUGGY]  For(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.name)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
122	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.props))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
123	[BUG]  [BUGGY]  for(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
124	[BUG]  [BUGGY]  for(Name  n  :  n.props)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  n.props)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  n.props)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
125	[BUG]  [BUGGY]  for(Name  n  :  n.names)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  n.names)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  n.names)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
126	[BUG]  [BUGGY]  For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  n  :  n.name)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
127	[BUG]  [BUGGY]  for(Name  n  :  nameMap.props)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  nameMap.props)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  nameMap.props)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
128	[BUG]  [BUGGY]  for(Name  n  :  names)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  names)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  names)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
129	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  n.props);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  n.props);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias,  n.props);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias);    	non-compiled	[CE]  not  a  statement	8	None	replace
130	[BUG]  [BUGGY]  System.arraycopy(n.props,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(n.props,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(n.props,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
131	[BUG]  [BUGGY]  System.arraycopy(props,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(props,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(props,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  n.props.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    n.props.length);    	non-compiled	[CE]  not  a  statement	10	None	replace
133	[BUG]  [BUGGY]  For(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
134	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
135	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAli	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAli    	non-compiled	[CE]  not  a  statement	5	None	replace
136	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
137	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
138	[BUG]  [BUGGY]  For(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.names)  {  if(!appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(!appendPropForAlias(alias,    p.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
139	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(p,	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
140	[BUG]  [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.name)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesToCollapsibleDescendantNames(	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
141	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
142	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
143	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(p.collapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(p.collapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(p.collapse())  {  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
144	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  appendPropForAlias(alias,  p.name);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  appendPropForAlias(alias,  p.name);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  appendPropForAlias(alias,  p.name);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
145	[BUG]  [BUGGY]  for(Name  n  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(n,  propAlias);  }  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(n,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  n.props)  {  if(p.canCollapse())  {  flattenReferencesTo(n,  propAlias);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
146	[BUG]  [BUGGY]  for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p);  }  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.props)  {  if(p.appendPropForAlias(alias,  p.name))  {  flattenReferencesTo(p);  }	      	non-compiled	[CE]  not  a  statement	7	None	replace
147	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n.props);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n.props);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  n.props);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	18	None	replace
148	[BUG]  [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	18	None	replace
149	[BUG]  [BUGGY]  for(Name  n  :  n.names)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  n.names)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  n.names)  {  if(!appendPropForAlias(alias,  n.props))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
150	[BUG]  [BUGGY]  for(Name  n  :  n.names)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  n  :  n.names)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  n  :  n.names)  {  if(!appendPropForAlias(alias,  n.name))  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    n    :    n.props)    {    if(!appendPropForAlias(alias,    n.name))    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
151	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING  or  NAMESPACE_REDEFINED_WARNING: "  +  n.name);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING  or  NAMESPACE_REDEFINED_WARNING: "  +  n.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING  or  NAMESPACE_REDEFINED_WARNING: "  +  n.name);	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
152	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING  or  NAMESPACE_REDEFINED_WARNING: "  +  propAlias);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING  or  NAMESPACE_REDEFINED_WARNING: "  +  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	throw  new  AssertionFailedError( "Unexpected  NAMESPACE_REDEFINED_WARNING  or  NAMESPACE_REDEFINED_WARNING: "  +  propAlias);	  return;    	non-compiled	[CE]  not  a  statement	11	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  p.name);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  p.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  p.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  propAlias);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  p.type);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  p.type);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  p.name,  p.type);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
156	[BUG]  [BUGGY]  System.arraycopy(p.name,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  p.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(p.name,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  p.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(p.name,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  p.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    p.name);    	non-compiled	[CE]  not  a  statement	12	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  propAlias);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0);    	non-compiled	[CE]  not  a  statement	14	None	replace
158	[BUG]  [BUGGY]  For(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.props);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
159	[BUG]  [BUGGY]  for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	for(Name  p  :  n.names)  {  String  propAlias  =  appendPropForAlias(alias,  p.prop);  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlia	  for(Name    p    :    n.props)    {    String    propAlias    =    appendPropForAlias(alias,    p.name);    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlia    	non-compiled	[CE]  not  a  statement	6	None	replace
160	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias.length);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    	non-compiled	[CE]  not  a  statement	9	None	replace
161	[BUG]  [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  alias.length);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  alias.length);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(propAlias,  0,  flattenReferencesToCollapsibleDescendantNames,  0,  alias.length);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    0,    propAlias.length);    	non-compiled	[CE]  not  a  statement	9	None	replace
162	[BUG]  [BUGGY]  For(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  For(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	For(Name  p  :  n.names)  {  if(p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }	  for(Name    p    :    n.props)    {    if(p.canCollapse())    {    flattenReferencesTo(p,    propAlias);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias,  n.name);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    for  (Name  p  :  n.props)  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }    [BUGGY]  System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias,  n.name);  [BUGGY]      [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	307	307	8	replace	System.arraycopy(alias,  0,  flattenReferencesToCollapsibleDescendantNames,  1,  propAlias,  n.name);	  System.arraycopy(alias,    0,    flattenReferencesToCollapsibleDescendantNames,    1,    propAlias);    	non-compiled	[CE]  not  a  statement	13	None	replace
