bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(parent);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(parent);	  int    numStubs    =    Lists.newArrayList(addAfter);    	non-compiled	[CE]  not  a  statement	18	None	replace
2	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(size);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(size);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(size);	  int    numStubs    =    Lists.newArrayList(addAfter);    	non-compiled	[CE]  not  a  statement	18	None	replace
3	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(addAfter,  addAfter);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(addAfter,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(addAfter,  addAfter);	  int    numStubs    =    Lists.newArrayList(addAfter);    	non-compiled	[CE]  not  a  statement	18	None	replace
4	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(adjustStubs);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(adjustStubs);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(adjustStubs);	  int    numStubs    =    Lists.newArrayList(addAfter);    	non-compiled	[CE]  not  a  statement	18	None	replace
5	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(addAfter,  parent);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(addAfter,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(addAfter,  parent);	  int    numStubs    =    Lists.newArrayList(addAfter);    	non-compiled	[CE]  not  a  statement	18	None	replace
6	[BUG]  [BUGGY]  int  numStubs  =  parent.lastIndexOf('.');  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.lastIndexOf('.');  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.lastIndexOf('.');	  int    numStubs    =    n.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	60	None	replace
7	[BUG]  [BUGGY]  int  numStubs  =  n.lastIndexOf('.',  addAfter);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.lastIndexOf('.',  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.lastIndexOf('.',  addAfter);	  int    numStubs    =    n.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	60	None	replace
8	[BUG]  [BUGGY]  int  numStubs  =  n.lastIndexOf('.',  parent);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.lastIndexOf('.',  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.lastIndexOf('.',  parent);	  int    numStubs    =    n.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	60	None	replace
9	[BUG]  [BUGGY]  int  numStubs  =  n.getIndexOf('.');  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.getIndexOf('.');  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.getIndexOf('.');	  int    numStubs    =    n.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	60	None	replace
10	[BUG]  [BUGGY]  int  numStubs  =  n.lastIndexOf('.',  0);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.lastIndexOf('.',  0);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.lastIndexOf('.',  0);	  int    numStubs    =    n.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	60	None	replace
11	[BUG]  [BUGGY]  int  numStubs  =  n.indexOf('.');  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.indexOf('.');  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.indexOf('.');	  int    numStubs    =    n.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	60	None	replace
12	[BUG]  [BUGGY]  int  numStubs  =  n.lastIndexOf('.',  -1);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.lastIndexOf('.',  -1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.lastIndexOf('.',  -1);	  int    numStubs    =    n.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	60	None	replace
13	[BUG]  [BUGGY]  Node  n  =  parent.getNext();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.getNext();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.getNext();	  Node    n    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
14	[BUG]  [BUGGY]  Node  n  =  parent.getLastChild();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.getLastChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.getLastChild();	  Node    n    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
15	[BUG]  [BUGGY]  Node  n  =  parent.getType()  ==  Token.NAME?  parent.getParent()  :  null;  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.getType()  ==  Token.NAME?  parent.getParent()  :  null;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.getType()  ==  Token.NAME?  parent.getParent()  :  null;	  Node    n    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
16	[BUG]  [BUGGY]  Node  n  =  parent.getType()  ==  Token.NAME?  parent.getParent()  :  n;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.getType()  ==  Token.NAME?  parent.getParent()  :  n;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.getType()  ==  Token.NAME?  parent.getParent()  :  n;	  Node    n    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
17	[BUG]  [BUGGY]  Node  n  =  parent.getType()  ==  Token.NAME?  parent.getNext()  :  n;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.getType()  ==  Token.NAME?  parent.getNext()  :  n;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.getType()  ==  Token.NAME?  parent.getNext()  :  n;	  Node    n    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
18	[BUG]  [BUGGY]  Integer  numStubs  =  parent.length();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Integer  numStubs  =  parent.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Integer  numStubs  =  parent.length();	  int    numStubs    =    parent.length()    +    1;    	non-compiled	[CE]  not  a  statement	35	None	replace
19	[BUG]  [BUGGY]  int  numStubs  =  node.length();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  node.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  node.length();	  int    numStubs    =    parent.length()    +    1;    	non-compiled	[CE]  not  a  statement	35	None	replace
20	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(size()  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(size()  -  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(size()  -  1);	  int    numStubs    =    Lists.newArrayList(size());    	non-compiled	[CE]  not  a  statement	19	None	replace
21	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(size()  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(size()  +  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(size()  +  1);	  int    numStubs    =    Lists.newArrayList(size());    	non-compiled	[CE]  not  a  statement	19	None	replace
22	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(nameMap.size());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(nameMap.size());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(nameMap.size());	  int    numStubs    =    Lists.newArrayList(size());    	non-compiled	[CE]  not  a  statement	19	None	replace
23	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(compiler.size());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(compiler.size());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(compiler.size());	  int    numStubs    =    Lists.newArrayList(size());    	non-compiled	[CE]  not  a  statement	19	None	replace
24	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(size()  -  2);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(size()  -  2);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(size()  -  2);	  int    numStubs    =    Lists.newArrayList(size());    	non-compiled	[CE]  not  a  statement	19	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(n));	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	44	None	replace
26	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(parent));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(parent));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkState(NodeUtil.isGetProp(parent));	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	44	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(n));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(n));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkState(NodeUtil.isGetProp(n));	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	44	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(alias));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(alias));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(alias));	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	44	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent,  addAfter));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent,  addAfter));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent,  addAfter));	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	44	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n,  parent));  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n,  parent));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(n,  parent));	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	44	None	replace
31	[BUG]  [BUGGY]  int  numStubs  =  parent.lastIndexOf( "- ");  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.lastIndexOf( "- ");  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.lastIndexOf( "- ");	  int    numStubs    =    n.lastIndexOf(   "-   ");    	non-compiled	[CE]  not  a  statement	62	None	replace
32	[BUG]  [BUGGY]  int  numStubs  =  n.getIndexOf( "- ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.getIndexOf( "- ");  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.getIndexOf( "- ");	  int    numStubs    =    n.lastIndexOf(   "-   ");    	non-compiled	[CE]  not  a  statement	62	None	replace
33	[BUG]  [BUGGY]  int  numStubs  =  n.indexOf( "- ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.indexOf( "- ");  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.indexOf( "- ");	  int    numStubs    =    n.lastIndexOf(   "-   ");    	non-compiled	[CE]  not  a  statement	62	None	replace
34	[BUG]  [BUGGY]  int  numStubs  =  n.name.lastIndexOf( "- ");  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.lastIndexOf( "- ");  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.lastIndexOf( "- ");	  int    numStubs    =    n.lastIndexOf(   "-   ");    	non-compiled	[CE]  not  a  statement	62	None	replace
35	[BUG]  [BUGGY]  int  numStubs  =  parent.lastIndexOf( ".- ");  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.lastIndexOf( ".- ");  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.lastIndexOf( ".- ");	  int    numStubs    =    n.lastIndexOf(   "-   ");    	non-compiled	[CE]  not  a  statement	62	None	replace
36	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  addAfter);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  addAfter);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.props);    	non-compiled	[CE]  not  a  statement	50	None	replace
37	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  parent);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  parent);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.props);    	non-compiled	[CE]  not  a  statement	50	None	replace
38	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(parent.props);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(parent.props);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(parent.props);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.props);    	non-compiled	[CE]  not  a  statement	50	None	replace
39	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  1);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.props);    	non-compiled	[CE]  not  a  statement	50	None	replace
40	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props  +  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.props  +  1);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.props);    	non-compiled	[CE]  not  a  statement	50	None	replace
41	[BUG]  [BUGGY]  int  numStubs  =  n.getStubsForUndeclaredProperties();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.getStubsForUndeclaredProperties();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.getStubsForUndeclaredProperties();	  int    numStubs    =    parent.getStubsForUndeclaredProperties();    	non-compiled	[CE]  not  a  statement	58	None	replace
42	[BUG]  [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties()  -  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.getStubsForUndeclaredProperties()  -  1;	  int    numStubs    =    parent.getStubsForUndeclaredProperties();    	non-compiled	[CE]  not  a  statement	58	None	replace
43	[BUG]  [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties()  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.getStubsForUndeclaredProperties()  +  1;	  int    numStubs    =    parent.getStubsForUndeclaredProperties();    	non-compiled	[CE]  not  a  statement	58	None	replace
44	[BUG]  [BUGGY]  int  numStubs  =  n.parent.getStubsForUndeclaredProperties();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.parent.getStubsForUndeclaredProperties();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.parent.getStubsForUndeclaredProperties();	  int    numStubs    =    parent.getStubsForUndeclaredProperties();    	non-compiled	[CE]  not  a  statement	58	None	replace
45	[BUG]  [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties(alias);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties(alias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.getStubsForUndeclaredProperties(alias);	  int    numStubs    =    parent.getStubsForUndeclaredProperties();    	non-compiled	[CE]  not  a  statement	58	None	replace
46	[BUG]  [BUGGY]  int  numStubs  =  nameMap.getStubsForUndeclaredProperties();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameMap.getStubsForUndeclaredProperties();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameMap.getStubsForUndeclaredProperties();	  int    numStubs    =    parent.getStubsForUndeclaredProperties();    	non-compiled	[CE]  not  a  statement	58	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(n));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(n));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(n));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	54	None	replace
48	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isImmutableValue(parent));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkState(NodeUtil.isImmutableValue(parent));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkState(NodeUtil.isImmutableValue(parent));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	54	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(alias));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(alias));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(alias));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	54	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  addAfter));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  addAfter));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  addAfter));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	54	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isImmutableValue(n));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkState(NodeUtil.isImmutableValue(n));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkState(NodeUtil.isImmutableValue(n));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	54	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent),  numStubs);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent),  numStubs);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(parent),  numStubs);	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	54	None	replace
53	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  alias,  parent);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  alias,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  alias,  parent);	  Node    newVar    =    Node.newString(Token.NAME,    alias);    	non-compiled	[CE]  not  a  statement	12	None	replace
54	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  alias,  addAfter);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  alias,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  alias,  addAfter);	  Node    newVar    =    Node.newString(Token.NAME,    alias);    	non-compiled	[CE]  not  a  statement	12	None	replace
55	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  n);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  n);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  n);	  Node    newVar    =    Node.newString(Token.NAME,    alias);    	non-compiled	[CE]  not  a  statement	12	None	replace
56	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  nameNode);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  nameNode);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  nameNode);	  Node    newVar    =    Node.newString(Token.NAME,    alias);    	non-compiled	[CE]  not  a  statement	12	None	replace
57	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  parent);  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  parent);	  Node    newVar    =    Node.newString(Token.NAME,    alias);    	non-compiled	[CE]  not  a  statement	12	None	replace
58	[BUG]  [BUGGY]  Node  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  n;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  n;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  n;	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	7	None	replace
59	[BUG]  [BUGGY]  Node  n  =  parent.getType()  ==  Token.VAR?  parent.getFirstChild()  :  n;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.getType()  ==  Token.VAR?  parent.getFirstChild()  :  n;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.getType()  ==  Token.VAR?  parent.getFirstChild()  :  n;	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	7	None	replace
60	[BUG]  [BUGGY]  Node  n  =  addAfter.getFirstChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  addAfter.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  addAfter.getFirstChild();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	7	None	replace
61	[BUG]  [BUGGY]  int  numStubs  =  nameNode.length()  -  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameNode.length()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameNode.length()  -  1;	  int    numStubs    =    nameNode.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
62	[BUG]  [BUGGY]  int  numStubs  =  nameNode.length()  +  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameNode.length()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameNode.length()  +  1;	  int    numStubs    =    nameNode.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
63	[BUG]  [BUGGY]  int  numStubs  =  nameNode.lastIndexOf('.');  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameNode.lastIndexOf('.');  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameNode.lastIndexOf('.');	  int    numStubs    =    nameNode.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
64	[BUG]  [BUGGY]  Integer  numStubs  =  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Integer  numStubs  =  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Integer  numStubs  =  1;	  Integer    numStubs    =    0L;    	non-compiled	[CE]  not  a  statement	15	None	replace
65	[BUG]  [BUGGY]  Long  numStubs  =  0L;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Long  numStubs  =  0L;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Long  numStubs  =  0L;	  Integer    numStubs    =    0L;    	non-compiled	[CE]  not  a  statement	15	None	replace
66	[BUG]  [BUGGY]  int  numStubs  =  nameMap.size()  -  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameMap.size()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameMap.size()  -  1;	  int    numStubs    =    nameMap.size();    	non-compiled	[CE]  not  a  statement	26	None	replace
67	[BUG]  [BUGGY]  int  numStubs  =  nameMap.size()  +  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameMap.size()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameMap.size()  +  1;	  int    numStubs    =    nameMap.size();    	non-compiled	[CE]  not  a  statement	26	None	replace
68	[BUG]  [BUGGY]  int  numStubs  =  nameMap.size()  -  2;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameMap.size()  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameMap.size()  -  2;	  int    numStubs    =    nameMap.size();    	non-compiled	[CE]  not  a  statement	26	None	replace
69	[BUG]  [BUGGY]  int  numStubs  =  nameMap.size()  *  2;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameMap.size()  *  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameMap.size()  *  2;	  int    numStubs    =    nameMap.size();    	non-compiled	[CE]  not  a  statement	26	None	replace
70	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  /  2;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  /  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties()  /  2;	  int    numStubs    =    getStubsForUndeclaredProperties()    *    2;    	non-compiled	[CE]  not  a  statement	48	None	replace
71	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  *  2  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  *  2  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties()  *  2  +  1;	  int    numStubs    =    getStubsForUndeclaredProperties()    *    2;    	non-compiled	[CE]  not  a  statement	48	None	replace
72	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  -  2;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties()  -  2;	  int    numStubs    =    getStubsForUndeclaredProperties()    *    2;    	non-compiled	[CE]  not  a  statement	48	None	replace
73	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  *  4;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  *  4;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties()  *  4;	  int    numStubs    =    getStubsForUndeclaredProperties()    *    2;    	non-compiled	[CE]  not  a  statement	48	None	replace
74	[BUG]  [BUGGY]  int  numStubs  =  nameMap.length()  -  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameMap.length()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameMap.length()  -  1;	  int    numStubs    =    parent.length()    -    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(parent));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(parent));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkState(NodeUtil.isStatementBlock(parent));	  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));    	non-compiled	[CE]  not  a  statement	42	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkState(NodeUtil.isStatementBlock(n));	  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));    	non-compiled	[CE]  not  a  statement	42	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n));	  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));    	non-compiled	[CE]  not  a  statement	42	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent,  addAfter));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent,  addAfter));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent,  addAfter));	  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));    	non-compiled	[CE]  not  a  statement	42	None	replace
79	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  addAfter);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  addAfter);	  int    numStubs    =    getStubsForUndeclaredProperties(nameMap);    	non-compiled	[CE]  not  a  statement	49	None	replace
80	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  parent);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  parent);	  int    numStubs    =    getStubsForUndeclaredProperties(nameMap);    	non-compiled	[CE]  not  a  statement	49	None	replace
81	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(propAlias);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(propAlias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(propAlias);	  int    numStubs    =    getStubsForUndeclaredProperties(nameMap);    	non-compiled	[CE]  not  a  statement	49	None	replace
82	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(alias);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(alias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(alias);	  int    numStubs    =    getStubsForUndeclaredProperties(nameMap);    	non-compiled	[CE]  not  a  statement	49	None	replace
83	[BUG]  [BUGGY]  int  numStubs  =  parent.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.lastIndexOf('.')+  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.lastIndexOf('.')+  1;	  int    numStubs    =    n.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	61	None	replace
84	[BUG]  [BUGGY]  int  numStubs  =  n.getIndexOf('.')+  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.getIndexOf('.')+  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.getIndexOf('.')+  1;	  int    numStubs    =    n.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	61	None	replace
85	[BUG]  [BUGGY]  int  numStubs  =  n.lastIndexOf('.')+  2;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.lastIndexOf('.')+  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.lastIndexOf('.')+  2;	  int    numStubs    =    n.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	61	None	replace
86	[BUG]  [BUGGY]  int  numStubs  =  n.lastIndexOf('.')/  1;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.lastIndexOf('.')/  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.lastIndexOf('.')/  1;	  int    numStubs    =    n.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	61	None	replace
87	[BUG]  [BUGGY]  int  numStubs  =  n.indexOf('.')+  1;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.indexOf('.')+  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.indexOf('.')+  1;	  int    numStubs    =    n.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	61	None	replace
88	[BUG]  [BUGGY]  int  numStubs  =  n.name.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.lastIndexOf('.')+  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.lastIndexOf('.')+  1;	  int    numStubs    =    n.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	61	None	replace
89	[BUG]  [BUGGY]  int  numStubs  =  node.size();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  node.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  node.size();	  int    numStubs    =    parent.size()    -    1;    	non-compiled	[CE]  not  a  statement	25	None	replace
90	[BUG]  [BUGGY]  int  numStubs  =  n.name.size()  -  1;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.size()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.size()  -  1;	  int    numStubs    =    n.name.size();    	non-compiled	[CE]  not  a  statement	30	None	replace
91	[BUG]  [BUGGY]  int  numStubs  =  n.name.size()  +  1;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.size()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.size()  +  1;	  int    numStubs    =    n.name.size();    	non-compiled	[CE]  not  a  statement	30	None	replace
92	[BUG]  [BUGGY]  int  numStubs  =  parent.name.size();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.name.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.name.size();	  int    numStubs    =    n.name.size();    	non-compiled	[CE]  not  a  statement	30	None	replace
93	[BUG]  [BUGGY]  int  numStubs  =  n.name.lastIndexOf('.');  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.lastIndexOf('.');  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.lastIndexOf('.');	  int    numStubs    =    n.name.size();    	non-compiled	[CE]  not  a  statement	30	None	replace
94	[BUG]  [BUGGY]  int  numStubs  =  n.name.indexOf(alias)+  1;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.indexOf(alias)+  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.indexOf(alias)+  1;	  int    numStubs    =    n.name.size();    	non-compiled	[CE]  not  a  statement	30	None	replace
95	[BUG]  [BUGGY]  Integer  numStubs  =  1L;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Integer  numStubs  =  1L;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Integer  numStubs  =  1L;	  int    numStubs    =    1L;    	non-compiled	[CE]  not  a  statement	22	None	replace
96	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  addAfter);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(n.props,  addAfter);	  int    numStubs    =    Lists.newArrayList(n.props);    	non-compiled	[CE]  not  a  statement	17	None	replace
97	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  parent);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(n.props,  parent);	  int    numStubs    =    Lists.newArrayList(n.props);    	non-compiled	[CE]  not  a  statement	17	None	replace
98	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  numStubs);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  numStubs);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(n.props,  numStubs);	  int    numStubs    =    Lists.newArrayList(n.props);    	non-compiled	[CE]  not  a  statement	17	None	replace
99	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(parent.props);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(parent.props);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(parent.props);	  int    numStubs    =    Lists.newArrayList(n.props);    	non-compiled	[CE]  not  a  statement	17	None	replace
100	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props  +  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(n.props  +  1);	  int    numStubs    =    Lists.newArrayList(n.props);    	non-compiled	[CE]  not  a  statement	17	None	replace
101	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  propAlias);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  propAlias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(n.props,  propAlias);	  int    numStubs    =    Lists.newArrayList(n.props);    	non-compiled	[CE]  not  a  statement	17	None	replace
102	[BUG]  [BUGGY]  int  numStubs  =  addAfter.length()  -  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  addAfter.length()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  addAfter.length()  -  1;	  int    numStubs    =    addAfter.length();    	non-compiled	[CE]  not  a  statement	32	None	replace
103	[BUG]  [BUGGY]  int  numStubs  =  addAfter.length()  +  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  addAfter.length()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  addAfter.length()  +  1;	  int    numStubs    =    addAfter.length();    	non-compiled	[CE]  not  a  statement	32	None	replace
104	[BUG]  [BUGGY]  Node  p  =  n.getFirstChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  n.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  n.getFirstChild();	  Node    p    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	56	None	replace
105	[BUG]  [BUGGY]  Node  p  =  parent.getLastChild();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  parent.getLastChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  parent.getLastChild();	  Node    p    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	56	None	replace
106	[BUG]  [BUGGY]  Node  p  =  addAfter.getFirstChild();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  addAfter.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  addAfter.getFirstChild();	  Node    p    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	56	None	replace
107	[BUG]  [BUGGY]  Node  p  =  node.getFirstChild();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  node.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  node.getFirstChild();	  Node    p    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	56	None	replace
108	[BUG]  [BUGGY]  Node  p  =  parent.getNext();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  parent.getNext();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  parent.getNext();	  Node    p    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	56	None	replace
109	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n,  parent));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n,  parent));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isStatementBlock(n,  parent));	  Preconditions.checkArgument(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	55	None	replace
110	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n,  addAfter));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n,  addAfter));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isStatementBlock(n,  addAfter));	  Preconditions.checkArgument(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	55	None	replace
111	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(1);	  int    numStubs    =    Lists.newArrayList(0);    	non-compiled	[CE]  not  a  statement	16	None	replace
112	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(addAfter,  addAfter);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(addAfter,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(addAfter,  addAfter);	  int    numStubs    =    Lists.newArrayListWithCapacity(addAfter);    	non-compiled	[CE]  not  a  statement	39	None	replace
113	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(size);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(size);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(size);	  int    numStubs    =    Lists.newArrayListWithCapacity(addAfter);    	non-compiled	[CE]  not  a  statement	39	None	replace
114	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(compiler);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(compiler);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(compiler);	  int    numStubs    =    Lists.newArrayListWithCapacity(addAfter);    	non-compiled	[CE]  not  a  statement	39	None	replace
115	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(0);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(0);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(0);	  int    numStubs    =    Lists.newArrayListWithCapacity(addAfter);    	non-compiled	[CE]  not  a  statement	39	None	replace
116	[BUG]  [BUGGY]  int  numStubs  =  nameMap.length()  +  1;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameMap.length()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameMap.length()  +  1;	  int    numStubs    =    nameMap.length();    	non-compiled	[CE]  not  a  statement	36	None	replace
117	[BUG]  [BUGGY]  int  numStubs  =  names.length();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  names.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  names.length();	  int    numStubs    =    nameMap.length();    	non-compiled	[CE]  not  a  statement	36	None	replace
118	[BUG]  [BUGGY]  int  numStubs  =  nameMap.length()  -  2;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameMap.length()  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameMap.length()  -  2;	  int    numStubs    =    nameMap.length();    	non-compiled	[CE]  not  a  statement	36	None	replace
119	[BUG]  [BUGGY]  int  numStubs  =  alias.length()  +  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  alias.length()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  alias.length()  +  1;	  int    numStubs    =    alias.length();    	non-compiled	[CE]  not  a  statement	46	None	replace
120	[BUG]  [BUGGY]  int  numStubs  =  alias.length()  -  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  alias.length()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  alias.length()  -  1;	  int    numStubs    =    alias.length();    	non-compiled	[CE]  not  a  statement	46	None	replace
121	[BUG]  [BUGGY]  int  numStubs  =  alias.length()  *  2;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  alias.length()  *  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  alias.length()  *  2;	  int    numStubs    =    alias.length();    	non-compiled	[CE]  not  a  statement	46	None	replace
122	[BUG]  [BUGGY]  int  numStubs  =  alias.length()  +  2;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  alias.length()  +  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  alias.length()  +  2;	  int    numStubs    =    alias.length();    	non-compiled	[CE]  not  a  statement	46	None	replace
123	[BUG]  [BUGGY]  int  numStubs  =  alias.length()  -  2;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  alias.length()  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  alias.length()  -  2;	  int    numStubs    =    alias.length();    	non-compiled	[CE]  not  a  statement	46	None	replace
124	[BUG]  [BUGGY]  int  numStubs  =  n.parent.size()  -  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.parent.size()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.parent.size()  -  1;	  int    numStubs    =    n.parent.size();    	non-compiled	[CE]  not  a  statement	27	None	replace
125	[BUG]  [BUGGY]  int  numStubs  =  n.parent.size()  +  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.parent.size()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.parent.size()  +  1;	  int    numStubs    =    n.parent.size();    	non-compiled	[CE]  not  a  statement	27	None	replace
126	[BUG]  [BUGGY]  int  numStubs  =  n.parent.size()  -  2;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.parent.size()  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.parent.size()  -  2;	  int    numStubs    =    n.parent.size();    	non-compiled	[CE]  not  a  statement	27	None	replace
127	[BUG]  [BUGGY]  int  numStubs  =  n.parent.size()  *  2;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.parent.size()  *  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.parent.size()  *  2;	  int    numStubs    =    n.parent.size();    	non-compiled	[CE]  not  a  statement	27	None	replace
128	[BUG]  [BUGGY]  int  numStubs  =  n.props.size();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.props.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.props.size();	  int    numStubs    =    n.parent.size();    	non-compiled	[CE]  not  a  statement	27	None	replace
129	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(size()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(size()  -  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(size()  -  1);	  int    numStubs    =    Lists.newArrayListWithCapacity(size());    	non-compiled	[CE]  not  a  statement	51	None	replace
130	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(size()  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(size()  +  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(size()  +  1);	  int    numStubs    =    Lists.newArrayListWithCapacity(size());    	non-compiled	[CE]  not  a  statement	51	None	replace
131	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(parent.size());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(parent.size());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(parent.size());	  int    numStubs    =    Lists.newArrayListWithCapacity(size());    	non-compiled	[CE]  not  a  statement	51	None	replace
132	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(size()  -  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(size()  -  2);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(size()  -  2);	  int    numStubs    =    Lists.newArrayListWithCapacity(size());    	non-compiled	[CE]  not  a  statement	51	None	replace
133	[BUG]  [BUGGY]  Node  p  =  n.getParent();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  n.getParent();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  n.getParent();	  Node    p    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	11	None	replace
134	[BUG]  [BUGGY]  Node  p  =  addAfter.getParent();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  addAfter.getParent();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  addAfter.getParent();	  Node    p    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	11	None	replace
135	[BUG]  [BUGGY]  Node  p  =  node.getParent();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  node.getParent();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  node.getParent();	  Node    p    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	11	None	replace
136	[BUG]  [BUGGY]  int  numStubs  =  addAfter.size()  -  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  addAfter.size()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  addAfter.size()  -  1;	  int    numStubs    =    addAfter.size();    	non-compiled	[CE]  not  a  statement	28	None	replace
137	[BUG]  [BUGGY]  int  numStubs  =  this.addAfter.size();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  this.addAfter.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  this.addAfter.size();	  int    numStubs    =    addAfter.size();    	non-compiled	[CE]  not  a  statement	28	None	replace
138	[BUG]  [BUGGY]  Name  n  =  parent.getLastChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  parent.getLastChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  parent.getLastChild();	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
139	[BUG]  [BUGGY]  Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  n;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  n;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  n;	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
140	[BUG]  [BUGGY]  Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  Node.newString(Token.NAME,  alias));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  Node.newString(Token.NAME,  alias));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  Node.newString(Token.NAME,  alias));	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
141	[BUG]  [BUGGY]  Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  Node.newString(Token.NAME,  alias);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  Node.newString(Token.NAME,  alias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  Node.newString(Token.NAME,  alias);	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
142	[BUG]  [BUGGY]  Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  Node.newString(Token.NAME);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  Node.newString(Token.NAME);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  parent.getType()  ==  Token.NAME?  parent.getFirstChild()  :  Node.newString(Token.NAME);	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
143	[BUG]  [BUGGY]  Name  n  =  parent.getType()  ==  Token.VAR?  parent.getFirstChild()  :  n;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  parent.getType()  ==  Token.VAR?  parent.getFirstChild()  :  n;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  parent.getType()  ==  Token.VAR?  parent.getFirstChild()  :  n;	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
144	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(compiler,  addAfter);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(compiler,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(compiler,  addAfter);	  int    numStubs    =    Lists.newArrayList(compiler);    	non-compiled	[CE]  not  a  statement	20	None	replace
145	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(compiler,  parent);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(compiler,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(compiler,  parent);	  int    numStubs    =    Lists.newArrayList(compiler);    	non-compiled	[CE]  not  a  statement	20	None	replace
146	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n,  parent);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n,  parent);	  int    numStubs    =    getStubsForUndeclaredProperties(n);    	non-compiled	[CE]  not  a  statement	59	None	replace
147	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n,  addAfter);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n,  addAfter);	  int    numStubs    =    getStubsForUndeclaredProperties(n);    	non-compiled	[CE]  not  a  statement	59	None	replace
148	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.props);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.props);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n.props);	  int    numStubs    =    getStubsForUndeclaredProperties(n);    	non-compiled	[CE]  not  a  statement	59	None	replace
149	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.parent);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n.parent);	  int    numStubs    =    getStubsForUndeclaredProperties(n);    	non-compiled	[CE]  not  a  statement	59	None	replace
150	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.cloneTree());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.cloneTree());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n.cloneTree());	  int    numStubs    =    getStubsForUndeclaredProperties(n);    	non-compiled	[CE]  not  a  statement	59	None	replace
151	[BUG]  [BUGGY]  int  numStubs  =  n.numStubs;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.numStubs;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.numStubs;	  int    numStubs    =    parent.numStubs;    	non-compiled	[CE]  not  a  statement	23	None	replace
152	[BUG]  [BUGGY]  int  numStubs  =  parent.numStubs  -  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.numStubs  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.numStubs  -  1;	  int    numStubs    =    parent.numStubs;    	non-compiled	[CE]  not  a  statement	23	None	replace
153	[BUG]  [BUGGY]  int  numStubs  =  parent.numStubs  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.numStubs  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.numStubs  +  1;	  int    numStubs    =    parent.numStubs;    	non-compiled	[CE]  not  a  statement	23	None	replace
154	[BUG]  [BUGGY]  int  numStubs  =  addAfter.numStubs;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  addAfter.numStubs;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  addAfter.numStubs;	  int    numStubs    =    parent.numStubs;    	non-compiled	[CE]  not  a  statement	23	None	replace
155	[BUG]  [BUGGY]  int  numStubs  =  parent.numStubs  *  2;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.numStubs  *  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.numStubs  *  2;	  int    numStubs    =    parent.numStubs;    	non-compiled	[CE]  not  a  statement	23	None	replace
156	[BUG]  [BUGGY]  double  numStubs  =  0L;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  double  numStubs  =  0L;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	double  numStubs  =  0L;	  float    numStubs    =    0L;    	non-compiled	[CE]  not  a  statement	47	None	replace
157	[BUG]  [BUGGY]  double  numStubs  =  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  double  numStubs  =  0;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	double  numStubs  =  0;	  float    numStubs    =    0L;    	non-compiled	[CE]  not  a  statement	47	None	replace
158	[BUG]  [BUGGY]  float  numStubs  =  0;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  float  numStubs  =  0;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	float  numStubs  =  0;	  float    numStubs    =    0L;    	non-compiled	[CE]  not  a  statement	47	None	replace
159	[BUG]  [BUGGY]  long  numStubs  =  0L;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  long  numStubs  =  0L;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	long  numStubs  =  0L;	  float    numStubs    =    0L;    	non-compiled	[CE]  not  a  statement	47	None	replace
160	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(nameNode);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(nameNode);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(nameNode);	  int    numStubs    =    getStubsForUndeclaredProperties(parent);    	non-compiled	[CE]  not  a  statement	5	None	replace
161	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(parent,  addAfter);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(parent,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(parent,  addAfter);	  int    numStubs    =    getStubsForUndeclaredProperties(parent);    	non-compiled	[CE]  not  a  statement	5	None	replace
162	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  parent);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  propAlias,  parent);	  Node    newVar    =    Node.newString(Token.NAME,    propAlias);    	non-compiled	[CE]  not  a  statement	10	None	replace
163	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  numStubs);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  numStubs);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  propAlias,  numStubs);	  Node    newVar    =    Node.newString(Token.NAME,    propAlias);    	non-compiled	[CE]  not  a  statement	10	None	replace
164	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  addAfter);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  propAlias,  addAfter);	  Node    newVar    =    Node.newString(Token.NAME,    propAlias);    	non-compiled	[CE]  not  a  statement	10	None	replace
165	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  nameNode);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  nameNode);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  propAlias,  nameNode);	  Node    newVar    =    Node.newString(Token.NAME,    propAlias);    	non-compiled	[CE]  not  a  statement	10	None	replace
166	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties);	  Node    newVar    =    Node.newString(Token.NAME,    propAlias);    	non-compiled	[CE]  not  a  statement	10	None	replace
167	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().length  -  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().length  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties().length  -  1;	  int    numStubs    =    getStubsForUndeclaredProperties().length;    	non-compiled	[CE]  not  a  statement	4	None	replace
168	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().length  +  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().length  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties().length  +  1;	  int    numStubs    =    getStubsForUndeclaredProperties().length;    	non-compiled	[CE]  not  a  statement	4	None	replace
169	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().length  -  2;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().length  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties().length  -  2;	  int    numStubs    =    getStubsForUndeclaredProperties().length;    	non-compiled	[CE]  not  a  statement	4	None	replace
170	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().length  *  2;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().length  *  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties().length  *  2;	  int    numStubs    =    getStubsForUndeclaredProperties().length;    	non-compiled	[CE]  not  a  statement	4	None	replace
171	[BUG]  [BUGGY]  int  numStubs  =  nameNode.size()  -  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameNode.size()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameNode.size()  -  1;	  int    numStubs    =    nameNode.size();    	non-compiled	[CE]  not  a  statement	41	None	replace
172	[BUG]  [BUGGY]  int  numStubs  =  nameNode.size()  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameNode.size()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameNode.size()  +  1;	  int    numStubs    =    nameNode.size();    	non-compiled	[CE]  not  a  statement	41	None	replace
173	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getChildCount();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameNode.getChildCount();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameNode.getChildCount();	  int    numStubs    =    nameNode.size();    	non-compiled	[CE]  not  a  statement	41	None	replace
174	[BUG]  [BUGGY]  Node  parent  =  n.getNext();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  parent  =  n.getNext();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  parent  =  n.getNext();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
175	[BUG]  [BUGGY]  Node  parent  =  n.getLastChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  parent  =  n.getLastChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  parent  =  n.getLastChild();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
176	[BUG]  [BUGGY]  Node  parent  =  parent.getParent();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  parent  =  parent.getParent();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  parent  =  parent.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
177	[BUG]  [BUGGY]  Node  parent  =  n.getFirstChild();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  parent  =  n.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  parent  =  n.getFirstChild();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
178	[BUG]  [BUGGY]  Node  parent  =  node.getParent();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  parent  =  node.getParent();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  parent  =  node.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
179	[BUG]  [BUGGY]  Node  parent  =  nameNode.getParent();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  parent  =  nameNode.getParent();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  parent  =  nameNode.getParent();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
180	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.size()  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.size()  -  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.size()  -  1);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.size());    	non-compiled	[CE]  not  a  statement	52	None	replace
181	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props.size());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props.size());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.props.size());	  int    numStubs    =    Lists.newArrayListWithCapacity(n.size());    	non-compiled	[CE]  not  a  statement	52	None	replace
182	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.size()  -  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.size()  -  2);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.size()  -  2);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.size());    	non-compiled	[CE]  not  a  statement	52	None	replace
183	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.size()  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.size()  +  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.size()  +  1);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.size());    	non-compiled	[CE]  not  a  statement	52	None	replace
184	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.getChildCount());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.getChildCount());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.getChildCount());	  int    numStubs    =    Lists.newArrayListWithCapacity(n.size());    	non-compiled	[CE]  not  a  statement	52	None	replace
185	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(nameMap.size());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(nameMap.size());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(nameMap.size());	  int    numStubs    =    Lists.newArrayListWithCapacity(n.size());    	non-compiled	[CE]  not  a  statement	52	None	replace
186	[BUG]  [BUGGY]  int  numStubs  =  n.name.length()  -  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.length()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.length()  -  1;	  int    numStubs    =    n.name.length();    	non-compiled	[CE]  not  a  statement	34	None	replace
187	[BUG]  [BUGGY]  int  numStubs  =  n.name.length()  +  1;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.length()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.length()  +  1;	  int    numStubs    =    n.name.length();    	non-compiled	[CE]  not  a  statement	34	None	replace
188	[BUG]  [BUGGY]  int  numStubs  =  parent.name.length();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.name.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.name.length();	  int    numStubs    =    n.name.length();    	non-compiled	[CE]  not  a  statement	34	None	replace
189	[BUG]  [BUGGY]  int  numStubs  =  n.name.length()  -  2;  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.length()  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.length()  -  2;	  int    numStubs    =    n.name.length();    	non-compiled	[CE]  not  a  statement	34	None	replace
190	[BUG]  [BUGGY]  int  numStubs  =  n.name.length()  *  2;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.length()  *  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.length()  *  2;	  int    numStubs    =    n.name.length();    	non-compiled	[CE]  not  a  statement	34	None	replace
191	[BUG]  [BUGGY]  int  numStubs  =  n.getName().length();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.getName().length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.getName().length();	  int    numStubs    =    n.name.length();    	non-compiled	[CE]  not  a  statement	34	None	replace
192	[BUG]  [BUGGY]  int  numStubs  =  names.size()  -  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  names.size()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  names.size()  -  1;	  int    numStubs    =    names.size();    	non-compiled	[CE]  not  a  statement	57	None	replace
193	[BUG]  [BUGGY]  int  numStubs  =  names.size()  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  names.size()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  names.size()  +  1;	  int    numStubs    =    names.size();    	non-compiled	[CE]  not  a  statement	57	None	replace
194	[BUG]  [BUGGY]  int  numStubs  =  n.names.size();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.names.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.names.size();	  int    numStubs    =    names.size();    	non-compiled	[CE]  not  a  statement	57	None	replace
195	[BUG]  [BUGGY]  int  numStubs  =  this.names.size();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  this.names.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  this.names.size();	  int    numStubs    =    names.size();    	non-compiled	[CE]  not  a  statement	57	None	replace
196	[BUG]  [BUGGY]  int  numStubs  =  parent.names.size();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.names.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.names.size();	  int    numStubs    =    names.size();    	non-compiled	[CE]  not  a  statement	57	None	replace
197	[BUG]  [BUGGY]  Integer  numStubs  =  parent.size();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Integer  numStubs  =  parent.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Integer  numStubs  =  parent.size();	  int    numStubs    =    parent.size()    +    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
198	[BUG]  [BUGGY]  int  numStubs  =  child.size();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  child.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  child.size();	  int    numStubs    =    parent.size()    +    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
199	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  *  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  *  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties()  *  1;	  int    numStubs    =    getStubsForUndeclaredProperties()    -    1;    	non-compiled	[CE]  not  a  statement	1	None	replace
200	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.name,  parent);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.name,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n.name,  parent);	  int    numStubs    =    getStubsForUndeclaredProperties(n.name);    	non-compiled	[CE]  not  a  statement	6	None	replace
201	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.name,  addAfter);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.name,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n.name,  addAfter);	  int    numStubs    =    getStubsForUndeclaredProperties(n.name);    	non-compiled	[CE]  not  a  statement	6	None	replace
202	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(parent.name);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(parent.name);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(parent.name);	  int    numStubs    =    getStubsForUndeclaredProperties(n.name);    	non-compiled	[CE]  not  a  statement	6	None	replace
203	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n,  parent.name);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n,  parent.name);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n,  parent.name);	  int    numStubs    =    getStubsForUndeclaredProperties(n.name);    	non-compiled	[CE]  not  a  statement	6	None	replace
204	[BUG]  [BUGGY]  int  numStubs  =  n.size()  -  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.size()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.size()  -  1;	  int    numStubs    =    n.size();    	non-compiled	[CE]  not  a  statement	24	None	replace
205	[BUG]  [BUGGY]  int  numStubs  =  n.numStubs();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.numStubs();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.numStubs();	  int    numStubs    =    n.size();    	non-compiled	[CE]  not  a  statement	24	None	replace
206	[BUG]  [BUGGY]  int  numStubs  =  n.size()  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.size()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.size()  +  1;	  int    numStubs    =    n.size();    	non-compiled	[CE]  not  a  statement	24	None	replace
207	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(propAlias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(propAlias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(propAlias);	  int    numStubs    =    Lists.newArrayList(nameMap);    	non-compiled	[CE]  not  a  statement	21	None	replace
208	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(nameMap,  addAfter);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(nameMap,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(nameMap,  addAfter);	  int    numStubs    =    Lists.newArrayList(nameMap);    	non-compiled	[CE]  not  a  statement	21	None	replace
209	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(globalNames);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(globalNames);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(globalNames);	  int    numStubs    =    Lists.newArrayList(nameMap);    	non-compiled	[CE]  not  a  statement	21	None	replace
210	[BUG]  [BUGGY]  Integer  numStubs;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Integer  numStubs;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Integer  numStubs;	  Integer    numStubs    =    0;    	non-compiled	[CE]  not  a  statement	14	None	replace
211	[BUG]  [BUGGY]  int  numStubs  =  2  +  parent.length();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  2  +  parent.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  2  +  parent.length();	  int    numStubs    =    2    +    addAfter.length();    	non-compiled	[CE]  not  a  statement	40	None	replace
212	[BUG]  [BUGGY]  int  numStubs  =  1  +  addAfter.length();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  1  +  addAfter.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  1  +  addAfter.length();	  int    numStubs    =    2    +    addAfter.length();    	non-compiled	[CE]  not  a  statement	40	None	replace
213	[BUG]  [BUGGY]  int  numStubs  =  2  *  addAfter.length();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  2  *  addAfter.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  2  *  addAfter.length();	  int    numStubs    =    2    +    addAfter.length();    	non-compiled	[CE]  not  a  statement	40	None	replace
214	[BUG]  [BUGGY]  int  numStubs  =  2  *  parent.length();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  2  *  parent.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  2  *  parent.length();	  int    numStubs    =    2    +    addAfter.length();    	non-compiled	[CE]  not  a  statement	40	None	replace
215	[BUG]  [BUGGY]  int  numStubs  =  3  +  addAfter.length();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  3  +  addAfter.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  3  +  addAfter.length();	  int    numStubs    =    2    +    addAfter.length();    	non-compiled	[CE]  not  a  statement	40	None	replace
216	[BUG]  [BUGGY]  int  numStubs  =  2  +  nameMap.length();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  2  +  nameMap.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  2  +  nameMap.length();	  int    numStubs    =    2    +    addAfter.length();    	non-compiled	[CE]  not  a  statement	40	None	replace
217	[BUG]  [BUGGY]  Integer  numStubs  =  getStubsForUndeclaredProperties();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Integer  numStubs  =  getStubsForUndeclaredProperties();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Integer  numStubs  =  getStubsForUndeclaredProperties();	  int    numStubs    =    getStubsForUndeclaredProperties()    +    1;    	non-compiled	[CE]  not  a  statement	3	None	replace
218	[BUG]  [BUGGY]  Node  props  =  n.getParent();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  props  =  n.getParent();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  props  =  n.getParent();	  Node    props    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	13	None	replace
219	[BUG]  [BUGGY]  Node  props  =  parent.getProp(Node.SOURCENAME_PROP);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  props  =  parent.getProp(Node.SOURCENAME_PROP);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  props  =  parent.getProp(Node.SOURCENAME_PROP);	  Node    props    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	13	None	replace
220	[BUG]  [BUGGY]  Node  props  =  parent.getNext();  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  props  =  parent.getNext();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  props  =  parent.getNext();	  Node    props    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	13	None	replace
221	[BUG]  [BUGGY]  Node  props  =  parent.getLastChild();  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  props  =  parent.getLastChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  props  =  parent.getLastChild();	  Node    props    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	13	None	replace
222	[BUG]  [BUGGY]  Node  props  =  parent.getFirstChild();  [CE]  not  a  statement  [FE]                                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  props  =  parent.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  props  =  parent.getFirstChild();	  Node    props    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	13	None	replace
223	[BUG]  [BUGGY]  Node  props  =  parent.getProp(Node.SOURCEFILE_PROP);  [CE]  not  a  statement  [FE]                                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  props  =  parent.getProp(Node.SOURCEFILE_PROP);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  props  =  parent.getProp(Node.SOURCEFILE_PROP);	  Node    props    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	13	None	replace
224	[BUG]  [BUGGY]  int  numStubs  =  n.length()  -  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.length()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.length()  -  1;	  int    numStubs    =    n.length();    	non-compiled	[CE]  not  a  statement	31	None	replace
225	[BUG]  [BUGGY]  int  numStubs  =  n.length()  +  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.length()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.length()  +  1;	  int    numStubs    =    n.length();    	non-compiled	[CE]  not  a  statement	31	None	replace
226	[BUG]  [BUGGY]  int  numStubs  =  n.getLength();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.getLength();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.getLength();	  int    numStubs    =    n.length();    	non-compiled	[CE]  not  a  statement	31	None	replace
227	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(parent,  addAfter);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(parent,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(parent,  addAfter);	  int    numStubs    =    Lists.newArrayListWithCapacity(parent);    	non-compiled	[CE]  not  a  statement	38	None	replace
228	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(alias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(alias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(alias);	  int    numStubs    =    Lists.newArrayListWithCapacity(parent);    	non-compiled	[CE]  not  a  statement	38	None	replace
229	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n);	  int    numStubs    =    Lists.newArrayListWithCapacity(parent);    	non-compiled	[CE]  not  a  statement	38	None	replace
230	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(nameMap);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(nameMap);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(nameMap);	  int    numStubs    =    Lists.newArrayListWithCapacity(parent);    	non-compiled	[CE]  not  a  statement	38	None	replace
231	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().size()  -  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().size()  -  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties().size()  -  1;	  int    numStubs    =    getStubsForUndeclaredProperties().size();    	non-compiled	[CE]  not  a  statement	2	None	replace
232	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().size()  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().size()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties().size()  +  1;	  int    numStubs    =    getStubsForUndeclaredProperties().size();    	non-compiled	[CE]  not  a  statement	2	None	replace
233	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().size()  *  2;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().size()  *  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties().size()  *  2;	  int    numStubs    =    getStubsForUndeclaredProperties().size();    	non-compiled	[CE]  not  a  statement	2	None	replace
234	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().size()  -  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties().size()  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties().size()  -  2;	  int    numStubs    =    getStubsForUndeclaredProperties().size();    	non-compiled	[CE]  not  a  statement	2	None	replace
235	[BUG]  [BUGGY]  int  numStubs  =  name.length();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  name.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  name.length();	  int    numStubs    =    addAfter.length();    	non-compiled	[CE]  not  a  statement	32	None	replace
236	[BUG]  [BUGGY]  Preconditions.checkNotNull(parent);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkNotNull(parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkNotNull(parent);	  Preconditions.checkArgument(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	55	None	replace
237	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(2);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(2);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(2);	  int    numStubs    =    Lists.newArrayListWithCapacity(size());    	non-compiled	[CE]  not  a  statement	51	None	replace
238	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(addAfter.size());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(addAfter.size());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(addAfter.size());	  int    numStubs    =    Lists.newArrayListWithCapacity(size());    	non-compiled	[CE]  not  a  statement	51	None	replace
239	[BUG]  [BUGGY]  int  numStubs  =  n.length()  *  2;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.length()  *  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.length()  *  2;	  int    numStubs    =    n.length();    	non-compiled	[CE]  not  a  statement	31	None	replace
240	[BUG]  [BUGGY]  int  numStubs  =  parents.size();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parents.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parents.size();	  int    numStubs    =    parent.size()    +    1;    	non-compiled	[CE]  not  a  statement	29	None	replace
241	[BUG]  [BUGGY]  int  numStubs  =  n.lastIndexOf( "- "  +  parent);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.lastIndexOf( "- "  +  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.lastIndexOf( "- "  +  parent);	  int    numStubs    =    n.lastIndexOf(   "-   ");    	non-compiled	[CE]  not  a  statement	62	None	replace
242	[BUG]  [BUGGY]  int  numStubs  =  parent.indexOf( "- ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.indexOf( "- ");  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.indexOf( "- ");	  int    numStubs    =    n.lastIndexOf(   "-   ");    	non-compiled	[CE]  not  a  statement	62	None	replace
243	[BUG]  [BUGGY]  int  numStubs  =  NodeUtil.numStubs;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  NodeUtil.numStubs;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  NodeUtil.numStubs;	  int    numStubs    =    parent.numStubs;    	non-compiled	[CE]  not  a  statement	23	None	replace
244	[BUG]  [BUGGY]  int  numStubs  =  nameNode.numStubs;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameNode.numStubs;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameNode.numStubs;	  int    numStubs    =    parent.numStubs;    	non-compiled	[CE]  not  a  statement	23	None	replace
245	[BUG]  [BUGGY]  int  numStubs  =  this.nameMap.length();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  this.nameMap.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  this.nameMap.length();	  int    numStubs    =    nameMap.length();    	non-compiled	[CE]  not  a  statement	36	None	replace
246	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  nameNode);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  nameNode);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  nameNode);	  int    numStubs    =    getStubsForUndeclaredProperties(nameMap);    	non-compiled	[CE]  not  a  statement	49	None	replace
247	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(parent,  n.name);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(parent,  n.name);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(parent,  n.name);	  int    numStubs    =    getStubsForUndeclaredProperties(n.name);    	non-compiled	[CE]  not  a  statement	6	None	replace
248	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props)+  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props)+  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.props)+  1;	  int    numStubs    =    Lists.newArrayListWithCapacity(n.props);    	non-compiled	[CE]  not  a  statement	50	None	replace
249	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(nameMap,  nameNode);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(nameMap,  nameNode);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(nameMap,  nameNode);	  int    numStubs    =    Lists.newArrayList(nameMap);    	non-compiled	[CE]  not  a  statement	21	None	replace
250	[BUG]  [BUGGY]  Node  p  =  parent.getPrevious();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  parent.getPrevious();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  parent.getPrevious();	  Node    p    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	11	None	replace
251	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  alias,  nameNode);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  alias,  nameNode);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  alias,  nameNode);	  Node    newVar    =    Node.newString(Token.NAME,    alias);    	non-compiled	[CE]  not  a  statement	12	None	replace
252	[BUG]  [BUGGY]  int  numStubs  =  this.nameMap.size();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  this.nameMap.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  this.nameMap.size();	  int    numStubs    =    names.size();    	non-compiled	[CE]  not  a  statement	57	None	replace
253	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n,  parent.size());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n,  parent.size());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n,  parent.size());	  int    numStubs    =    Lists.newArrayListWithCapacity(n.size());    	non-compiled	[CE]  not  a  statement	52	None	replace
254	[BUG]  [BUGGY]  int  numStubs  =  2  +  nameNode.length();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  2  +  nameNode.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  2  +  nameNode.length();	  int    numStubs    =    2    +    addAfter.length();    	non-compiled	[CE]  not  a  statement	40	None	replace
255	[BUG]  [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties().size();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties().size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.getStubsForUndeclaredProperties().size();	  int    numStubs    =    getStubsForUndeclaredProperties().size();    	non-compiled	[CE]  not  a  statement	2	None	replace
256	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(parent));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(parent));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(parent));	  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));    	non-compiled	[CE]  not  a  statement	42	None	replace
257	[BUG]  [BUGGY]  float  numStubs  =  0f;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  float  numStubs  =  0f;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	float  numStubs  =  0f;	  float    numStubs    =    0L;    	non-compiled	[CE]  not  a  statement	47	None	replace
258	[BUG]  [BUGGY]  int  numStubs  =  1)  {  nameMap.put(alias,  addAfter);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  1)  {  nameMap.put(alias,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  1)  {  nameMap.put(alias,  addAfter);	  int    numStubs    =    1L;    	non-compiled	[CE]  not  a  statement	22	None	replace
259	[BUG]  [BUGGY]  int  numStubs  =  1)  {  parent.addChildToFront(newVar);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  1)  {  parent.addChildToFront(newVar);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  1)  {  parent.addChildToFront(newVar);	  int    numStubs    =    1L;    	non-compiled	[CE]  not  a  statement	22	None	replace
260	[BUG]  [BUGGY]  int  numStubs  =  1)  {  nameMap.put(alias,  newVar);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  1)  {  nameMap.put(alias,  newVar);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  1)  {  nameMap.put(alias,  newVar);	  int    numStubs    =    1L;    	non-compiled	[CE]  not  a  statement	22	None	replace
261	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  *  2  +  addAfter;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties()  *  2  +  addAfter;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties()  *  2  +  addAfter;	  int    numStubs    =    getStubsForUndeclaredProperties()    *    2;    	non-compiled	[CE]  not  a  statement	48	None	replace
262	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(addAfter  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(addAfter  +  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(addAfter  +  1);	  int    numStubs    =    Lists.newArrayList(addAfter);    	non-compiled	[CE]  not  a  statement	18	None	replace
263	[BUG]  [BUGGY]  int  numStubs  =  parent.indexOf('.');  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.indexOf('.');  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.indexOf('.');	  int    numStubs    =    n.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	60	None	replace
264	[BUG]  [BUGGY]  Integer  numStubs  =  2;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Integer  numStubs  =  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Integer  numStubs  =  2;	  Integer    numStubs    =    0;    	non-compiled	[CE]  not  a  statement	14	None	replace
265	[BUG]  [BUGGY]  int  numStubs  =  n.parent.length();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.parent.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.parent.length();	  int    numStubs    =    n.name.length();    	non-compiled	[CE]  not  a  statement	34	None	replace
266	[BUG]  [BUGGY]  int  numStubs  =  n.parent.name.length();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.parent.name.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.parent.name.length();	  int    numStubs    =    n.name.length();    	non-compiled	[CE]  not  a  statement	34	None	replace
267	[BUG]  [BUGGY]  int  numStubs  =  parent.indexOf('.')+  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.indexOf('.')+  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.indexOf('.')+  1;	  int    numStubs    =    n.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	61	None	replace
268	[BUG]  [BUGGY]  Node  n  =  parent.removeFirstChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.removeFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.removeFirstChild();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	7	None	replace
269	[BUG]  [BUGGY]  Node  n  =  node.getFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  node.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  node.getFirstChild();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	7	None	replace
270	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(addAfter.size());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(addAfter.size());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(addAfter.size());	  int    numStubs    =    Lists.newArrayList(size());    	non-compiled	[CE]  not  a  statement	19	None	replace
271	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(parent.size());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(parent.size());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(parent.size());	  int    numStubs    =    Lists.newArrayList(size());    	non-compiled	[CE]  not  a  statement	19	None	replace
272	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(addAfter  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(addAfter  +  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(addAfter  +  1);	  int    numStubs    =    Lists.newArrayListWithCapacity(addAfter);    	non-compiled	[CE]  not  a  statement	39	None	replace
273	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(addAfter,  parent);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(addAfter,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(addAfter,  parent);	  int    numStubs    =    Lists.newArrayListWithCapacity(addAfter);    	non-compiled	[CE]  not  a  statement	39	None	replace
274	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent),  numStubs);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent),  numStubs);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent),  numStubs);	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	44	None	replace
275	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent,  alias));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent,  alias));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent,  alias));	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	44	None	replace
276	[BUG]  [BUGGY]  int  numStubs  =  n.size()  -  2;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.size()  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.size()  -  2;	  int    numStubs    =    n.size();    	non-compiled	[CE]  not  a  statement	24	None	replace
277	[BUG]  [BUGGY]  int  numStubs  =  n.getChildCount();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.getChildCount();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.getChildCount();	  int    numStubs    =    n.size();    	non-compiled	[CE]  not  a  statement	24	None	replace
278	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  n);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  n);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  propAlias,  n);	  Node    newVar    =    Node.newString(Token.NAME,    propAlias);    	non-compiled	[CE]  not  a  statement	10	None	replace
279	[BUG]  [BUGGY]  Node  props  =  parent.getProp(Node.SOURCENAME_PROP,  alias);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  props  =  parent.getProp(Node.SOURCENAME_PROP,  alias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  props  =  parent.getProp(Node.SOURCENAME_PROP,  alias);	  Node    props    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	13	None	replace
280	[BUG]  [BUGGY]  int  numStubs  =  this.nameNode.size();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  this.nameNode.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  this.nameNode.size();	  int    numStubs    =    nameNode.size();    	non-compiled	[CE]  not  a  statement	41	None	replace
281	[BUG]  [BUGGY]  int  numStubs  =  this.nameNode.length();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  this.nameNode.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  this.nameNode.length();	  int    numStubs    =    nameNode.length();    	non-compiled	[CE]  not  a  statement	45	None	replace
282	[BUG]  [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties(n);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties(n);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.getStubsForUndeclaredProperties(n);	  int    numStubs    =    getStubsForUndeclaredProperties(n);    	non-compiled	[CE]  not  a  statement	59	None	replace
283	[BUG]  [BUGGY]  Node  parent  =  n.getOwnerFunction();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  parent  =  n.getOwnerFunction();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  parent  =  n.getOwnerFunction();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
284	[BUG]  [BUGGY]  Node  n  =  parent.cloneTree();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.cloneTree();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.cloneTree();	  Node    n    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
285	[BUG]  [BUGGY]  Node  n  =  parent.getPrevious();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.getPrevious();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.getPrevious();	  Node    n    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
286	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  alias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  alias));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  alias));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	54	None	replace
287	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent),  addAfter);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent),  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(parent),  addAfter);	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	54	None	replace
288	[BUG]  [BUGGY]  Name  n  =  node.getFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  node.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  node.getFirstChild();	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
289	[BUG]  [BUGGY]  Name  n  =  nameNode.getFirstChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  nameNode.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  nameNode.getFirstChild();	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
290	[BUG]  [BUGGY]  Name  n  =  parent.removeFirstChild();  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  parent.removeFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  parent.removeFirstChild();	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
291	[BUG]  [BUGGY]  Name  n  =  parent.getNext();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  parent.getNext();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  parent.getNext();	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
292	[BUG]  [BUGGY]  Name  n  =  parent.getFirstChild()  +  1;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  parent.getFirstChild()  +  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  parent.getFirstChild()  +  1;	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
293	[BUG]  [BUGGY]  int  numStubs  =  nameNode.getStubsForUndeclaredProperties();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  nameNode.getStubsForUndeclaredProperties();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  nameNode.getStubsForUndeclaredProperties();	  int    numStubs    =    parent.getStubsForUndeclaredProperties();    	non-compiled	[CE]  not  a  statement	58	None	replace
294	[BUG]  [BUGGY]  int  numStubs  =  addAfter.getStubsForUndeclaredProperties();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  addAfter.getStubsForUndeclaredProperties();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  addAfter.getStubsForUndeclaredProperties();	  int    numStubs    =    parent.getStubsForUndeclaredProperties();    	non-compiled	[CE]  not  a  statement	58	None	replace
295	[BUG]  [BUGGY]  int  numStubs  =  node.getStubsForUndeclaredProperties();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  node.getStubsForUndeclaredProperties();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  node.getStubsForUndeclaredProperties();	  int    numStubs    =    parent.getStubsForUndeclaredProperties();    	non-compiled	[CE]  not  a  statement	58	None	replace
296	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(labels);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(labels);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(labels);	  int    numStubs    =    Lists.newArrayListWithCapacity(parent);    	non-compiled	[CE]  not  a  statement	38	None	replace
297	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(len);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(len);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(len);	  int    numStubs    =    Lists.newArrayListWithCapacity(addAfter);    	non-compiled	[CE]  not  a  statement	39	None	replace
298	[BUG]  [BUGGY]  int  numStubs  =  4  +  addAfter.length();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  4  +  addAfter.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  4  +  addAfter.length();	  int    numStubs    =    2    +    addAfter.length();    	non-compiled	[CE]  not  a  statement	40	None	replace
299	[BUG]  [BUGGY]  Node  props  =  n.getNext();  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  props  =  n.getNext();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  props  =  n.getNext();	  Node    props    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	13	None	replace
300	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  alias,  propAlias);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  alias,  propAlias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  alias,  propAlias);	  Node    newVar    =    Node.newString(Token.NAME,    alias);    	non-compiled	[CE]  not  a  statement	12	None	replace
301	[BUG]  [BUGGY]  int  numStubs  =  n.numStubs.length();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.numStubs.length();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.numStubs.length();	  int    numStubs    =    addAfter.length();    	non-compiled	[CE]  not  a  statement	32	None	replace
302	[BUG]  [BUGGY]  int  numStubs  =  n.getStubs();  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.getStubs();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.getStubs();	  int    numStubs    =    addAfter.length();    	non-compiled	[CE]  not  a  statement	32	None	replace
303	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent,  n));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent,  n));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent,  n));	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	44	None	replace
304	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isLiteralValue(parent));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isLiteralValue(parent));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isLiteralValue(parent));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	54	None	replace
305	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.name,  alias);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.name,  alias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n.name,  alias);	  int    numStubs    =    getStubsForUndeclaredProperties(n.name);    	non-compiled	[CE]  not  a  statement	6	None	replace
306	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(alias,  n.name);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(alias,  n.name);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(alias,  n.name);	  int    numStubs    =    getStubsForUndeclaredProperties(n.name);    	non-compiled	[CE]  not  a  statement	6	None	replace
307	[BUG]  [BUGGY]  int  numStubs  =  n.length()  -  2;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.length()  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.length()  -  2;	  int    numStubs    =    n.length();    	non-compiled	[CE]  not  a  statement	31	None	replace
308	[BUG]  [BUGGY]  Node  n  =  parent.replaceChild(n,  Node.newString(Token.NAME,  alias));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.replaceChild(n,  Node.newString(Token.NAME,  alias));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.replaceChild(n,  Node.newString(Token.NAME,  alias));	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	7	None	replace
309	[BUG]  [BUGGY]  Node  n  =  this.parent.getFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  this.parent.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  this.parent.getFirstChild();	  Node    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	7	None	replace
310	[BUG]  [BUGGY]  int  numStubs  =  n.name.lastIndexOf( "$$ ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.name.lastIndexOf( "$$ ");  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.name.lastIndexOf( "$$ ");	  int    numStubs    =    n.name.size();    	non-compiled	[CE]  not  a  statement	30	None	replace
311	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  n.type);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  n.type);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(n.props,  n.type);	  int    numStubs    =    Lists.newArrayList(n.props);    	non-compiled	[CE]  not  a  statement	17	None	replace
312	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  n.name);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(n.props,  n.name);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(n.props,  n.name);	  int    numStubs    =    Lists.newArrayList(n.props);    	non-compiled	[CE]  not  a  statement	17	None	replace
313	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n,  parent);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n,  parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n,  parent);	  int    numStubs    =    Lists.newArrayListWithCapacity(parent);    	non-compiled	[CE]  not  a  statement	38	None	replace
314	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.parent);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.parent);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.parent);	  int    numStubs    =    Lists.newArrayListWithCapacity(parent);    	non-compiled	[CE]  not  a  statement	38	None	replace
315	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(labels);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(labels);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(labels);	  int    numStubs    =    Lists.newArrayList(addAfter);    	non-compiled	[CE]  not  a  statement	18	None	replace
316	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(n.size()  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(n.size()  -  1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(n.size()  -  1);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.size());    	non-compiled	[CE]  not  a  statement	52	None	replace
317	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  n.name);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias,  n.name);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  newVar  =  Node.newString(Token.NAME,  propAlias,  n.name);	  Node    newVar    =    Node.newString(Token.NAME,    propAlias);    	non-compiled	[CE]  not  a  statement	10	None	replace
318	[BUG]  [BUGGY]  int  numStubs  =  1  <  <  LAST_VALID_DECLARED_WARNING;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  1  <  <  LAST_VALID_DECLARED_WARNING;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  1  <  <  LAST_VALID_DECLARED_WARNING;	  int    numStubs    =    1L;    	non-compiled	[CE]  not  a  statement	22	None	replace
319	[BUG]  [BUGGY]  int  numStubs  =  1  <  <  LAST_VALID_THIS?  1L  :  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  1  <  <  LAST_VALID_THIS?  1L  :  0;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  1  <  <  LAST_VALID_THIS?  1L  :  0;	  int    numStubs    =    1L;    	non-compiled	[CE]  not  a  statement	22	None	replace
320	[BUG]  [BUGGY]  int  numStubs  =  1  <  <  LAST_VALID_THIS;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  1  <  <  LAST_VALID_THIS;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  1  <  <  LAST_VALID_THIS;	  int    numStubs    =    1L;    	non-compiled	[CE]  not  a  statement	22	None	replace
321	[BUG]  [BUGGY]  int  numStubs  =  1  <  <  LAST_VALID_THIS?  1  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  1  <  <  LAST_VALID_THIS?  1  :  0;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  1  <  <  LAST_VALID_THIS?  1  :  0;	  int    numStubs    =    1L;    	non-compiled	[CE]  not  a  statement	22	None	replace
322	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  n.type);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  n.type);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  n.type);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.props);    	non-compiled	[CE]  not  a  statement	50	None	replace
323	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  0);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayListWithCapacity(n.props,  0);	  int    numStubs    =    Lists.newArrayListWithCapacity(n.props);    	non-compiled	[CE]  not  a  statement	50	None	replace
324	[BUG]  [BUGGY]  int  numStubs  =  this.parent.size();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  this.parent.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  this.parent.size();	  int    numStubs    =    parent.size()    -    1;    	non-compiled	[CE]  not  a  statement	25	None	replace
325	[BUG]  [BUGGY]  Node  p  =  parent.removeFirstChild();  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  parent.removeFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  parent.removeFirstChild();	  Node    p    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	11	None	replace
326	[BUG]  [BUGGY]  Node  p  =  addAfter.getNext();  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  p  =  addAfter.getNext();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  p  =  addAfter.getNext();	  Node    p    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	11	None	replace
327	[BUG]  [BUGGY]  int  numStubs  =  findStubsForUndeclaredProperties();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  findStubsForUndeclaredProperties();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  findStubsForUndeclaredProperties();	  int    numStubs    =    getStubsForUndeclaredProperties()    +    1;    	non-compiled	[CE]  not  a  statement	3	None	replace
328	[BUG]  [BUGGY]  int  numStubs  =  Lists.newArrayList(8);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  Lists.newArrayList(8);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  Lists.newArrayList(8);	  int    numStubs    =    Lists.newArrayList(0);    	non-compiled	[CE]  not  a  statement	16	None	replace
329	[BUG]  [BUGGY]  int  numStubs  =  n.lastIndexOf( "- "  +  numStubs);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.lastIndexOf( "- "  +  numStubs);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.lastIndexOf( "- "  +  numStubs);	  int    numStubs    =    n.lastIndexOf(   "-   ");    	non-compiled	[CE]  not  a  statement	62	None	replace
330	[BUG]  [BUGGY]  int  numStubs  =  n.lastIndexOf( "- ",  -1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.lastIndexOf( "- ",  -1);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.lastIndexOf( "- ",  -1);	  int    numStubs    =    n.lastIndexOf(   "-   ");    	non-compiled	[CE]  not  a  statement	62	None	replace
331	[BUG]  [BUGGY]  int  numStubs  =  alias.lastIndexOf('.');  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  alias.lastIndexOf('.');  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  alias.lastIndexOf('.');	  int    numStubs    =    alias.length();    	non-compiled	[CE]  not  a  statement	46	None	replace
332	[BUG]  [BUGGY]  int  numStubs  =  n.lastIndexOf('.')-  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.lastIndexOf('.')-  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.lastIndexOf('.')-  1;	  int    numStubs    =    n.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	61	None	replace
333	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.getLastChild());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.getLastChild());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n.getLastChild());	  int    numStubs    =    getStubsForUndeclaredProperties(n);    	non-compiled	[CE]  not  a  statement	59	None	replace
334	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.getParent());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(n.getParent());  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(n.getParent());	  int    numStubs    =    getStubsForUndeclaredProperties(n);    	non-compiled	[CE]  not  a  statement	59	None	replace
335	[BUG]  [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties().length;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.getStubsForUndeclaredProperties().length;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.getStubsForUndeclaredProperties().length;	  int    numStubs    =    getStubsForUndeclaredProperties().length;    	non-compiled	[CE]  not  a  statement	4	None	replace
336	[BUG]  [BUGGY]  int  numStubs  =  parent.numStubs  -  2;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.numStubs  -  2;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.numStubs  -  2;	  int    numStubs    =    parent.numStubs;    	non-compiled	[CE]  not  a  statement	23	None	replace
337	[BUG]  [BUGGY]  int  numStubs  =  n.children.size();  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  n.children.size();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  n.children.size();	  int    numStubs    =    n.parent.size();    	non-compiled	[CE]  not  a  statement	27	None	replace
338	[BUG]  [BUGGY]  Name  n  =  n.getFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  n.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  n.getFirstChild();	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
339	[BUG]  [BUGGY]  Name  n  =  this.parent.getFirstChild();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Name  n  =  this.parent.getFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Name  n  =  this.parent.getFirstChild();	  Name    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
340	[BUG]  [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  alias);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  alias);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  getStubsForUndeclaredProperties(nameMap,  alias);	  int    numStubs    =    getStubsForUndeclaredProperties(nameMap);    	non-compiled	[CE]  not  a  statement	49	None	replace
341	[BUG]  [BUGGY]  int  numStubs  =  parent.lastIndexOf('.',  numStubs);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.lastIndexOf('.',  numStubs);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.lastIndexOf('.',  numStubs);	  int    numStubs    =    parent.length()    +    1;    	non-compiled	[CE]  not  a  statement	35	None	replace
342	[BUG]  [BUGGY]  int  numStubs  =  parent.lastIndexOf('/')+  1;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  int  numStubs  =  parent.lastIndexOf('/')+  1;  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	int  numStubs  =  parent.lastIndexOf('/')+  1;	  int    numStubs    =    parent.length()    +    1;    	non-compiled	[CE]  not  a  statement	35	None	replace
343	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isName(parent));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Preconditions.checkArgument(NodeUtil.isName(parent));  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Preconditions.checkArgument(NodeUtil.isName(parent));	  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));    	non-compiled	[CE]  not  a  statement	42	None	replace
344	[BUG]  [BUGGY]  Node  parent  =  n.removeFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  parent  =  n.removeFirstChild();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  parent  =  n.removeFirstChild();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
345	[BUG]  [BUGGY]  Node  parent  =  n.getParentNode();  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  parent  =  n.getParentNode();  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  parent  =  n.getParentNode();	  Node    parent    =    n.getParent();    	non-compiled	[CE]  not  a  statement	43	None	replace
346	[BUG]  [BUGGY]  Node  n  =  parent.replaceChild(n,  addAfter);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);      [BUGGY]  Node  n  =  parent.replaceChild(n,  addAfter);  [BUGGY]      if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	819	819	8	replace	Node  n  =  parent.replaceChild(n,  addAfter);	  Node    n    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
