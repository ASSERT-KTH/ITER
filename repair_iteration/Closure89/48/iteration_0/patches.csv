bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  [BUGGY]  }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root);	namespace  =  new  GlobalNamespace(compiler,  root);  	non-compiled	[CE]  illegal  start  of  type	98	None	replace
2	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externals,  root);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externals,  root);  [BUGGY]  }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externals,  root);	namespace  =  new  GlobalNamespace(compiler,  root);  	non-compiled	[CE]  illegal  start  of  type	98	None	replace
3	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  [BUGGY]  }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root);	namespace  =  new  GlobalNamespace(compiler,  root);  	non-compiled	[CE]  illegal  start  of  type	98	None	replace
4	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs);  [BUGGY]  }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs);	namespace  =  new  GlobalNamespace(compiler,  root);  	non-compiled	[CE]  illegal  start  of  type	98	None	replace
5	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  n);  [BUGGY]  }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  root,  n);	namespace  =  new  GlobalNamespace(compiler,  root);  	non-compiled	[CE]  illegal  start  of  type	98	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {  [BUGGY]    [BUGGY]  }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	  	namespace  =  new  GlobalNamespace(compiler,  root);  	non-compiled	[CE]  illegal  start  of  type	98	None	replace
7	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root);  [BUGGY]  }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root);	namespace  =  new  GlobalNamespace(compiler,  root);  	non-compiled	[CE]  illegal  start  of  type	98	None	replace
