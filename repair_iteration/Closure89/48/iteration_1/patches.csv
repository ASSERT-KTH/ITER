bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  root,  externs);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  root,  externs);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  root,  externs);	  Namespace    namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  NAMESPACE_REDEFINED_WARNING);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  NAMESPACE_REDEFINED_WARNING);	  Namespace    namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  UNSAFE_THIS);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  UNSAFE_THIS);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  UNSAFE_THIS);	  Namespace    namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  inlineAliases);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  inlineAliases);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  inlineAliases);	  Namespace    namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  globalNames);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  globalNames);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  globalNames);	  Namespace    namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  n);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  n);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  n);	  Namespace    namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  INVALID_NAMESPACE);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  INVALID_NAMESPACE);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  INVALID_NAMESPACE);	  Namespace    namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  externs);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  externs);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  root,  externs);	  namespace    =    new    GlobalNamespace(compiler,    externs);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  UNSAFE_THIS);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  UNSAFE_THIS);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root,  UNSAFE_THIS);	  namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  collapsePropertiesOnExternTypes);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  collapsePropertiesOnExternTypes);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root,  collapsePropertiesOnExternTypes);	  namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  inlineAliases);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  inlineAliases);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root,  inlineAliases);	  namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  globalNames);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  globalNames);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root,  globalNames);	  namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  n);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root,  n);	  namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  externals);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  externals);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  root,  externals);	  namespace    =    new    GlobalNamespace(compiler,    externals,    root);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  null);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root,  null);	  namespace    =    new    GlobalNamespace(compiler,    externals,    root);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root.cloneTree(),  externs);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root.cloneTree(),  externs);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  root.cloneTree(),  externs);	  namespace    =    new    GlobalNamespace(compiler,    externs.cloneTree(),    root);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  inlineAliases);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  inlineAliases);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  inlineAliases);	  namespace    =    new    GlobalNamespace(compiler,    externs.cloneTree(),    root);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  UNSAFE_THIS);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  UNSAFE_THIS);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  UNSAFE_THIS);	  namespace    =    new    GlobalNamespace(compiler,    externs.cloneTree(),    root);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  namespace);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  namespace);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  namespace);	  namespace    =    new    GlobalNamespace(compiler,    externs.cloneTree(),    root);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  parent);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  parent);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  parent);	  namespace    =    new    GlobalNamespace(compiler,    externs.cloneTree(),    root);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  n);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  n);	  namespace    =    new    GlobalNamespace(compiler,    root,    n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  UNSAFE_THIS);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  UNSAFE_THIS);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  root,  UNSAFE_THIS);	  namespace    =    new    GlobalNamespace(compiler,    root,    n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  n,  UNSAFE_THIS);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  n,  UNSAFE_THIS);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  root,  n,  UNSAFE_THIS);	  namespace    =    new    GlobalNamespace(compiler,    root,    n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  n,  inlineAliases);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  n,  inlineAliases);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  root,  n,  inlineAliases);	  namespace    =    new    GlobalNamespace(compiler,    root,    n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  Name  n  =  namespace.getNameForest();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Name  n  =  namespace.getNameForest();  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Name  n  =  namespace.getNameForest();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  Name  n  =  namespace.getName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Name  n  =  namespace.getName();  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Name  n  =  namespace.getName();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root.getFirstChild());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root.getFirstChild());  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root.getFirstChild());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  namespace.setName(n.getString());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace.setName(n.getString());  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace.setName(n.getString());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  root,  globalNames);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  root,  globalNames);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  root,  globalNames);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root.getLastChild());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root.getLastChild());  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root.getLastChild());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  namespace);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  namespace);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  namespace);	  Namespace    namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  UNSAFE_NAMESPACE_WARNING);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  UNSAFE_NAMESPACE_WARNING);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  UNSAFE_NAMESPACE_WARNING);	  Namespace    namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  NAMESPACE_REDEFINED_WARNING);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root,  NAMESPACE_REDEFINED_WARNING);	  namespace    =    new    GlobalNamespace(compiler,    externals,    root);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  namespace);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  namespace);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root,  namespace);	  namespace    =    new    GlobalNamespace(compiler,    externals,    root);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  INVALID_NAMESPACE);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  INVALID_NAMESPACE);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root,  INVALID_NAMESPACE);	  namespace    =    new    GlobalNamespace(compiler,    externs,    root);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs);	  namespace    =    new    GlobalNamespace(compiler,    externs);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
37	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  n,  NAMESPACE_REDEFINED_WARNING);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  n,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  root,  n,  NAMESPACE_REDEFINED_WARNING);	  namespace    =    new    GlobalNamespace(compiler,    root,    n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  n,  UNSAFE_NAMESPACE_WARNING);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  root,  n,  UNSAFE_NAMESPACE_WARNING);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  root,  n,  UNSAFE_NAMESPACE_WARNING);	  namespace    =    new    GlobalNamespace(compiler,    root,    n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  NAMESPACE_REDEFINED_WARNING);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  NAMESPACE_REDEFINED_WARNING);	  namespace    =    new    GlobalNamespace(compiler,    externs.cloneTree(),    root);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  INVALID_NAMESPACE);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  INVALID_NAMESPACE);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  INVALID_NAMESPACE);	  namespace    =    new    GlobalNamespace(compiler,    externs.cloneTree(),    root);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  namespace.addChildToBack(new  GlobalNamespace(compiler,  externs,  root));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace.addChildToBack(new  GlobalNamespace(compiler,  externs,  root));  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace.addChildToBack(new  GlobalNamespace(compiler,  externs,  root));	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  namespace.setNameForest(n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace.setNameForest(n);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace.setNameForest(n);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root.getParent());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root.getParent());  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	Namespace  namespace  =  new  GlobalNamespace(compiler,  externs,  root.getParent());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  INVALID_THIS);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs,  root,  INVALID_THIS);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs,  root,  INVALID_THIS);	  namespace    =    new    GlobalNamespace(compiler,    externals,    root);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  inlineAliases);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  inlineAliases);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  inlineAliases);	  namespace    =    new    GlobalNamespace(compiler,    externs.cloneTree(),    root);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  INVALID_THIS);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  GlobalNamespace  namespace;  if  (collapsePropertiesOnExternTypes)  {  namespace  =  new  GlobalNamespace(compiler,  externs,  root);  }  else  {    [BUGGY]  namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  INVALID_THIS);  [BUGGY]    }  if  (inlineAliases)  {  inlineAliases(namespace);  }  nameMap  =  namespace.getNameIndex();  globalNames  =  namespace.getNameForest();  checkNamespaces();  for  (Name  n  :  globalNames)  {  [CLASS]  CollapseProperties  1  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20306923302672383	121	121	8	replace	namespace  =  new  GlobalNamespace(compiler,  externs.cloneTree(),  root,  INVALID_THIS);	  namespace    =    new    GlobalNamespace(compiler,    externs.cloneTree(),    root);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
