bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {	  if(p.inExterns    &&!canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	7	None	replace
2	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf	  if(p.inExterns    &&!canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	7	None	replace
3	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndD  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndD  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndD	  if(p.inExterns    &&!canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	7	None	replace
4	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {	  if(p.inExterns    &&!canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	7	None	replace
5	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName	  if(p.inExterns    &&!canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	7	None	replace
6	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION	  if(p.inExterns    &&!canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	7	None	replace
7	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants	  if(p.inExterns    &&!canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	7	None	replace
8	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
9	[BUG]  [BUGGY]  if(n.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(n.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(n.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
10	[BUG]  [BUGGY]  if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
11	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
12	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
13	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
14	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
15	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
16	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().getType  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().getType  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().getType	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
17	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
18	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
19	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType    	non-compiled	[CE]  not  a  statement	14	None	replace
20	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().get  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().get  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().get	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType    	non-compiled	[CE]  not  a  statement	14	None	replace
21	[BUG]  [BUGGY]  if(!p.inExterns  &&  parent.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().getType  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  parent.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().getType  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  parent.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().getType	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType    	non-compiled	[CE]  not  a  statement	14	None	replace
22	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType    	non-compiled	[CE]  not  a  statement	14	None	replace
23	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType    	non-compiled	[CE]  not  a  statement	14	None	replace
24	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  Il  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  Il  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  Il	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
25	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( "  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( "  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( "	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
26	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
27	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
28	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.N  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.N  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.N	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
29	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
30	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.NAME)  {  throw  new  Il  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.NAME)  {  throw  new  Il  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.NAME)  {  throw  new  Il	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
31	[BUG]  [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
32	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
33	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
34	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
35	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
36	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getPar    	non-compiled	[CE]  not  a  statement	13	None	replace
37	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getPar    	non-compiled	[CE]  not  a  statement	13	None	replace
38	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.get  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.get  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.get	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getPar    	non-compiled	[CE]  not  a  statement	13	None	replace
39	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getPar  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getPar  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getPar	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getPar    	non-compiled	[CE]  not  a  statement	13	None	replace
40	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getPar    	non-compiled	[CE]  not  a  statement	13	None	replace
41	[BUG]  [BUGGY]  if(!p.inExterns  &&  parent.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  parent.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  parent.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent().	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	10	None	replace
42	[BUG]  [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  cannotCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	10	None	replace
43	[BUG]  [BUGGY]  if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name));  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(n,  appendPropForAlias(alias,  p.name));  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
44	[BUG]  [BUGGY]  if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name));  }  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name));  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name));  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
45	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants	      	non-compiled	[CE]  not  a  statement	8	None	replace
46	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
47	[BUG]  [BUGGY]  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
48	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
49	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
50	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
51	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
52	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent()!=  nu	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
53	[BUG]  [BUGGY]  if(p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
54	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.child  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.child  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.child	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
55	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
56	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
57	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
58	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOf	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
59	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
60	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndD  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndD  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndD	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
61	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.VAR)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.VAR)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.VAR)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
62	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfName	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
63	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
64	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.CALL)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	20	None	replace
65	[BUG]  [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
66	[BUG]  [BUGGY]  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	&&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
67	[BUG]  [BUGGY]  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	collapseDeclarationOfNameAndDescendants(	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
68	[BUG]  [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
69	[BUG]  [BUGGY]  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	&&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
70	[BUG]  [BUGGY]  parent,  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  parent,  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	parent,  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
71	[BUG]  [BUGGY]  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationO  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationO  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	&&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationO	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
72	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfName    	non-compiled	[CE]  not  a  statement	4	None	replace
73	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclaration  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclaration  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclaration	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfName    	non-compiled	[CE]  not  a  statement	4	None	replace
74	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent().getType()  ==  Token.FUNCTION)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfName    	non-compiled	[CE]  not  a  statement	4	None	replace
75	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
76	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOf	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
77	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndD  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndD  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndD	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
78	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfName	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
79	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAnd  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAnd  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAnd	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
80	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.element  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.element  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.element	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.n    	non-compiled	[CE]  not  a  statement	15	None	replace
81	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.declaration.  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.declaration.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.declaration.	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.n    	non-compiled	[CE]  not  a  statement	15	None	replace
82	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.in  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.in  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.in	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.n    	non-compiled	[CE]  not  a  statement	15	None	replace
83	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.i  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.i  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.i	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.n    	non-compiled	[CE]  not  a  statement	15	None	replace
84	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAnd  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAnd  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAnd	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	1	None	replace
85	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent()    	non-compiled	[CE]  not  a  statement	18	None	replace
86	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  nu	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent()    	non-compiled	[CE]  not  a  statement	18	None	replace
87	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  nu	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent()    	non-compiled	[CE]  not  a  statement	18	None	replace
88	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  }	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent()    	non-compiled	[CE]  not  a  statement	18	None	replace
89	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
90	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDesc  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDesc  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDesc	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
91	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
92	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAnd  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAnd  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAnd	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
93	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndD  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndD  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndD	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
94	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
95	[BUG]  [BUGGY]  if(p.declaration!=  null)  {  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null)  {  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null)  {  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
96	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
97	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	21	None	replace
98	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOf	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	21	None	replace
99	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	21	None	replace
100	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	21	None	replace
101	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclaration  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclaration  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclaration	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	21	None	replace
102	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
103	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOf	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
104	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
105	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAnd  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAnd  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAnd	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
106	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDesc  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDesc  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDesc	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
107	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfName	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
108	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOf	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
109	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
110	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
111	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
112	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
113	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
114	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
115	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  nu	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
116	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
117	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.parent  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.parent  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.parent	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.n    	non-compiled	[CE]  not  a  statement	15	None	replace
118	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.d  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.d  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.d	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.n    	non-compiled	[CE]  not  a  statement	15	None	replace
119	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.e  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.e  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.e	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.n    	non-compiled	[CE]  not  a  statement	15	None	replace
120	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.CALL)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	20	None	replace
121	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  collapseDeclarationOf	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.CALL)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	20	None	replace
122	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.CALL)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	20	None	replace
123	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.SCRIPT)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.SCRIPT)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.SCRIPT)  {	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.CALL)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	20	None	replace
124	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	1	None	replace
125	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	1	None	replace
126	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	1	None	replace
127	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	1	None	replace
128	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfName    	non-compiled	[CE]  not  a  statement	4	None	replace
129	[BUG]  [BUGGY]  if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getPar  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getPar  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getPar	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
130	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  ==  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  ==  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  ==	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
131	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent()    	non-compiled	[CE]  not  a  statement	18	None	replace
132	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()!=	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent()    	non-compiled	[CE]  not  a  statement	18	None	replace
133	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent()    	non-compiled	[CE]  not  a  statement	18	None	replace
134	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants	  if(p.inExterns    &&!canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	7	None	replace
135	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(	      	non-compiled	[CE]  not  a  statement	8	None	replace
136	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants	      	non-compiled	[CE]  not  a  statement	8	None	replace
137	[BUG]  [BUGGY]  if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name));  }  else  {  updateSimpleDeclaration(appendPropForAlias(alia  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name));  }  else  {  updateSimpleDeclaration(appendPropForAlias(alia  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null)  {  collapseDeclarationOfNameAndDescendants(p,  appendPropForAlias(alias,  p.name));  }  else  {  updateSimpleDeclaration(appendPropForAlias(alia	      	non-compiled	[CE]  not  a  statement	8	None	replace
138	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  }	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	10	None	replace
139	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  ==  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  ==  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  ==	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	10	None	replace
140	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
141	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDe  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDe  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDe	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
142	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationO  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationO  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationO	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
143	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclaration  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclaration  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclaration	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
144	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
145	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
146	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  <  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  <  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  <  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
147	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
148	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOf	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
149	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
150	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
151	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
152	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
153	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	17	None	replace
154	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  <  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  <  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node  <  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getPar    	non-compiled	[CE]  not  a  statement	13	None	replace
155	[BUG]  [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.declaration.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getPar    	non-compiled	[CE]  not  a  statement	13	None	replace
156	[BUG]  [BUGGY]  parent  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  parent  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	parent  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	19	None	replace
157	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
158	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	11	None	replace
159	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOf	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
160	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
161	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants(    	non-compiled	[CE]  not  a  statement	5	None	replace
162	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.n    	non-compiled	[CE]  not  a  statement	15	None	replace
163	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.n  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.n  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.n	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.n    	non-compiled	[CE]  not  a  statement	15	None	replace
164	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent().	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
165	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.node.getParent().	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
166	[BUG]  [BUGGY]  if(p.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  ||  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
167	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	16	None	replace
168	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants	  if(p.inExterns    &&!canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	7	None	replace
169	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {	  if(p.inExterns    &&!canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	7	None	replace
170	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
171	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
172	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
173	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants(	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
174	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.VAR)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	6	None	replace
175	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  collapseDeclaration  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  collapseDeclaration  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CALL)  {  collapseDeclaration	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.CALL)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	20	None	replace
176	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
177	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
178	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  Il  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  Il  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  Il	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
179	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
180	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
181	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  throw  new  IllegalArgumentException( " ");  }	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
182	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  ==  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
183	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
184	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
185	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
186	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
187	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.NAME)  {  collapseDeclarationOfNameAndDescendants(	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.NAME)    {    collapseDeclarationOfNameAndDescendants    	non-compiled	[CE]  not  a  statement	3	None	replace
188	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent().	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	10	None	replace
189	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	10	None	replace
190	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.node.getParent().  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.node.getParent().  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.node.getParent().	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().    	non-compiled	[CE]  not  a  statement	10	None	replace
191	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfName    	non-compiled	[CE]  not  a  statement	4	None	replace
192	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfName	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfName    	non-compiled	[CE]  not  a  statement	4	None	replace
193	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfName	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.FUNCTION)    {    collapseDeclarationOfName    	non-compiled	[CE]  not  a  statement	4	None	replace
194	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.FUNCTION)  {  collapseDeclarationOfNameAndDescendants(	      	non-compiled	[CE]  not  a  statement	8	None	replace
195	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants	      	non-compiled	[CE]  not  a  statement	8	None	replace
196	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH)  {  collapseDeclarationOfNameAndDescendants  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH)  {  collapseDeclarationOfNameAndDescendants  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH)  {  collapseDeclarationOfNameAndDescendants	      	non-compiled	[CE]  not  a  statement	8	None	replace
197	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.VAR)  {  collapseDeclarationOfNameAndDescendants(	      	non-compiled	[CE]  not  a  statement	8	None	replace
198	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH)  {  collapseDeclarationOfNameAndDescendants(  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH)  {  collapseDeclarationOfNameAndDescendants(  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.CATCH)  {  collapseDeclarationOfNameAndDescendants(	      	non-compiled	[CE]  not  a  statement	8	None	replace
199	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent()	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent()    	non-compiled	[CE]  not  a  statement	18	None	replace
200	[BUG]  [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent()  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent()  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.inExterns  &&  canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent()	  if(p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent()    	non-compiled	[CE]  not  a  statement	18	None	replace
201	[BUG]  [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  canCollapseChildNames  ||  p.declaration!=  null  &&  p.declaration.node  ==  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node    ==    null    &&    p.declaration.node.getParent()!=    null    &&    	non-compiled	[CE]  not  a  statement	12	None	replace
202	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
203	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getParent()  ==  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
204	[BUG]  [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getFirstChild()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getFirstChild()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!canCollapseChildNames  &&  p.declaration!=  null  &&  p.declaration.node.getFirstChild()!=  null  &&  p.declaration.node.getParent().getType()  ==  Token.EXPR	  if(!canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType()    ==    Token.EXPR    	non-compiled	[CE]  not  a  statement	22	None	replace
205	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.getParent()!=  null  &&  p.declaration.node.getParent()!=  null  &&	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
206	[BUG]  [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(!p.inExterns  &&  p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getNext()!=  null  &&  p.declaration.	  if(!p.inExterns    &&    p.declaration!=    null    &&    p.declaration.node!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.    	non-compiled	[CE]  not  a  statement	9	None	replace
207	[BUG]  [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    collapseDeclarationOfNameAndDescendants(  p,  appendPropForAlias(alias,  p.name));  if  (!p.inExterns  &&  canCollapseChildNames  &&  p.declaration  !=  null  &&  p.declaration.node  !=  null  &&  p.declaration.node.getParent()  !=  null  &&  p.declaration.node.getParent().getType()  ==  Token.ASSIGN)  {  updateSimpleDeclaration(  appendPropForAlias(alias,  p.name),  p,  p.declaration);  }    [BUGGY]  if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType  [BUGGY]    }  }  [CLASS]  CollapseProperties  1  [METHOD]  collapseDeclarationOfNameAndDescendants  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	462	462	8	replace	if(p.declaration!=  null  &&  p.declaration.node!=  null  &&  p.declaration.node.getParent()!=  null  &&  p.declaration.node.getParent().getType	  if(!p.inExterns    &&    canCollapseChildNames    &&    p.declaration!=    null    &&    p.declaration.node.getParent()!=    null    &&    p.declaration.node.getParent().getType    	non-compiled	[CE]  not  a  statement	14	None	replace
