bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  propAlias  =  appendNameForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  appendNameForAlias(alias,  p.name);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  appendNameForAlias(alias,  p.name);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
2	[BUG]  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  p.name,  n.props);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  p.name,  n.props);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  appendPropForAlias(alias,  p.name,  n.props);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
3	[BUG]  [BUGGY]  String  propAlias  =  appendReferencesForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  appendReferencesForAlias(alias,  p.name);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  appendReferencesForAlias(alias,  p.name);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
4	[BUG]  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  p.name,  n);  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  p.name,  n);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  appendPropForAlias(alias,  p.name,  n);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
5	[BUG]  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  p.name,  p.name);  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  p.name,  p.name);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  appendPropForAlias(alias,  p.name,  p.name);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
6	[BUG]  [BUGGY]  String  propAlias  =  appendPropForName(alias,  p.name);  [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  appendPropForName(alias,  p.name);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  appendPropForName(alias,  p.name);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
7	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]                AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]    [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	  	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
8	[BUG]  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  p.name,  p.type);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  p.name,  p.type);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  appendPropForAlias(alias,  p.name,  p.type);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
9	[BUG]  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  n.name);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  n.name);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  appendPropForAlias(alias,  n.name);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
10	[BUG]  [BUGGY]  String  propAlias  =  p.appendPropForAlias(alias,  p.name);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  p.appendPropForAlias(alias,  p.name);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  p.appendPropForAlias(alias,  p.name);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
11	[BUG]  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  p.name,  p);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  appendPropForAlias(alias,  p.name,  p);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  appendPropForAlias(alias,  p.name,  p);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
12	[BUG]  [BUGGY]  String  propAlias  =  appendProp(alias,  p.name);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  void  flattenReferencesToCollapsibleDescendantNames(  Name  n,  String  alias)  {  if  (n.props  ==  null)  return;  for  (Name  p  :  n.props)  {  [BUGGY]  String  propAlias  =  appendProp(alias,  p.name);  [BUGGY]    if  (p.canCollapse())  {  flattenReferencesTo(p,  propAlias);  }  flattenReferencesToCollapsibleDescendantNames(p,  propAlias);  }  }  [CLASS]  CollapseProperties  1  [METHOD]  flattenReferencesToCollapsibleDescendantNames  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	299	299	8	replace	String  propAlias  =  appendProp(alias,  p.name);	String  propAlias  =  appendPropForAlias(alias,  p.name);  	non-compiled	[CE]  not  a  statement	76	None	replace
