bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(prop.indexOf('$')  ==  -1)  {  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  static  String  appendPropForAlias(String  root,  String  prop)  {  [BUGGY]  if(prop.indexOf('$')  ==  -1)  {  [BUGGY]      prop  =  prop.replaceAll( "\\$ ",   "\\$0 ");  }  return  root  +  '$'  +  prop;  }  [CLASS]  CollapseProperties  1  [METHOD]  appendPropForAlias  [RETURN_TYPE]  String  String  root  String  prop  [VARIABLES]  AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	845	845	8	replace	if(prop.indexOf('$')  ==  -1)  {	if  (prop.indexOf('$')  !=  -1)  {  	non-compiled	[CE]  not  a  statement	94	None	replace
2	[BUG]  [BUGGY]  if(prop.indexOf('$')  >=  -1)  {  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  static  String  appendPropForAlias(String  root,  String  prop)  {  [BUGGY]  if(prop.indexOf('$')  >=  -1)  {  [BUGGY]      prop  =  prop.replaceAll( "\\$ ",   "\\$0 ");  }  return  root  +  '$'  +  prop;  }  [CLASS]  CollapseProperties  1  [METHOD]  appendPropForAlias  [RETURN_TYPE]  String  String  root  String  prop  [VARIABLES]  AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	845	845	8	replace	if(prop.indexOf('$')  >=  -1)  {	if  (prop.indexOf('$')  !=  -1)  {  	non-compiled	[CE]  not  a  statement	94	None	replace
3	[BUG]  [BUGGY]  if(root.indexOf('$')!=  -1)  {  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  private  static  String  appendPropForAlias(String  root,  String  prop)  {  [BUGGY]  if(root.indexOf('$')!=  -1)  {  [BUGGY]      prop  =  prop.replaceAll( "\\$ ",   "\\$0 ");  }  return  root  +  '$'  +  prop;  }  [CLASS]  CollapseProperties  1  [METHOD]  appendPropForAlias  [RETURN_TYPE]  String  String  root  String  prop  [VARIABLES]  AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	845	845	8	replace	if(root.indexOf('$')!=  -1)  {	if  (prop.indexOf('$')  !=  -1)  {  	non-compiled	[CE]  not  a  statement	94	None	replace
4	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  private  static  String  appendPropForAlias(String  root,  String  prop)  {  [BUGGY]    [BUGGY]      prop  =  prop.replaceAll( "\\$ ",   "\\$0 ");  }  return  root  +  '$'  +  prop;  }  [CLASS]  CollapseProperties  1  [METHOD]  appendPropForAlias  [RETURN_TYPE]  String  String  root  String  prop  [VARIABLES]  AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	845	845	8	replace	  	if  (prop.indexOf('$')  !=  -1)  {  	non-compiled	[CE]  not  a  statement	94	None	replace
5	[BUG]  [BUGGY]  if(prop.indexOf('$0')!=  -1)  {  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  static  String  appendPropForAlias(String  root,  String  prop)  {  [BUGGY]  if(prop.indexOf('$0')!=  -1)  {  [BUGGY]      prop  =  prop.replaceAll( "\\$ ",   "\\$0 ");  }  return  root  +  '$'  +  prop;  }  [CLASS]  CollapseProperties  1  [METHOD]  appendPropForAlias  [RETURN_TYPE]  String  String  root  String  prop  [VARIABLES]  AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	845	845	8	replace	if(prop.indexOf('$0')!=  -1)  {	if  (prop.indexOf('$')  !=  -1)  {  	non-compiled	[CE]  not  a  statement	94	None	replace
6	[BUG]  [BUGGY]  if(prop.indexOf( "$0 ")!=  -1)  {  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  static  String  appendPropForAlias(String  root,  String  prop)  {  [BUGGY]  if(prop.indexOf( "$0 ")!=  -1)  {  [BUGGY]      prop  =  prop.replaceAll( "\\$ ",   "\\$0 ");  }  return  root  +  '$'  +  prop;  }  [CLASS]  CollapseProperties  1  [METHOD]  appendPropForAlias  [RETURN_TYPE]  String  String  root  String  prop  [VARIABLES]  AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.20683507599800766	845	845	8	replace	if(prop.indexOf( "$0 ")!=  -1)  {	if  (prop.indexOf('$')  !=  -1)  {  	non-compiled	[CE]  not  a  statement	94	None	replace
