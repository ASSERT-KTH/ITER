bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Iterator  <  Entry>  entries  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    Iterator  <  Entry>  entries  =  this.entries.iterator();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	    Iterator  <  Entry>  entries  =  this.entries.iterator();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
2	[BUG]  [BUGGY]    Entry  <  K,  V>  entry  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    Entry  <  K,  V>  entry  =  entries.iterator();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	    Entry  <  K,  V>  entry  =  entries.iterator();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
3	[BUG]  [BUGGY]    Entry  <  K,  V>  entry  =  entries.get(i);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    Entry  <  K,  V>  entry  =  entries.get(i);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	    Entry  <  K,  V>  entry  =  entries.get(i);		non-compiled	[CE]  illegal  start  of  expression	4	None	add
4	[BUG]  [BUGGY]    Entry  <  K,  V>  entry  =  entries.get(key);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    Entry  <  K,  V>  entry  =  entries.get(key);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	    Entry  <  K,  V>  entry  =  entries.get(key);		non-compiled	[CE]  illegal  start  of  expression	4	None	add
5	[BUG]  [BUGGY]    Entry  <  K,  V>  entry  =  entries.get(index);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    Entry  <  K,  V>  entry  =  entries.get(index);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	    Entry  <  K,  V>  entry  =  entries.get(index);		non-compiled	[CE]  illegal  start  of  expression	4	None	add
6	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  Iterator  iter  =  this.entries.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	Iterator  iter  =  this.entries.iterator();	Iterator  iter  =  entries.iterator();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  Iterator  iter  =  current.entries.iterator();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  Iterator  iter  =  current.entries.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	Iterator  iter  =  current.entries.iterator();	Iterator  iter  =  entries.iterator();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  Ilerator  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  Ilerator  iter  =  this.entries.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	Ilerator  iter  =  this.entries.iterator();	Iterator  iter  =  entries.iterator();  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]    Iterator  <  Entry>  entries  =  getEntrySet().iterator();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    Iterator  <  Entry>  entries  =  getEntrySet().iterator();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	    Iterator  <  Entry>  entries  =  getEntrySet().iterator();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
10	[BUG]  [BUGGY]    Entry  <  K,  V>  entry  =  entries.get(new  Integer(max));  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    Entry  <  K,  V>  entry  =  entries.get(new  Integer(max));  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	    Entry  <  K,  V>  entry  =  entries.get(new  Integer(max));		non-compiled	[CE]  illegal  start  of  expression	4	None	add
11	[BUG]  [BUGGY]    Entry  <  N,  V>  entry  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    Entry  <  N,  V>  entry  =  entries.iterator();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	500	500	2	replace	    Entry  <  N,  V>  entry  =  entries.iterator();		non-compiled	[CE]  illegal  start  of  expression	4	None	add
