bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getNorm();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter.next()).getNorm();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).getNorm();	      ((    OpenMapEntry)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).value();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter.next()).value();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).value();	      ((    OpenMapEntry)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  1;  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).advance()  +  1;	      ((    OpenMapEntry)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  max  +=  iter.getValue()  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  max  +=  iter.getValue()  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  +=  iter.getValue()  /  DEFAULT_ZERO_TOLERANCE;	  max    +=    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  max  +=  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  max  +=  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  +=  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE;	  max    +=    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  max  -=  iter.value()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  max  -=  iter.value()  +  1;  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  -=  iter.value()  +  1;	  max    -=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  max  -=  iter.next();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  max  -=  iter.next();  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  -=  iter.next();	  max    -=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).remove();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).remove();  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).remove();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).remove();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapSparseIterator)iter).remove();  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).remove();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max);  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).setValue(max);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).value();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter).value();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).value();	      ((    OpenMapEntry)iter).advance();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).getNorm();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter).getNorm();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).getNorm();	      ((    OpenMapEntry)iter).advance();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).advance()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter).advance()  +  1;  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).advance()  +  1;	      ((    OpenMapEntry)iter).advance();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  iter  =  this.entries.iterator();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  this.entries.iterator();	      Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  Iterator  iter  =  current.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  iter  =  current.entrySet().iterator();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  current.entrySet().iterator();	      Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  Iterator  iter  =  current.entries.iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  iter  =  current.entries.iterator();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  current.entries.iterator();	      Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  double  value  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  double  value  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE;	      double    value    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  double  value  =  iter.getValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  double  value  =  iter.getValue();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.getValue();	      double    value    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  double  value  =  iter.next()  -  max;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  double  value  =  iter.next()  -  max;  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  -  max;	      double    value    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  this.entries.iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  <  Entry>  iter  =  current.entrySet().iterator();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  current.entrySet().iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  max  +=  iter.value()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  max  +=  iter.value()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  +=  iter.value()  *  DEFAULT_ZERO_TOLERANCE;	  max    +=    iter.value()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  max  -=  iter.advance();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  max  -=  iter.advance();  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  -=  iter.advance();	  max    -=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  max  +=  iter.value()  /  DEFAULT_ZERO_TOLERANCE  *  2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  max  +=  iter.value()  /  DEFAULT_ZERO_TOLERANCE  *  2;  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  +=  iter.value()  /  DEFAULT_ZERO_TOLERANCE  *  2;	  max    +=    iter.value()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  max  -=  iter.getValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  max  -=  iter.getValue();  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  -=  iter.getValue();	  max    +=    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  double  value  =  iter.next()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  double  value  =  iter.next()  +  1;  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  +  1;	      double    value    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  double  value  =  iter.next()  -  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  double  value  =  iter.next()  -  1;  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  -  1;	      double    value    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  iter.advance();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  iter.advance();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	iter.advance();	      iter.remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  iter.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  <  Entry>  iter  =  iter.entrySet().iterator();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  iter.entrySet().iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  iter.entries.iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  <  Entry>  iter  =  iter.entries.iterator();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  iter.entries.iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).getLInfNorm();	      ((    OpenMapEntry)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value);  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setValue(value);	      ((    OpenMapEntry)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max);  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setValue(max);	      ((    OpenMapEntry)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setValue(value);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter).setValue(value);  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setValue(value);	      ((    OpenMapEntry)iter).advance();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
38	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(entries!=  null)?  entries.iterator()  :  0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  <  Entry>  iter  =(entries!=  null)?  entries.iterator()  :  0;  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =(entries!=  null)?  entries.iterator()  :  0;	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size());  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size());	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  -  1);  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setNorm(max);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter).setNorm(max);  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setNorm(max);	      ((    OpenMapEntry)iter).advance();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max);  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setNorm(max);	      ((    OpenMapEntry)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  max  +=  iter.next()  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  max  +=  iter.next()  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]    }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  +=  iter.next()  /  DEFAULT_ZERO_TOLERANCE;	  max    +=    iter.value()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  iter.previous();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  iter.previous();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	iter.previous();	      iter.remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  double  value  =  iter.value();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  double  value  =  iter.value();  [BUGGY]    max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.value();	      double    value    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
