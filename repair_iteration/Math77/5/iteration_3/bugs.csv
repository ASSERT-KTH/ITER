bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size());  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size());	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    entries.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
2	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  +  1);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  +  1);	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    entries.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
3	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  /  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  /  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).advance()  /  1;	  ((    OpenMapEntry)iter.next()).advance()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  *  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  *  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).advance()  *  1;	  ((    OpenMapEntry)iter.next()).advance()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  double  value  =  iter.next()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.next()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  *  DEFAULT_ZERO_TOLERANCE;	  double    value    =    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
6	[BUG]  [BUGGY]  double  value  =  iter.next()  +  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.next()  +  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  +  DEFAULT_ZERO_TOLERANCE;	  double    value    =    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
7	[BUG]  [BUGGY]  double  value  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE  +  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE  +  1;	  double    value    =    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
8	[BUG]  [BUGGY]  max  +=  iter.next()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  max  +=  iter.next()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  +=  iter.next()  *  DEFAULT_ZERO_TOLERANCE;	  max    +=    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
9	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(0,  entries.size());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(0,  entries.size());  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(0,  entries.size());	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    entries.size());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
10	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setNorm(value);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).setNorm(value);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setNorm(value);	  ((    OpenMapEntry)iter).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
11	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setNorm(getLInfNorm());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).setNorm(getLInfNorm());  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setNorm(getLInfNorm());	  ((    OpenMapEntry)iter).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
12	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setNorm(max  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).setNorm(max  +  1);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setNorm(max  +  1);	  ((    OpenMapEntry)iter).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
13	[BUG]  [BUGGY]  max  -=  iter.next()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  max  -=  iter.next()  +  1;  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  -=  iter.next()  +  1;	  max    -=    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  double  value  =  iter.getValue()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.getValue()  +  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.getValue()  +  1;	  double    value    =    iter.next()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
15	[BUG]  [BUGGY]  Double  value  =  iter.next();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Double  value  =  iter.next();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Double  value  =  iter.next();	  double    value    =    iter.next()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
16	[BUG]  [BUGGY]  double  value  =  iter.next()  /  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.next()  /  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  /  1;	  double    value    =    iter.next()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
17	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).getNorm()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).getNorm()  +  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).getNorm()  +  1;	  ((    OpenMapEntry)iter).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).getValue();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).getValue();	  ((    OpenMapEntry)iter).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  Iterator  iter  =  entry.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entry.entries.iterator();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entry.entries.iterator();	  Iterator    iter    =    current.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  double  value  =  iter.getValue()  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.getValue()  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.getValue()  /  DEFAULT_ZERO_TOLERANCE;	  double    value    =    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
21	[BUG]  [BUGGY]  double  value  =  iter.getValue()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.getValue()  -  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.getValue()  -  1;	  double    value    =    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
22	[BUG]  [BUGGY]  double  value  =  iter.value()  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.value()  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.value()  /  DEFAULT_ZERO_TOLERANCE;	  double    value    =    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
23	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  entries.entrySet().iterator();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  entries.entrySet().iterator();	  Iterator    <    Entry>    iter    =    iter.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
24	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  entrySet().iterator();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  entrySet().iterator();	  Iterator    <    Entry>    iter    =    iter.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
25	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).advance()  /  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).advance()  /  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).advance()  /  1;	  ((    OpenMapEntry)iter).advance()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
26	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).advance()  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).advance()  *  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).advance()  *  1;	  ((    OpenMapEntry)iter).advance()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  max  +=  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  max  +=  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  +=  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE;	  max    +=    iter.getValue()    *    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).setValue(value);	  ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(this.value);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(this.value);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).setValue(this.value);	  ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getNorm());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getNorm());  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).setValue(getNorm());	  ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).setValue(0,  max);	  ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getNorm()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).getNorm()  +  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).getNorm()  +  1;	  ((    OpenMapEntry)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  -=  iter.value();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  -=  iter.value();  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	-=  iter.value();	  max    -=    iter.value()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  double  value  =  iter.next()  /  max;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.next()  /  max;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  /  max;	  double    value    =    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
35	[BUG]  [BUGGY]  double  value  =  iter.next()  -  delta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.next()  -  delta;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  -  delta;	  double    value    =    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  double  value  =  iter.next()  *  max;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.next()  *  max;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  *  max;	  double    value    =    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
37	[BUG]  [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    current.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
38	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    current.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
39	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    current.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
40	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setValue(this.value);	  ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
41	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setValue(0,  max);	  ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
42	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm());  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setValue(getNorm());	  ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
43	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  current.entries.iterator();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  current.entries.iterator();	  Iterator    <    Entry>    iter    =    iter.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
44	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entry.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  entry.entries.iterator();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  entry.entries.iterator();	  Iterator    <    Entry>    iter    =    iter.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
45	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).getNorm();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).getNorm();  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).getNorm();	  ((    OpenMapSparseIterator    <    Entry>)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).remove(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).remove(0);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).remove(0);	  ((    OpenMapSparseIterator    <    Entry>)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(max);	  ((    OpenMapSparseIterator    <    Entry>)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  max  -=  iter.getValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  max  -=  iter.getValue()  +  1;  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  -=  iter.getValue()  +  1;	  max    -=    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
49	[BUG]  [BUGGY]  max  -=  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  max  -=  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  -=  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE;	  max    -=    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
50	[BUG]  [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    new    Double(current.doubleValue());    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
51	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    new    Double(current.doubleValue());    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
52	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current  ==  null)  {  max  =  new  Double(current.doubleValue());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current  ==  null)  {  max  =  new  Double(current.doubleValue());  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current  ==  null)  {  max  =  new  Double(current.doubleValue());  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    new    Double(current.doubleValue());    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
53	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setValue(this.value);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).setValue(this.value);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setValue(this.value);	  ((    OpenMapEntry)iter).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
54	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setValue(value,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).setValue(value,  max);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setValue(value,  max);	  ((    OpenMapEntry)iter).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
55	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setValue(getNorm());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).setValue(getNorm());  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setValue(getNorm());	  ((    OpenMapEntry)iter).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
56	[BUG]  [BUGGY]  Iterator  iter  =  entries.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entries.entrySet().iterator();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entries.entrySet().iterator();	  Iterator    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
57	[BUG]  [BUGGY]  Iterator  iter  =  entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entrySet().iterator();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entrySet().iterator();	  Iterator    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).getNorm();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).getNorm();  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).getNorm();	  ((    OpenMapSparseIterator)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
59	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).remove(0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).remove(0);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).remove(0);	  ((    OpenMapSparseIterator)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(entries  ==  null)?  entries.iterator()  :  0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =(entries  ==  null)?  entries.iterator()  :  0;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =(entries  ==  null)?  entries.iterator()  :  0;	  Iterator    <    Entry>    iter    =(entries!=    null)?    entries.iterator()    :    0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
61	[BUG]  [BUGGY]  max  +=  iter.value()  *  DEFAULT_ZERO_TOLERANCE  *  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  max  +=  iter.value()  *  DEFAULT_ZERO_TOLERANCE  *  2;  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  +=  iter.value()  *  DEFAULT_ZERO_TOLERANCE  *  2;	  max    +=    iter.value()    /    DEFAULT_ZERO_TOLERANCE    *    2;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
62	[BUG]  [BUGGY]  max  +=  iter.value()  /  DEFAULT_ZERO_TOLERANCE  *  4;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  max  +=  iter.value()  /  DEFAULT_ZERO_TOLERANCE  *  4;  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  +=  iter.value()  /  DEFAULT_ZERO_TOLERANCE  *  4;	  max    +=    iter.value()    /    DEFAULT_ZERO_TOLERANCE    *    2;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
63	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  +  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).getLInfNorm()  +  1;	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
64	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setLInfNorm(max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setLInfNorm(max);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setLInfNorm(max);	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  -  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).getLInfNorm()  -  1;	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
66	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).value()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).value()  +  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).value()  +  1;	  ((    OpenMapEntry)iter).value();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    >    max)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
68	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  <  max)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  <  max)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  <  max)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    >    max)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
69	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value,  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value,  max);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setValue(value,  max);	  ((    OpenMapEntry)iter.next()).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
70	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(value);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setNorm(value);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
71	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  +  1);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setNorm(max  +  1);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
72	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(getLInfNorm());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(getLInfNorm());  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setNorm(getLInfNorm());	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
73	[BUG]  [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()!=    null)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
74	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).setValue(0);	  ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
75	[BUG]  [BUGGY]  max  -=  iter.advance()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  max  -=  iter.advance()  +  1;  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  -=  iter.advance()  +  1;	  max    -=    iter.advance();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
76	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  -  1);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setNorm(max  -  1);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
77	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  +  1);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setValue(max  +  1);	  ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
78	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max));  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setValue(new  Float(max));	  ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
79	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setValue(max);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).setValue(max);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setValue(max);	  ((    OpenMapEntry)iter).value();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
80	[BUG]  [BUGGY]  max  -=  Iter.valueOf(iter.value());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  max  -=  Iter.valueOf(iter.value());  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	max  -=  Iter.valueOf(iter.value());	  max    -=    iter.value()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).getLen();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).getLen();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).getLen();	  ((    OpenMapEntry)iter).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
82	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setNorm(max  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).setNorm(max  -  1);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setNorm(max  -  1);	  ((    OpenMapEntry)iter).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
83	[BUG]  [BUGGY]  double  value  =  iter.next()  -  max  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.next()  -  max  +  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  -  max  +  1;	  double    value    =    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
84	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  allEntries.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  allEntries.iterator();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  allEntries.iterator();	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
85	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).advance().doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).advance().doubleValue();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).advance().doubleValue();	  ((    OpenMapEntry)iter).advance()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
86	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    new    Double(current.doubleValue());    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
87	[BUG]  [BUGGY]  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    new    Double(current.doubleValue());    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
88	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).getValue();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).getValue();	  ((    OpenMapEntry)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
89	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLenfNorm();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).getLenfNorm();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).getLenfNorm();	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
90	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    current.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
91	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    current.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
92	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    >    max)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
93	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    >    max)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
94	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()!=    null)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
95	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()!=    null)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
96	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).getLInfNorm();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).getLInfNorm();  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).getLInfNorm();	  ((    OpenMapSparseIterator)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
97	[BUG]  [BUGGY]  Iterator  iter  =  entry.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entry.entrySet().iterator();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entry.entrySet().iterator();	  Iterator    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(value);	  ((    OpenMapSparseIterator    <    Entry>)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
99	[BUG]  [BUGGY]  double  value  =  iter.value()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.value()  -  1;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.value()  -  1;	  double    value    =    iter.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
100	[BUG]  [BUGGY]  double  value  =  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE;	  double    value    =    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
101	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setValue(DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).setValue(DEFAULT_ZERO_TOLERANCE);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setValue(DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapEntry)iter).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
102	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).setValue(value  /  DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapEntry)iter).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
103	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entry.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  entry.entrySet().iterator();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  entry.entrySet().iterator();	  Iterator    <    Entry>    iter    =    iter.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
104	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setNorm(max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).setNorm(max);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).setNorm(max);	  ((    OpenMapSparseIterator)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
105	[BUG]  [BUGGY]  ((  OpenMapEntry)iter).reset();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter).reset();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter).reset();	  ((    OpenMapEntry)iter).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
106	[BUG]  [BUGGY]  double  value  =  iter.next()  -  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  double  value  =  iter.next()  -  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	double  value  =  iter.next()  -  DEFAULT_ZERO_TOLERANCE;	  double    value    =    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
107	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLenient();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).getLenient();  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).getLenient();	  ((    OpenMapEntry)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
108	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    current.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
109	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  current.doubleValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    current.doubleValue();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
110	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  *  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  *  2);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  *  2);	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    entries.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
111	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()!=    null)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
112	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()!=    null)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
113	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  -  1);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setValue(value  -  1);	  ((    OpenMapEntry)iter.next()).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
114	[BUG]  [BUGGY]  maximum  -=  iter.value();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  maximum  -=  iter.value();  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	maximum  -=  iter.value();	  max    -=    iter.value()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
115	[BUG]  [BUGGY]  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    >    max)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
116	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  max)  {  max  =  current.getValue();  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    >    max)    {    max    =    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
117	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(entrys  ==  null)?  entries.iterator()  :  0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =(entrys  ==  null)?  entries.iterator()  :  0;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =(entrys  ==  null)?  entries.iterator()  :  0;	  Iterator    <    Entry>    iter    =(entries!=    null)?    entries.iterator()    :    0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
118	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(entrys!=  null)?  entries.iterator()  :  0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  <  Entry>  iter  =(entrys!=  null)?  entries.iterator()  :  0;  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  <  Entry>  iter  =(entrys!=  null)?  entries.iterator()  :  0;	  Iterator    <    Entry>    iter    =(entries!=    null)?    entries.iterator()    :    0;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
119	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  Iterator  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	Iterator  iter  =  entries.iterator();  while(iter.hasNext())  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  max  =  new  Double(current.doubleValue());  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current!=    null)    {    max    =    new    Double(current.doubleValue());    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
120	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  -  1);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapEntry)iter.next()).setValue(max  -  1);	  ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
121	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).setValue(DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
122	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(DEFAULT_ZERO_TOLERANCE,  max);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(DEFAULT_ZERO_TOLERANCE,  max);  [BUGGY]      }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	503	503	2	replace	((  OpenMapSparseIterator)iter).setValue(DEFAULT_ZERO_TOLERANCE,  max);	  ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
