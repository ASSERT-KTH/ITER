bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(iter!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  entries.get(i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  if(iter!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  entries.get(i);  }  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  entries.get(i);  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  if(iter!=  null)  {  for(int  i  =  0;  i  <  entries.size();  ++i)  {  max  +=  entries.get(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  if(iter!=  null)  {  for(int  i  =  0;  i  <  entries.size();  ++i)  {  max  +=  entries.get(i);  }  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter!=  null)  {  for(int  i  =  0;  i  <  entries.size();  ++i)  {  max  +=  entries.get(i);  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  while  (iter.hasNext()  &&  iter.next())  {  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	while  (iter.hasNext()  &&  iter.next())  {	  while    (iter.hasNext()    &&    iter.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  while  (iter.hasNext()  ||  iter.hasNext())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  while  (iter.hasNext()  ||  iter.hasNext())  {  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	while  (iter.hasNext()  ||  iter.hasNext())  {	  while    (iter.hasNext()    &&    iter.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Entry>  iter  =  this.entries.iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  Iterator  <  Entry>  iter  =  current.entrySet().iterator();  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Entry>  iter  =  current.entrySet().iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  Iterator  iter  =  current.entries.iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  Iterator  iter  =  current.entries.iterator();  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  iter  =  current.entries.iterator();	      Iterator    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  Iterator  iter  =  current.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  Iterator  iter  =  current.entrySet().iterator();  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  iter  =  current.entrySet().iterator();	      Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  iter  =  this.entries.iterator();  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	iter  =  this.entries.iterator();	      iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  while  (iter.hasNext()  &&  iter.next()  ==  null)  {  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	while  (iter.hasNext()  &&  iter.next()  ==  null)  {	  while    (iter.hasNext()    &&    iter.next()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  while  (iter.hasNext()  ||  iter.next()!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  while  (iter.hasNext()  ||  iter.next()!=  null)  {  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	while  (iter.hasNext()  ||  iter.next()!=  null)  {	  while    (iter.hasNext()    &&    iter.next()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  int  dimension  =  iter.size()  -  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  int  dimension  =  iter.size()  -  1;  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	int  dimension  =  iter.size()  -  1;	      int    dimension    =    iter.size();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  double  dimension  =  iter.size();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  double  dimension  =  iter.size();  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	double  dimension  =  iter.size();	      int    dimension    =    iter.size();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  int  dimension  =  iter.size()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  int  dimension  =  iter.size()  +  1;  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	int  dimension  =  iter.size()  +  1;	      int    dimension    =    iter.size();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  Ilerator  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  Ilerator  iter  =  this.entries.iterator();  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Ilerator  iter  =  this.entries.iterator();	      Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  int  dimension  =  iter.size()  -  2;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  int  dimension  =  iter.size()  -  2;  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	int  dimension  =  iter.size()  -  2;	      int    dimension    =    iter.size();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
17	[BUG]  [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entries.iterator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  Iterator  <  Entry>  iter  =  current.entries.iterator();  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Entry>  iter  =  current.entries.iterator();	      Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  Iterator  iter  =  this.entries.values().iterator();  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  iter  =  this.entries.values().iterator();	      Iterator    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]    iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  iter.setValue(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();    [BUGGY]  iter.setValue(value);  [BUGGY]    while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	iter.setValue(value);	      iter.remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
