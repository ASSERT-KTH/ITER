bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  <  Object>  iter  =  entries.iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Object>  iter  =  entries.iterator();	  if(iter!=    null)    {    for(int    i    =    0;    i    <    entries.size();    i++)    {    max    +=    entries.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  iter.advance();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  iter.advance();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	iter.advance();	  if(iter!=    null)    {    for(int    i    =    0;    i    <    entries.size();    i++)    {    max    +=    entries.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  if(current!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(current!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(current!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    max    +=    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
4	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    max    +=    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
5	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    >    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Double  value  =  iter.next();  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Double  value  =  iter.next();  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Double  value  =  iter.next();  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    >    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
7	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    >    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  Iterator  iter  =  this.current.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  this.current.entrySet().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  iter  =  this.current.entrySet().iterator();	  Iterator    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  Iterator  iter  =  entry.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  entry.entries.iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  iter  =  entry.entries.iterator();	  Iterator    iter    =    current.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    ==    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
11	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    ==    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
12	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    ==    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();	  Iterator    <    Entry>    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next().getValue())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  while  (iter.hasNext()  &&  iter.next().getValue())  {  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	while  (iter.hasNext()  &&  iter.next().getValue())  {	  while    (iter.hasNext()    &&    iter.next())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next().value())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  while  (iter.hasNext()  &&  iter.next().value())  {  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	while  (iter.hasNext()  &&  iter.next().value())  {	  while    (iter.hasNext()    &&    iter.next())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  Ilerator  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Ilerator  iter  =  entries.iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Ilerator  iter  =  entries.iterator();	  Ilerator    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
17	[BUG]  [BUGGY]  double  dimension  =  iter.size()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  double  dimension  =  iter.size()  -  1;  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	double  dimension  =  iter.size()  -  1;	  double    dimension    =    iter.size();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  double  dimension  =  iter.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  double  dimension  =  iter.size()  +  1;  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	double  dimension  =  iter.size()  +  1;	  double    dimension    =    iter.size();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  double  dimension  =  iter.size()  /  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  double  dimension  =  iter.size()  /  2;  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	double  dimension  =  iter.size()  /  2;	  double    dimension    =    iter.size();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    max    +=    iter.next();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
21	[BUG]  [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    max    +=    iter.next();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
22	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  -=  iter.next();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  -=  iter.next();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  -=  iter.next();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    max    +=    iter.next();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    <    =    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    <    =    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    <    =    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
26	[BUG]  [BUGGY]  Integer  dimension  =  iter.size();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Integer  dimension  =  iter.size();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Integer  dimension  =  iter.size();	  int    dimension    =    iter.size()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  Iterator  iter  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  entries.values().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  iter  =  entries.values().iterator();	  Iterator    iter    =    this.entries.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entry.entries.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  <  Entry>  iter  =  entry.entries.iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Entry>  iter  =  entry.entries.iterator();	  Iterator    <    Entry>    iter    =    current.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
29	[BUG]  [BUGGY]  int  dimension  =  entries.size();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  int  dimension  =  entries.size();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	int  dimension  =  entries.size();	  int    dimension    =    iter.size()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  ++i)  {  max  +=  entries.get(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  ++i)  {  max  +=  entries.get(i);  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  ++i)  {  max  +=  entries.get(i);  }	  if(iter!=    null)    {    for(int    i    =    0;    i    <    entries.size();    ++i)    {    max    +=    entries.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  ++i)  {  max  +=  iter.get(i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  ++i)  {  max  +=  iter.get(i);  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  ++i)  {  max  +=  iter.get(i);  }	  if(iter!=    null)    {    for(int    i    =    0;    i    <    entries.size();    ++i)    {    max    +=    entries.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  float  dimension  =  iter.size();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  float  dimension  =  iter.size();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	float  dimension  =  iter.size();	  int    dimension    =    iter.size()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  entries.get(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  entries.get(i);  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  entries.get(i);  }	  if(iter!=    null)    {    for(int    i    =    0;    i    <    entries.size();    i++)    {    max    +=    entries.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  iter.get(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  iter.get(i);  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  iter.get(i);  }	  if(iter!=    null)    {    for(int    i    =    0;    i    <    entries.size();    i++)    {    max    +=    entries.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter  ==  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(int    i    =    0;    i    <    entries.size();    i++)    {    max    +=    entries.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.values().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Entry>  iter  =  this.entries.values().iterator();	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  Iterator  <  Double>  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  <  Double>  iter  =  entries.iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Double>  iter  =  entries.iterator();	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    <    =    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
38	[BUG]  [BUGGY]  if(current!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(current!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(current!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    max    +=    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
39	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  this.entries.keySet().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  iter  =  this.entries.keySet().iterator();	  Iterator    iter    =    this.entries.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
40	[BUG]  [BUGGY]  iter.setValue(value  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  iter.setValue(value  -  1);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	iter.setValue(value  -  1);	  iter.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
41	[BUG]  [BUGGY]  double  dimension  =  iter.getValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  double  dimension  =  iter.getValue();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	double  dimension  =  iter.getValue();	  double    dimension    =    iter.size();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  double  dimension  =  iter.size()  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  double  dimension  =  iter.size()  -  2;  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	double  dimension  =  iter.size()  -  2;	  double    dimension    =    iter.size();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  <  Entry>  iter  =  entrySet().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Entry>  iter  =  entrySet().iterator();	  Iterator    <    Entry>    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  double  dimension  =  iter.next();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  double  dimension  =  iter.next();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	double  dimension  =  iter.next();	  double    dimension    =    iter.size();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  while(iter.hasNext()  ||  iter.next()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  while(iter.hasNext()  ||  iter.next()  ==  null)  {  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	while(iter.hasNext()  ||  iter.next()  ==  null)  {	  while    (iter.hasNext()    ||    iter.next()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  Iterator  iter  =  this.current.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  this.current.entries.iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  iter  =  this.current.entries.iterator();	  Iterator    iter    =    current.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  iter.setValue(DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  iter.setValue(DEFAULT_ZERO_TOLERANCE);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	iter.setValue(DEFAULT_ZERO_TOLERANCE);	  iter.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
48	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    <    =    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
49	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    <    =    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
50	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  it  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  it  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  max  +=  it	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    <    =    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
51	[BUG]  [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    max    +=    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter!=  null)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  max  +=  current.getValue();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    max    +=    current.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
53	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  <  Entry>  iter  =  entries.entrySet().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Entry>  iter  =  entries.entrySet().iterator();	  Iterator    <    Entry>    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entries.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entries.iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	Iterator  <  Entry>  iter  =  this.current.entries.iterator();	  Iterator    <    Entry>    iter    =    current.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
55	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    >    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
56	[BUG]  [BUGGY]  if(value!=  0.0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(value!=  0.0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(value!=  0.0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    >    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
57	[BUG]  [BUGGY]  iter.advance();  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  iter.advance();  max  +=  iter.value();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	iter.advance();  max  +=  iter.value();	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    >    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
58	[BUG]  [BUGGY]  while(iter.hasNext()  ||  iter.next())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  while(iter.hasNext()  ||  iter.next())  {  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	while(iter.hasNext()  ||  iter.next())  {	  while    (iter.hasNext()    &&    iter.next())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(iter!=  null)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(iter!=  null)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  max  +=  iter.next();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    max    +=    iter.next();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
60	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	501	501	2	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  double  value  =  iter.next();  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  iter.value();  }	  if(iter!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    double    value    =    iter.next();    if(value    ==    DEFAULT_ZERO_TOLERANCE)    {    max    +=    iter.value();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
