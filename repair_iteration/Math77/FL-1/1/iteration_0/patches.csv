bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
2	[BUG]  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
3	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  double  max  =(value  ==  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  value  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
5	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  incompatible  types  [FE]          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  incompatible  types	1	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  1;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =  1;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
7	[BUG]  [BUGGY]  double  max  =  1;  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  1;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  1;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
8	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >=  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  >=  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
10	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >=  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >=  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  >=  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
11	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  1)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  1)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  1)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
13	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  -  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  -  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  -  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
14	[BUG]  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  defult_ZERO_TOLERANCE  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  defult_ZERO_TOLERANCE	1	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
16	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
18	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [FE]  AssertionFailedError  [FE]                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
19	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  value  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
20	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
21	[BUG]  [BUGGY]  double  max  =(defULT_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(defULT_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(defULT_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
23	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  incompatible  types  [FE]                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  incompatible  types	1	None	replace
24	[BUG]  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  defult_ZERO_TOLERANCE  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  defult_ZERO_TOLERANCE	1	None	replace
25	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  value  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
26	[BUG]  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(defult_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE.doubleValue();  [CE]  cannot  find  symbol  value  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE.doubleValue();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE.doubleValue();	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
28	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.doubleValue();  [CE]  incompatible  types  [FE]                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.doubleValue();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.doubleValue();	double  max  =  0;  	non-compiled	[CE]  incompatible  types	1	None	replace
29	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  2)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  type  [FE]                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  2)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  2)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  defult_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  defult_ZERO_TOLERANCE  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  defult_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  defult_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  defult_ZERO_TOLERANCE	1	None	replace
31	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(value,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  value  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(value,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
32	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE  +  DEFAULT_ZERO_TOLERANCE;  [CE]  incompatible  types  [FE]                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE  +  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE  +  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  incompatible  types	1	None	replace
33	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE);  [CE]  incompatible  types  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  incompatible  types	1	None	replace
34	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
35	[BUG]  [BUGGY]  double  max  =(defulT_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  type  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(defulT_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(defulT_ZERO_TOLERANCE  <  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE  [CE]  ';'  expected  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE	double  max  =  0;  	non-compiled	[CE]  ';'  expected	1	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(entries.size()  >  0)?  entries.size()  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(entries.size()  >  0)?  entries.size()  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
38	[BUG]  [BUGGY]  double  max  =(entries.size()  >  0)?  entries.size()  :  0;  [FE]  AssertionFailedError  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(entries.size()  >  0)?  entries.size()  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(entries.size()  >  0)?  entries.size()  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  System.identityHashCode(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =  System.identityHashCode(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
40	[BUG]  [BUGGY]  double  max  =  System.identityHashCode(DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  System.identityHashCode(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  System.identityHashCode(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
41	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [CE]  cannot  find  symbol  value  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
42	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_SECOND)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_SECOND)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_SECOND)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
43	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO  [CE]  ';'  expected  [FE]                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO	double  max  =  0;  	non-compiled	[CE]  ';'  expected	1	None	replace
44	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  -  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE.doubleValue();  [CE]  cannot  find  symbol  value  [FE]                                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  -  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE.doubleValue();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  -  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE.doubleValue();	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
45	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  )?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  type  [FE]                                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  )?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  <  )?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
46	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE  +  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE  +  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE  +  DateTimeConstants.MILLIS_PER_SECOND);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
47	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT  [CE]  ';'  expected  [FE]                                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT	double  max  =  0;  	non-compiled	[CE]  ';'  expected	1	None	replace
48	[BUG]  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  defult_ZERO_TOLERANCE  [FE]                                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.computeValue(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  defult_ZERO_TOLERANCE	1	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
50	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]                                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
51	[BUG]  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.doubleValue();  [CE]  cannot  find  symbol  defult_ZERO_TOLERANCE  [FE]                                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.doubleValue();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(defult_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE.doubleValue();	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  defult_ZERO_TOLERANCE	1	None	replace
52	[BUG]  [BUGGY]  double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  this.value;  [CE]  cannot  find  symbol  value  [FE]                                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  this.value;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  this.value;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
53	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_MINUTE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                                                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_MINUTE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_MINUTE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
54	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);  [CE]  cannot  find  symbol  value  [FE]                                                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
55	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE.doubleValue();  [CE]  cannot  find  symbol  value  [FE]                                                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE.doubleValue();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE.doubleValue();	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
56	[BUG]  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [CE]  ';'  expected  [FE]                                                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  ';'  expected	1	None	replace
57	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  max  [FE]                                                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	  	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  max	1	None	replace
58	[BUG]  [BUGGY]    Iterator  <  Entry>  entries  =  this.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    Iterator  <  Entry>  entries  =  this.entries.iterator();  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    Iterator  <  Entry>  entries  =  this.entries.iterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	add
59	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
60	[BUG]  [BUGGY]    Iterator  <  Entry>  entries  =  getEntrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    Iterator  <  Entry>  entries  =  getEntrySet().iterator();  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    Iterator  <  Entry>  entries  =  getEntrySet().iterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	add
61	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()		non-compiled	[CE]  ';'  expected	2	None	add
62	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
63	[BUG]  [BUGGY]    Iterator  iter  =  entries.iterator();  [CE]  variable  iter  is  already  defined  in  method  getLInfNorm()  [FE]              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    Iterator  iter  =  entries.iterator();  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    Iterator  iter  =  entries.iterator();		non-compiled	[CE]  variable  iter  is  already  defined  in  method  getLInfNorm()	2	None	add
64	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  final  Entry  <  K,  V>  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  final  Entry  <  K,  V>  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  final  Entry  <  K,  V>  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
65	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  final  Entry  <  K,  V>  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  final  Entry  <  K,  V>  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  final  Entry  <  K,  V>  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
66	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getKey()  ==  entry.getValue())  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getKey()  ==  entry.getValue())  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getKey()  ==  entry.getValue())  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
67	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
68	[BUG]  [BUGGY]    Entry  <  K,  V>  entry  =  entries.iterator();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    Entry  <  K,  V>  entry  =  entries.iterator();  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    Entry  <  K,  V>  entry  =  entries.iterator();		non-compiled	[CE]  cannot  find  symbol	2	None	add
69	[BUG]  [BUGGY]    Iterator  <  Entry>  entries  =  current.entrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    Iterator  <  Entry>  entries  =  current.entrySet().iterator();  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    Iterator  <  Entry>  entries  =  current.entrySet().iterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	add
70	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
71	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  [CE]  ';'  expected  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()		non-compiled	[CE]  ';'  expected	2	None	add
72	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
73	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue  [CE]  ';'  expected  [FE]                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue		non-compiled	[CE]  ';'  expected	2	None	add
74	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  =  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  =  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
75	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
76	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
77	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.equals(entry.getKey()))  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.equals(entry.getKey()))  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.equals(entry.getKey()))  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
78	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
79	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  [CE]  ';'  expected  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()		non-compiled	[CE]  ';'  expected	2	None	add
80	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getKey()  ==  entry.getValue())  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getKey()  ==  entry.getValue())  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getKey()  ==  entry.getValue())  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
81	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.equals(entry.getKey()))  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.equals(entry.getKey()))  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.equals(entry.getKey()))  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
82	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  break;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
83	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  result  +=  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  result  +=  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  result  +=  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
84	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  +  1;  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  +  1;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  +  1;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
85	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  len  =  entries.size();  i  <  len;  ++i)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  len  =  entries.size();  i  <  len;  ++i)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  len  =  entries.size();  i  <  len;  ++i)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
86	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  +  [CE]  '.class'  expected  [FE]                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  +  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  +		non-compiled	[CE]  '.class'  expected	2	None	add
87	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
88	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
89	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.equals(entry.getValue()))  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.equals(entry.getValue()))  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.equals(entry.getValue()))  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
90	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue  [CE]  ';'  expected  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue		non-compiled	[CE]  ';'  expected	2	None	add
91	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue  [CE]  ';'  expected  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue		non-compiled	[CE]  ';'  expected	2	None	add
92	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue()  [CE]  ';'  expected  [FE]                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue()  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue()		non-compiled	[CE]  ';'  expected	2	None	add
93	[BUG]  [BUGGY]    Entry  <  K,  V>  current  =  entry.getValue();  [CE]  cannot  find  symbol  [FE]                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    Entry  <  K,  V>  current  =  entry.getValue();  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    Entry  <  K,  V>  current  =  entry.getValue();		non-compiled	[CE]  cannot  find  symbol	2	None	add
94	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
95	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
96	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  [CE]  ';'  expected  [FE]                                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  final  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValue()		non-compiled	[CE]  ';'  expected	2	None	add
97	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
98	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
99	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValu  [CE]  ';'  expected  [FE]                                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValu  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(int  i  =  0;  i  <  entries.size();  i++)  {  Entry  entry  =  entries.get(i);  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  entry.getValu		non-compiled	[CE]  ';'  expected	2	None	add
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
101	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
102	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
104	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
106	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
108	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
110	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
112	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
114	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
116	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE!=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE!=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
118	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE!=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE!=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE!=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
120	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [FE]  AssertionFailedError  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
122	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [FE]  AssertionFailedError  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
123	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >>  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >>  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >>  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	1	None	replace
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE!=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE!=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
125	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE!=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE!=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE!=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
127	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [FE]  AssertionFailedError  [FE]                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
128	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >>  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >>  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >>  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	1	None	replace
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
130	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
131	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  no  suitable  method  found  for  max(double)  [FE]                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  no  suitable  method  found  for  max(double)	1	None	replace
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
133	[BUG]  [BUGGY]  double  max  =  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE?  0  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE?  0  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
135	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE?  0  :  DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE?  0  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE?  0  :  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
137	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [FE]  AssertionFailedError  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  0.0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  0.0)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
139	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  0.0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [FE]  AssertionFailedError  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  0.0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  0.0)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
140	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO  [CE]  ';'  expected  [FE]                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO	double  max  =  0;  	non-compiled	[CE]  ';'  expected	1	None	replace
141	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE);  [CE]  incompatible  types  [FE]                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  incompatible  types	1	None	replace
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  0)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  0)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
143	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  0)?  0  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  0)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  0)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
145	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [FE]  AssertionFailedError  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
146	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO  [CE]  ';'  expected  [FE]                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO	double  max  =  0;  	non-compiled	[CE]  ';'  expected	1	None	replace
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  -1)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  -1)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
148	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  -1)?  DEFAULT_ZERO_TOLERANCE  :  0;  [FE]  AssertionFailedError  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  -1)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  -1)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
149	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO  [CE]  ')'  expected  [FE]                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO	double  max  =  0;  	non-compiled	[CE]  ')'  expected	1	None	replace
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
151	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
153	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
154	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  ')'  expected  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  ')'  expected	1	None	replace
155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
156	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);  [FE]  AssertionFailedError  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Double.doubleToLongBits(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Double.doubleToLongBits(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
158	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Double.doubleToLongBits(DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Double.doubleToLongBits(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Double.doubleToLongBits(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
160	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
162	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);  [FE]  AssertionFailedError  [FE]                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >=  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  0);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
163	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO  [CE]  ';'  expected  [FE]                                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  ==  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO	double  max  =  0;  	non-compiled	[CE]  ';'  expected	1	None	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  1;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  1;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
165	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  1;  [FE]  AssertionFailedError  [FE]                                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  1;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <=  DEFAULT_ZERO_TOLERANCE  ||  DEFAULT_ZERO_TOLERANCE  >  DEFAULT_ZERO_TOLERANCE)?  DEFAULT_ZERO_TOLERANCE  :  1;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
167	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]                                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
168	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
169	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
170	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  return  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  return  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  return  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
171	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  result  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  result  +=  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  result  +=  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
172	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  return  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  return  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  return  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
173	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  result  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  result  +=  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  result  +=  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
174	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  null)  {  return  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  null)  {  return  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  null)  {  return  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
175	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
176	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
177	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  return  new  Double(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  return  new  Double(entry.getValue());  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  return  new  Double(entry.getValue());  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
178	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
179	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
180	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
181	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
182	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
183	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
184	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  current.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  current.doubleValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  current.doubleValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
185	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  return  new  Double(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  return  new  Double(entry.getValue());  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  return  new  Double(entry.getValue());  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
186	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
187	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
188	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  return  current.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  return  current.doubleValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  return  current.doubleValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
189	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
190	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
191	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
192	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
193	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
194	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
195	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
196	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  break;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
197	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  break;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
198	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  return  current.value();  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  return  current.value();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  return  current.value();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
199	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  continue;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
200	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  null)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
201	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
202	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
203	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
204	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getKey()!=  null)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getKey()!=  null)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getKey()!=  null)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
205	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  continue;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
206	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValu  [CE]  ';'  expected  [FE]                                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValu  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValu		non-compiled	[CE]  ';'  expected	2	None	add
207	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
208	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  return  current.doubleValue();  }  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  return  current.doubleValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current!=  null)  {  return  current.doubleValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
209	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
210	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  null)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
211	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValu  [CE]  ';'  expected  [FE]                                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValu  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValu		non-compiled	[CE]  ';'  expected	2	None	add
212	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getKey()  ==  null)  {  return  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getKey()  ==  null)  {  return  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getKey()  ==  null)  {  return  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
213	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValu  [CE]  ';'  expected  [FE]                                                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValu  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValu		non-compiled	[CE]  ';'  expected	2	None	add
214	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
215	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
216	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  null)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
217	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                                                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  continue;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
218	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  incompatible  types	1	None	replace
219	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  no  suitable  method  found  for  max(double)  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  no  suitable  method  found  for  max(double)	1	None	replace
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
221	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  1)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
222	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
223	[BUG]  [BUGGY]  double  max  =(deFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  deFAULT_ZERO_TOLERANCE  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(deFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(deFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  deFAULT_ZERO_TOLERANCE	1	None	replace
224	[BUG]  [BUGGY]  double  max  =(deFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  deFAULT_ZERO_TOLERANCE  [FE]              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(deFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(deFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  deFAULT_ZERO_TOLERANCE	1	None	replace
225	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_MINUTE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_MINUTE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_MINUTE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
226	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
227	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
228	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [FE]  AssertionFailedError  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
229	[BUG]  [BUGGY]  double  max  =(DeFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  DeFAULT_ZERO_TOLERANCE  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DeFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DeFAULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DeFAULT_ZERO_TOLERANCE	1	None	replace
230	[BUG]  [BUGGY]  double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  value  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
231	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  incompatible  types  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  incompatible  types	1	None	replace
232	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
233	[BUG]  [BUGGY]  double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  value  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
234	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_MINUTE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_MINUTE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_MINUTE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
235	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  no  suitable  method  found  for  max(double)  [FE]                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  no  suitable  method  found  for  max(double)	1	None	replace
236	[BUG]  [BUGGY]  double  max  =(this.value  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  value  [FE]                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(this.value  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(this.value  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
237	[BUG]  [BUGGY]  double  max  =(this.value  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  this.value;  [CE]  cannot  find  symbol  value  [FE]                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(this.value  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  this.value;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(this.value  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  this.value;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
238	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0.0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  >  0.0)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
240	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0.0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [FE]  AssertionFailedError  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0.0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  >  0.0)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
241	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.SECONDS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
242	[BUG]  [BUGGY]  double  max  =(this.value  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  this.value);  [CE]  cannot  find  symbol  value  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(this.value  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  this.value);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(this.value  <=  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  this.value);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
243	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE).doubleValue();  [CE]  incompatible  types  [FE]                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE).doubleValue();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE).doubleValue();	double  max  =  0;  	non-compiled	[CE]  incompatible  types	1	None	replace
244	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_DAY)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  2)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  <  2)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
246	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  2)?  0  :  DEFAULT_ZERO_TOLERANCE;  [FE]  AssertionFailedError  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  2)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  2)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
247	[BUG]  [BUGGY]  double  max  =(defULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  defULT_ZERO_TOLERANCE  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(defULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(defULT_ZERO_TOLERANCE  <  1)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  defULT_ZERO_TOLERANCE	1	None	replace
248	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  1)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  1)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
249	[BUG]  [BUGGY]  double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  this.value);  [CE]  cannot  find  symbol  value  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  this.value);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(this.value  ==  DEFAULT_ZERO_TOLERANCE)?  0  :  Math.max(DEFAULT_ZERO_TOLERANCE,  this.value);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
250	[BUG]  [BUGGY]  double  max  =(deFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [CE]  cannot  find  symbol  deFAULT_ZERO_TOLERANCE  [FE]                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(deFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(deFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  0;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  deFAULT_ZERO_TOLERANCE	1	None	replace
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  1;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	add	double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  1;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
252	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  1;  [FE]  AssertionFailedError  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  1;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  >  0)?  DEFAULT_ZERO_TOLERANCE  :  1;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  	1	2	replace
253	[BUG]  [BUGGY]  double  max  =(deFAULT_ZERO_TOLERANCE  <  0)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  cannot  find  symbol  deFAULT_ZERO_TOLERANCE  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(deFAULT_ZERO_TOLERANCE  <  0)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(deFAULT_ZERO_TOLERANCE  <  0)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  deFAULT_ZERO_TOLERANCE	1	None	replace
254	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  >  0)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
255	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >)?  0  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  <  >)?  0  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  <  >)?  0  :  DEFAULT_ZERO_TOLERANCE;	double  max  =  0;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
256	[BUG]  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DeFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DeFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(DEFAULT_ZERO_TOLERANCE  *  DateTimeConstants.MILLIS_PER_SECOND)?  0  :  Math.max(DeFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	1	None	replace
257	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
258	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  break;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
259	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  break;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
260	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  result  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  result  +=  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  result  +=  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
261	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  continue;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
262	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
263	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
264	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
265	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
266	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  return  new  Double(entry.getValue()  [CE]  ')'  expected  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  return  new  Double(entry.getValue()  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  return  new  Double(entry.getValue()		non-compiled	[CE]  ')'  expected	2	None	add
267	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
268	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  <  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  <  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  <  DEFAULT_ZERO_TOLERANCE)  {  return  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
269	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
270	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  this.value  =  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  this.value  =  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  this.value  =  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
271	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
272	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
273	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
274	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
275	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  continue;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
276	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
277	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValu  [CE]  ';'  expected  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValu  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValu		non-compiled	[CE]  ';'  expected	2	None	add
278	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  break;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
279	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >=  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
280	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  [CE]  illegal  start  of  expression  [FE]                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {		non-compiled	[CE]  illegal  start  of  expression	2	None	add
281	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
282	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  }  [CE]  illegal  start  of  expression  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
283	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  <  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  <  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  <  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
284	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue()  [CE]  ';'  expected  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue()  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue()		non-compiled	[CE]  ';'  expected	2	None	add
285	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.value()  >  DEFAULT_ZERO_TOLERANCE)  {  return  current.value();  }  [CE]  illegal  start  of  expression  [FE]                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.value()  >  DEFAULT_ZERO_TOLERANCE)  {  return  current.value();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.value()  >  DEFAULT_ZERO_TOLERANCE)  {  return  current.value();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
286	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue()  [CE]  ';'  expected  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue()  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.getValue()		non-compiled	[CE]  ';'  expected	2	None	add
287	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  return  new  Double(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  return  new  Double(entry.getValue());  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  return  new  Double(entry.getValue());  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
288	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  continue;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  continue;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
289	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  max  +=  entry.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
290	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.value()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.value();  }  [CE]  illegal  start  of  expression  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.value()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.value();  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.value()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.value();  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
291	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.get  [CE]  ';'  expected  [FE]                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.get  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  +=  current.get		non-compiled	[CE]  ';'  expected	2	None	add
292	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  =  1;  }  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  =  1;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  max  =  1;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
293	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  break;  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  break;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
294	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  }  [CE]  illegal  start  of  expression  [FE]                                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(entry.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
295	[BUG]  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  RuntimeException( " ");  }  [BUGGY]  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	    for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  >  DEFAULT_ZERO_TOLERANCE)  {  throw  new  RuntimeException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
