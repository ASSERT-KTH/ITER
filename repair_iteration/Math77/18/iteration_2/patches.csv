bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  RealVectorFormat)a).getLInfNorm()  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).getLInfNorm()  +  1;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).getLInfNorm()  +  1;	  ((    RealVectorFormat)a).getLInfNorm();    	non-compiled	[CE]  not  a  statement	56	None	replace
2	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setLInfNorm(max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setLInfNorm(max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setLInfNorm(max);	  ((    RealVectorFormat)a).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
3	[BUG]  [BUGGY]  ((  RealVectorFormat)a).getLInfNorm()  +  a;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).getLInfNorm()  +  a;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).getLInfNorm()  +  a;	  ((    RealVectorFormat)a).getLInfNorm();    	non-compiled	[CE]  not  a  statement	56	None	replace
4	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(d,  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(d,  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(d,  max);	  ((    RealVectorFormat)a).setNorm(data,    max);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
5	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(data,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(data,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(data,  max  +  1);	  ((    RealVectorFormat)a).setNorm(data,    max);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
6	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(data,  d);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(data,  d);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(data,  d);	  ((    RealVectorFormat)a).setNorm(data,    max);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
7	[BUG]  [BUGGY]  ((  RealVectorFormat)a).getNorm()  /  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).getNorm()  /  1;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).getNorm()  /  1;	  ((    RealVectorFormat)a).getNorm()    +    1;    	non-compiled	[CE]  not  a  statement	24	None	replace
8	[BUG]  [BUGGY]  ((  RealVectorFormat)a).getNorm()  *  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).getNorm()  *  1;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).getNorm()  *  1;	  ((    RealVectorFormat)a).getNorm()    +    1;    	non-compiled	[CE]  not  a  statement	24	None	replace
9	[BUG]  [BUGGY]  return  data  +  Math.sqrt(a,  max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  +  Math.sqrt(a,  max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  +  Math.sqrt(a,  max);	  return    max    +    Math.sqrt(a,    data);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  return  max  +  Math.sqrt(a,  data.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sqrt(a,  data.length);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sqrt(a,  data.length);	  return    max    +    Math.sqrt(a,    data);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  return  data  +  Math.sqrt(a);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  +  Math.sqrt(a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  +  Math.sqrt(a);	  return    max    +    Math.sqrt(a,    data);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  return  a  +  Math.sqrt(data,  max);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  Math.sqrt(data,  max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  Math.sqrt(data,  max);	  return    max    +    Math.sqrt(data,    a);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  return  data  +  Math.sqrt(max,  a);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  +  Math.sqrt(max,  a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  +  Math.sqrt(max,  a);	  return    max    +    Math.sqrt(data,    a);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  n  =  Math.sqrt(data[a]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  n  =  Math.sqrt(data[a]);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	n  =  Math.sqrt(data[a]);	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
15	[BUG]  [BUGGY]  n  =  Math.sqrt(data[0],  a);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  n  =  Math.sqrt(data[0],  a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	n  =  Math.sqrt(data[0],  a);	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
16	[BUG]  [BUGGY]  n  =  Math.sqrt(data,  a);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  n  =  Math.sqrt(data,  a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	n  =  Math.sqrt(data,  a);	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
17	[BUG]  [BUGGY]  n  =  Math.sqrt(data[0],  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  n  =  Math.sqrt(data[0],  max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	n  =  Math.sqrt(data[0],  max);	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
18	[BUG]  [BUGGY]  double[]  d  =  data.get(a,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data.get(a,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data.get(a,  max  +  1);	  double[]    d    =    data.get(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
19	[BUG]  [BUGGY]  double[]  d  =  this.data.get(a,  max);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  this.data.get(a,  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  this.data.get(a,  max);	  double[]    d    =    data.get(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
20	[BUG]  [BUGGY]  double[]  d  =  data.get(a,  max  +  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data.get(a,  max  +  2);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data.get(a,  max  +  2);	  double[]    d    =    data.get(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
21	[BUG]  [BUGGY]  double[]  d  =  data.get(a,  max  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data.get(a,  max  -  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data.get(a,  max  -  1);	  double[]    d    =    data.get(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
22	[BUG]  [BUGGY]  double[]  d  =  data.get(a  +  max,  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data.get(a  +  max,  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data.get(a  +  max,  max);	  double[]    d    =    data.get(a    +    max);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
23	[BUG]  [BUGGY]  double[]  d  =  data.get(a  +  a);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data.get(a  +  a);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data.get(a  +  a);	  double[]    d    =    data.get(a    +    max);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
24	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setValue(data,  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setValue(data,  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setValue(data,  max);	  ((    RealVectorFormat)a).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
25	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setValue(data.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setValue(data.length);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setValue(data.length);	  ((    RealVectorFormat)a).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
26	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setValue(data[a]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setValue(data[a]);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setValue(data[a]);	  ((    RealVectorFormat)a).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
27	[BUG]  [BUGGY]  Math.sqrt(max,  data.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  Math.sqrt(max,  data.length);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	Math.sqrt(max,  data.length);	  Math.sqrt(max,    data);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
28	[BUG]  [BUGGY]  return  d  +  max;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  d  +  max;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  d  +  max;	  return    max    +    d;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
29	[BUG]  [BUGGY]  return  max  +  d  *  a;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  d  *  a;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  d  *  a;	  return    max    +    d;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
30	[BUG]  [BUGGY]  ((  RealVectorFormat)a).doubleValue()  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).doubleValue()  +  1;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).doubleValue()  +  1;	  ((    RealVectorFormat)a).doubleValue();    	non-compiled	[CE]  not  a  statement	29	None	replace
31	[BUG]  [BUGGY]  ((  RealVectorFormat)a).doubleValue()  +  max;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).doubleValue()  +  max;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).doubleValue()  +  max;	  ((    RealVectorFormat)a).doubleValue();    	non-compiled	[CE]  not  a  statement	29	None	replace
32	[BUG]  [BUGGY]  ((  RealVectorFormat)a).doubleValue()  /  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).doubleValue()  /  2;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).doubleValue()  /  2;	  ((    RealVectorFormat)a).doubleValue();    	non-compiled	[CE]  not  a  statement	29	None	replace
33	[BUG]  [BUGGY]  ((  RealVector)a).getNorm()  /  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).getNorm()  /  1;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).getNorm()  /  1;	  ((    RealVector)a).getNorm()    +    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
34	[BUG]  [BUGGY]  ((  RealVector)a).getNorm()  *  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).getNorm()  *  1;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).getNorm()  *  1;	  ((    RealVector)a).getNorm()    +    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
35	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(a);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(a);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(a);	  ((    RealVectorFormat)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(data.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(data.length  +  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(data.length  +  1);	  ((    RealVectorFormat)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
37	[BUG]  [BUGGY]  Math.sqrt(a,  data.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  Math.sqrt(a,  data.length);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	Math.sqrt(a,  data.length);	  Math.sqrt(a,    data);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
38	[BUG]  [BUGGY]  return  max  +  a.length  -  data.length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  a.length  -  data.length;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  a.length  -  data.length;	  return    max    +    a.length;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
39	[BUG]  [BUGGY]  return  a  +  max.length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  max.length;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  max.length;	  return    max    +    a.length;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
40	[BUG]  [BUGGY]  ((  RealVector)a).getWidth();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).getWidth();  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).getWidth();	  ((    RealVector)a).getLen();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
41	[BUG]  [BUGGY]  ((  RealVector)a).setLen(0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setLen(0);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setLen(0);	  ((    RealVector)a).getLen();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
42	[BUG]  [BUGGY]  double[]  d  =  data[4].doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data[4].doubleValue();  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data[4].doubleValue();	  double[]    d    =    data[3].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  mutation(a,  v1,  v2);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a,  v1,  v2);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a,  v1,  v2);	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
44	[BUG]  [BUGGY]  mutation(a,  0,  a);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a,  0,  a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a,  0,  a);	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
45	[BUG]  [BUGGY]  mutation(a,  v1,  data,  v2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a,  v1,  data,  v2);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a,  v1,  data,  v2);	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
46	[BUG]  [BUGGY]  vice(data[a]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  vice(data[a]);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	vice(data[a]);	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
47	[BUG]  [BUGGY]  Math.sqrt(max,  a);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  Math.sqrt(max,  a);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	Math.sqrt(max,  a);	  Math.sqrt(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
48	[BUG]  [BUGGY]  Math.sqrt(a,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  Math.sqrt(a,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	Math.sqrt(a,  max  +  1);	  Math.sqrt(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
49	[BUG]  [BUGGY]  double[]  d  =  data[a].doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data[a].doubleValue()  +  1;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data[a].doubleValue()  +  1;	  double[]    d    =    data[a].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
50	[BUG]  [BUGGY]  double[]  d  =  data[a].doubleValue()  +  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data[a].doubleValue()  +  max;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data[a].doubleValue()  +  max;	  double[]    d    =    data[a].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
51	[BUG]  [BUGGY]  Double[]  d  =  data[a].doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  Double[]  d  =  data[a].doubleValue();  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	Double[]  d  =  data[a].doubleValue();	  double[]    d    =    data[a].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
52	[BUG]  [BUGGY]  max  =  Math.max(data,  Math.abs(a));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  max  =  Math.max(data,  Math.abs(a));  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	max  =  Math.max(data,  Math.abs(a));	  max    =    Math.max(max,    Math.abs(data));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
53	[BUG]  [BUGGY]  max  =  Math.max(a,  Math.abs(data));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  max  =  Math.max(a,  Math.abs(data));  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	max  =  Math.max(a,  Math.abs(data));	  max    =    Math.max(max,    Math.abs(data));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
54	[BUG]  [BUGGY]  return  data  +  Math.sqrt(max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  +  Math.sqrt(max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  +  Math.sqrt(max);	  return    max    +    Math.sqrt(data);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  return  a  +  Math.sqrt(data);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  Math.sqrt(data);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  Math.sqrt(data);	  return    max    +    Math.sqrt(data);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  ((  RealVector)a).setValue(max);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setValue(max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setValue(max);	  ((    RealVector)a).reset();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
57	[BUG]  [BUGGY]  return  max  /  Math.sqrt(data);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sqrt(data);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sqrt(data);	  return    max    /    Math.sqrt(a);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
58	[BUG]  [BUGGY]  return  max  /  Math.sqrt(data,  a);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sqrt(data,  a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sqrt(data,  a);	  return    max    /    Math.sqrt(a);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
59	[BUG]  [BUGGY]  return  a  /  Math.sqrt(max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  /  Math.sqrt(max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  /  Math.sqrt(max);	  return    max    /    Math.sqrt(a);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
60	[BUG]  [BUGGY]  return  max  /  Math.sin(data);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sin(data);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sin(data);	  return    max    /    Math.sin(a);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
61	[BUG]  [BUGGY]  return  max  /  Math.sin(data,  a);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sin(data,  a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sin(data,  a);	  return    max    /    Math.sin(a);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
62	[BUG]  [BUGGY]  return  max  /  Math.sin(a,  max);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sin(a,  max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sin(a,  max);	  return    max    /    Math.sin(a);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
63	[BUG]  [BUGGY]  Math.sqrt(max,  d);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  Math.sqrt(max,  d);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	Math.sqrt(max,  d);	  Math.sqrt(d,    max);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
64	[BUG]  [BUGGY]  Math.sqrt(d,  a);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  Math.sqrt(d,  a);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	Math.sqrt(d,  a);	  Math.sqrt(d,    max);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
65	[BUG]  [BUGGY]  ((  RealVector)a).getNorm()  *  2;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).getNorm()  *  2;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).getNorm()  *  2;	  ((    RealVector)a).getNorm()    /    2;    	non-compiled	[CE]  not  a  statement	42	None	replace
66	[BUG]  [BUGGY]  ((  RealVector)a).getNorm()  +  2;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).getNorm()  +  2;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).getNorm()  +  2;	  ((    RealVector)a).getNorm()    /    2;    	non-compiled	[CE]  not  a  statement	42	None	replace
67	[BUG]  [BUGGY]  mutation(a)  ==  null?  max  :  Math.abs(a));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  ==  null?  max  :  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  ==  null?  max  :  Math.abs(a));	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	51	None	replace
68	[BUG]  [BUGGY]  mutation(a)  ==  null?  max  :  Math.min(a,  max);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  ==  null?  max  :  Math.min(a,  max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  ==  null?  max  :  Math.min(a,  max);	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	51	None	replace
69	[BUG]  [BUGGY]  mutation(a)  ==  null?  max  :  Math.floor(a));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  ==  null?  max  :  Math.floor(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  ==  null?  max  :  Math.floor(a));	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	51	None	replace
70	[BUG]  [BUGGY]  mutation(a)  ==  null?  max  :  a;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  ==  null?  max  :  a;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  ==  null?  max  :  a;	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	51	None	replace
71	[BUG]  [BUGGY]  return  Math.sqrt(data[0],  Math.sqrt(max));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  Math.sqrt(data[0],  Math.sqrt(max));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  Math.sqrt(data[0],  Math.sqrt(max));	  return    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
72	[BUG]  [BUGGY]  return  Math.sqrt(data[0],  Math.sqrt(a,  max));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  Math.sqrt(data[0],  Math.sqrt(a,  max));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  Math.sqrt(data[0],  Math.sqrt(a,  max));	  return    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
73	[BUG]  [BUGGY]  return  Math.sqrt(data[0],  Math.sqrt(a),  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  Math.sqrt(data[0],  Math.sqrt(a),  max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  Math.sqrt(data[0],  Math.sqrt(a),  max);	  return    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
74	[BUG]  [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.pow(10,  a));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.pow(10,  a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  +  Math.sqrt(data[0],  Math.pow(10,  a));	  return    max    +    Math.sqrt(data[0],    Math.pow(10,    a));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
75	[BUG]  [BUGGY]  return  max  /  Math.sqrt(data[0],  Math.pow(10,  a));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sqrt(data[0],  Math.pow(10,  a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sqrt(data[0],  Math.pow(10,  a));	  return    max    +    Math.sqrt(data[0],    Math.pow(10,    a));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
76	[BUG]  [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.pow(10,  a),  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.pow(10,  a),  max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sqrt(data[0],  Math.pow(10,  a),  max);	  return    max    +    Math.sqrt(data[0],    Math.pow(10,    a));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
77	[BUG]  [BUGGY]  return  max  +  Math.sin(a,  data);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(a,  data);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(a,  data);	  return    max    +    Math.sin(data,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
78	[BUG]  [BUGGY]  return  a  +  Math.sin(data,  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  Math.sin(data,  max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  Math.sin(data,  max);	  return    max    +    Math.sin(data,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
79	[BUG]  [BUGGY]  return  data  +  Math.sin(max,  a);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  +  Math.sin(max,  a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  +  Math.sin(max,  a);	  return    max    +    Math.sin(data,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
80	[BUG]  [BUGGY]  return  data  +  Math.sin(a,  max);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  +  Math.sin(a,  max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  +  Math.sin(a,  max);	  return    max    +    Math.sin(data,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
81	[BUG]  [BUGGY]  max  =  Math.max(max,  Math.abs(a  /  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  max  =  Math.max(max,  Math.abs(a  /  1));  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	max  =  Math.max(max,  Math.abs(a  /  1));	  max    =    Math.max(max,    Math.abs(a    +    1));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
82	[BUG]  [BUGGY]  max  =  Math.min(max,  Math.abs(a  -  1));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  max  =  Math.min(max,  Math.abs(a  -  1));  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	max  =  Math.min(max,  Math.abs(a  -  1));	  max    =    Math.min(max,    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
83	[BUG]  [BUGGY]  max  =  Math.min(a,  Math.abs(max));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  max  =  Math.min(a,  Math.abs(max));  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	max  =  Math.min(a,  Math.abs(max));	  max    =    Math.min(max,    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  max  =  Math.min(max,  Math.abs(a  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  max  =  Math.min(max,  Math.abs(a  +  1));  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	max  =  Math.min(max,  Math.abs(a  +  1));	  max    =    Math.min(max,    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
85	[BUG]  [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.max(a));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.max(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  +  Math.sqrt(data[0],  Math.max(a));	  return    max    +    Math.sqrt(data[0],    Math.max(a));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
86	[BUG]  [BUGGY]  return  data[0].sqrt(max  +  Math.sqrt(a),  Math.max(max));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0].sqrt(max  +  Math.sqrt(a),  Math.max(max));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0].sqrt(max  +  Math.sqrt(a),  Math.max(max));	  return    max    +    Math.sqrt(data[0],    Math.max(a));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
87	[BUG]  [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.min(a,  max));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.min(a,  max));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sqrt(data[0],  Math.min(a,  max));	  return    max    +    Math.sqrt(data[0],    Math.max(a));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
88	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(a);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(a);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(a);	  ((    RealVector)a).setNorm(data);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
89	[BUG]  [BUGGY]  return  data[0]  /  Math.sqrt(data[0],  Math.abs(a));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  /  Math.sqrt(data[0],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  /  Math.sqrt(data[0],  Math.abs(a));	  return    max    /    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
90	[BUG]  [BUGGY]  return  max  /  Math.sqrt(data[0],  Math.max(a));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sqrt(data[0],  Math.max(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sqrt(data[0],  Math.max(a));	  return    max    /    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
91	[BUG]  [BUGGY]  return  data[0].sqrt(max  /  Math.sqrt(a),  Math.abs(max));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0].sqrt(max  /  Math.sqrt(a),  Math.abs(max));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0].sqrt(max  /  Math.sqrt(a),  Math.abs(max));	  return    max    /    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
92	[BUG]  [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.ceil(a));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.ceil(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  +  Math.sqrt(data[0],  Math.ceil(a));	  return    max    +    Math.sqrt(data[0],    Math.ceil(a));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
93	[BUG]  [BUGGY]  return  max  /  Math.sqrt(data[0],  Math.ceil(a));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sqrt(data[0],  Math.ceil(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sqrt(data[0],  Math.ceil(a));	  return    max    +    Math.sqrt(data[0],    Math.ceil(a));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
94	[BUG]  [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.ceil(a)-  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.ceil(a)-  1);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sqrt(data[0],  Math.ceil(a)-  1);	  return    max    +    Math.sqrt(data[0],    Math.ceil(a));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
95	[BUG]  [BUGGY]  double[]  d  =  this.data.get(a  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  this.data.get(a  +  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  this.data.get(a  +  1);	  double[]    d    =    this.data.get(a);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
96	[BUG]  [BUGGY]  double[]  d  =  this.data.get(a  +  max);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  this.data.get(a  +  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  this.data.get(a  +  max);	  double[]    d    =    this.data.get(a);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
97	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data,  Math.abs(a));  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data,  Math.abs(a));  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data,  Math.abs(a));  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
98	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data[0],  Math.abs(a));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data[0],  Math.abs(a));  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data[0],  Math.abs(a));  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
99	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
100	[BUG]  [BUGGY]  mutation(a)  {  if(a  <  =  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE)  {  return  max;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  {  if(a  <  =  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE)  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  {  if(a  <  =  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE)  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
101	[BUG]  [BUGGY]  return  data.length  +  max  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data.length  +  max  -  1;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data.length  +  max  -  1;	  return    max    +    data.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
102	[BUG]  [BUGGY]  return  max  +  data.length  /  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  data.length  /  1;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  data.length  /  1;	  return    max    +    data.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
103	[BUG]  [BUGGY]  return  a  +  data.length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  data.length  -  1;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  data.length  -  1;	  return    max    +    data.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
104	[BUG]  [BUGGY]  return  data  *  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  *  max;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  *  max;	  return    data    +    max;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
105	[BUG]  [BUGGY]  return  data  +  a;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  +  a;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  +  a;	  return    data    +    max;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
106	[BUG]  [BUGGY]  return  a  /  max;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  /  max;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  /  max;	  return    max    /    a;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
107	[BUG]  [BUGGY]  return  max  /  a  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  a  +  1;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  a  +  1;	  return    max    /    a;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
108	[BUG]  [BUGGY]  return  max  /  a.length;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  a.length;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  a.length;	  return    max    /    a;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
109	[BUG]  [BUGGY]  return  max  /  a  +  data.length;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  a  +  data.length;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  a  +  data.length;	  return    max    /    a;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
110	[BUG]  [BUGGY]  if(a  <  =  data.length)  {  return  max;  }  else  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  data.length)  {  return  max;  }  else  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  data.length)  {  return  max;  }  else  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
111	[BUG]  [BUGGY]  if(a  <  max)  {  return  max;  }  else  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  max)  {  return  max;  }  else  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  max)  {  return  max;  }  else  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
112	[BUG]  [BUGGY]  if(a  <  =  0)  {  return  max;  }  else  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  0)  {  return  max;  }  else  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  0)  {  return  max;  }  else  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
113	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(max,  data.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(max,  data.length);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(max,  data.length);	  ((    RealVector)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
114	[BUG]  [BUGGY]  return  data  +  Math.sin(max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  +  Math.sin(max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  +  Math.sin(max);	  return    max    +    Math.sin(data);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
115	[BUG]  [BUGGY]  return  a  +  Math.sin(data);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  Math.sin(data);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  Math.sin(data);	  return    max    +    Math.sin(data);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
116	[BUG]  [BUGGY]  return  data  *  Math.sin(max);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  *  Math.sin(max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  *  Math.sin(max);	  return    max    +    Math.sin(data);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
117	[BUG]  [BUGGY]  return  data.length  /  max;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data.length  /  max;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data.length  /  max;	  return    data.length    +    max;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
118	[BUG]  [BUGGY]  return  data.length  +  a;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data.length  +  a;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data.length  +  a;	  return    data.length    +    max;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
119	[BUG]  [BUGGY]  return  data.length  *  max;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data.length  *  max;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data.length  *  max;	  return    data.length    +    max;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
120	[BUG]  [BUGGY]  return  data[0].sqrt(max  +  Math.sqrt(data[1],  Math.abs(a));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0].sqrt(max  +  Math.sqrt(data[1],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0].sqrt(max  +  Math.sqrt(data[1],  Math.abs(a));	  return    data[0].sqrt(max    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  ')'  expected	22	None	replace
121	[BUG]  [BUGGY]  return  data[0].sqrt(a  +  Math.sqrt(data[0],  Math.abs(a));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0].sqrt(a  +  Math.sqrt(data[0],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0].sqrt(a  +  Math.sqrt(data[0],  Math.abs(a));	  return    data[0].sqrt(max    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  ')'  expected	22	None	replace
122	[BUG]  [BUGGY]  return  data[1].sqrt(max  +  Math.sqrt(data[1],  Math.abs(a));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[1].sqrt(max  +  Math.sqrt(data[1],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[1].sqrt(max  +  Math.sqrt(data[1],  Math.abs(a));	  return    data[0].sqrt(max    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  ')'  expected	22	None	replace
123	[BUG]  [BUGGY]  return  data[0].sqrt(a  +  Math.sqrt(data[0],  Math.abs(max));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0].sqrt(a  +  Math.sqrt(data[0],  Math.abs(max));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0].sqrt(a  +  Math.sqrt(data[0],  Math.abs(max));	  return    data[0].sqrt(max    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  ')'  expected	22	None	replace
124	[BUG]  [BUGGY]  return  data  +  a.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  +  a.length;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  +  a.length;	  return    a    +    data.length;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
125	[BUG]  [BUGGY]  return  data  *  a.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  *  a.length;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  *  a.length;	  return    a    +    data.length;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
126	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(d,  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(d,  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(d,  max);	  ((    RealVector)a).setNorm(data,    max);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
127	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(data,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(data,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(data,  max  +  1);	  ((    RealVector)a).setNorm(data,    max);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
128	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(data,  v1,  max);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(data,  v1,  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(data,  v1,  max);	  ((    RealVector)a).setNorm(data,    max);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
129	[BUG]  [BUGGY]  double[]  d  =  data.get(a  +  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data.get(a  +  2);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data.get(a  +  2);	  double[]    d    =    data.get(a    +    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
130	[BUG]  [BUGGY]  double[]  d  =  data.get(a  +  1,  max);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data.get(a  +  1,  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data.get(a  +  1,  max);	  double[]    d    =    data.get(a    +    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
131	[BUG]  [BUGGY]  return  a  +  Math.sin(max)/  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  Math.sin(max)/  2;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  Math.sin(max)/  2;	  return    max    +    Math.sin(a)/    2;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
132	[BUG]  [BUGGY]  return  max  +  Math.sin(a)/  2  +  data;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(a)/  2  +  data;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(a)/  2  +  data;	  return    max    +    Math.sin(a)/    2;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
133	[BUG]  [BUGGY]  return  max  +  Math.sin(a)/  2.0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(a)/  2.0;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(a)/  2.0;	  return    max    +    Math.sin(a)/    2;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
134	[BUG]  [BUGGY]  return  a  +  max  +  data.length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  max  +  data.length;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  max  +  data.length;	  return    a    +    max;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
135	[BUG]  [BUGGY]  return  a  +  max  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  max  +  1;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  max  +  1;	  return    a    +    max;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
136	[BUG]  [BUGGY]  return  a  +  data;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  data;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  data;	  return    a    +    max;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
137	[BUG]  [BUGGY]  return  data[0]  +  Math.sqrt(data[1],  Math.abs(a));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  +  Math.sqrt(data[1],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  +  Math.sqrt(data[1],  Math.abs(a));	  return    data[0]    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
138	[BUG]  [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.abs(max));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.abs(max));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  +  Math.sqrt(data[0],  Math.abs(max));	  return    data[0]    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
139	[BUG]  [BUGGY]  return  data[1]  +  Math.sqrt(data[0],  Math.abs(a));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[1]  +  Math.sqrt(data[0],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[1]  +  Math.sqrt(data[0],  Math.abs(a));	  return    data[0]    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
140	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(v);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(v);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(v);	  ((    RealVector)a).setNorm(d);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
141	[BUG]  [BUGGY]  return  data[0]  +  Math.sqrt(data[1],  Math.sqrt(a));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  +  Math.sqrt(data[1],  Math.sqrt(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  +  Math.sqrt(data[1],  Math.sqrt(a));	  return    data[0]    +    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
142	[BUG]  [BUGGY]  return  data[0]  /  Math.sqrt(data[0],  Math.sqrt(a));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  /  Math.sqrt(data[0],  Math.sqrt(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  /  Math.sqrt(data[0],  Math.sqrt(a));	  return    data[0]    +    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
143	[BUG]  [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.sqrt(max));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.sqrt(max));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  +  Math.sqrt(data[0],  Math.sqrt(max));	  return    data[0]    +    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
144	[BUG]  [BUGGY]  ((  RealVectorFormat)a).set(data,  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).set(data,  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).set(data,  max);	  ((    RealVectorFormat)a).set(max);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
145	[BUG]  [BUGGY]  ((  RealVectorFormat)a).set(f);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).set(f);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).set(f);	  ((    RealVectorFormat)a).set(max);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
146	[BUG]  [BUGGY]  ((  RealVectorFormat)a).set(data);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).set(data);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).set(data);	  ((    RealVectorFormat)a).set(max);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
147	[BUG]  [BUGGY]  ((  RealVectorFormat)a).set(max  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).set(max  +  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).set(max  +  1);	  ((    RealVectorFormat)a).set(max);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
148	[BUG]  [BUGGY]  n  =  Math.floor(a)/  data[0].doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  n  =  Math.floor(a)/  data[0].doubleValue();  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	n  =  Math.floor(a)/  data[0].doubleValue();	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
149	[BUG]  [BUGGY]  n  =  Math.floor(a)/  data[0].getNorm();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  n  =  Math.floor(a)/  data[0].getNorm();  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	n  =  Math.floor(a)/  data[0].getNorm();	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
150	[BUG]  [BUGGY]  return  max  /  Math.sqrt(data[1],  Math.sqrt(a));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sqrt(data[1],  Math.sqrt(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sqrt(data[1],  Math.sqrt(a));	  return    max    +    Math.sqrt(data[1],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
151	[BUG]  [BUGGY]  return  max  +  Math.sin(a,  max  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(a,  max  -  1);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(a,  max  -  1);	  return    max    +    Math.sin(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
152	[BUG]  [BUGGY]  return  max  +  a  *  Math.sin(data);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  a  *  Math.sin(data);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  a  *  Math.sin(data);	  return    max    +    a    *    Math.sin(a);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
153	[BUG]  [BUGGY]  return  max  +  a  *  Math.sin(max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  a  *  Math.sin(max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  a  *  Math.sin(max);	  return    max    +    a    *    Math.sin(a);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
154	[BUG]  [BUGGY]  return  max  +  data  *  Math.sin(a);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  data  *  Math.sin(a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  data  *  Math.sin(a);	  return    max    +    a    *    Math.sin(a);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
155	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setValue(d);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setValue(d);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setValue(d);	  ((    RealVectorFormat)a).setValue(data);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
156	[BUG]  [BUGGY]  ((  RealVectorFormat)data).setValue(a);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)data).setValue(a);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)data).setValue(a);	  ((    RealVectorFormat)a).setValue(data);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
157	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setValue(this.data);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setValue(this.data);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setValue(this.data);	  ((    RealVectorFormat)a).setValue(data);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
158	[BUG]  [BUGGY]  return  max  *  Math.sqrt(data[0],  Math.sqrt(a));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  *  Math.sqrt(data[0],  Math.sqrt(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  *  Math.sqrt(data[0],  Math.sqrt(a));	  return    max    /    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
159	[BUG]  [BUGGY]  return  max  /  Math.sqrt(data[0],  Math.sqrt(a,  max));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sqrt(data[0],  Math.sqrt(a,  max));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sqrt(data[0],  Math.sqrt(a,  max));	  return    max    /    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
160	[BUG]  [BUGGY]  ((  RealVector)a).getLInfNorm()  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).getLInfNorm()  +  1;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).getLInfNorm()  +  1;	  ((    RealVector)a).getLInfNorm();    	non-compiled	[CE]  not  a  statement	49	None	replace
161	[BUG]  [BUGGY]  ((  RealVector)a).getLenfNorm();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).getLenfNorm();  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).getLenfNorm();	  ((    RealVector)a).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
162	[BUG]  [BUGGY]  ((  RealVector)a).getLInfNorm()  +  a;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).getLInfNorm()  +  a;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).getLInfNorm()  +  a;	  ((    RealVector)a).getLInfNorm();    	non-compiled	[CE]  not  a  statement	49	None	replace
163	[BUG]  [BUGGY]  return  d.length  +  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  d.length  +  max;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  d.length  +  max;	  return    max    +    d.length;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
164	[BUG]  [BUGGY]  return  d  +  max.length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  d  +  max.length;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  d  +  max.length;	  return    max    +    d.length;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
165	[BUG]  [BUGGY]  ((  RealVectorFormat)a).getNorm()  *  2;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).getNorm()  *  2;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).getNorm()  *  2;	  ((    RealVectorFormat)a).getNorm()    /    2;    	non-compiled	[CE]  not  a  statement	25	None	replace
166	[BUG]  [BUGGY]  ((  RealVectorFormat)a).getNorm()  +  2;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).getNorm()  +  2;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).getNorm()  +  2;	  ((    RealVectorFormat)a).getNorm()    /    2;    	non-compiled	[CE]  not  a  statement	25	None	replace
167	[BUG]  [BUGGY]  return  max  *  Math.sqrt(data[1],  Math.sqrt(a));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  *  Math.sqrt(data[1],  Math.sqrt(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  *  Math.sqrt(data[1],  Math.sqrt(a));	  return    max    +    Math.sqrt(data[1],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
168	[BUG]  [BUGGY]  return  max  /  a.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  a.doubleValue();  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  a.doubleValue();	  return    max    /    a;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
169	[BUG]  [BUGGY]  return  data  +  Math.sin(a);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  +  Math.sin(a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  +  Math.sin(a);	  return    max    +    Math.sin(data);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
170	[BUG]  [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.min(a));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.min(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sqrt(data[0],  Math.min(a));	  return    max    +    Math.sqrt(data[0],    Math.max(a));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
171	[BUG]  [BUGGY]  max  =  Math.min(max,  Math.abs(data));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  max  =  Math.min(max,  Math.abs(data));  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	max  =  Math.min(max,  Math.abs(data));	  max    =    Math.min(max,    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
172	[BUG]  [BUGGY]  if(a  <  =  data)  {  return  max;  }  else  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  data)  {  return  max;  }  else  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  data)  {  return  max;  }  else  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
173	[BUG]  [BUGGY]  if(a  <  =  0.0)  {  return  max;  }  else  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  0.0)  {  return  max;  }  else  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  0.0)  {  return  max;  }  else  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
174	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(max,  data);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(max,  data);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(max,  data);	  ((    RealVector)a).setNorm(data);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
175	[BUG]  [BUGGY]  return  data[0].sqrt(data[1],  Math.sqrt(a));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0].sqrt(data[1],  Math.sqrt(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0].sqrt(data[1],  Math.sqrt(a));	  return    data[0].sqrt(max    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
176	[BUG]  [BUGGY]  return  data[0].sqrt(max  /  Math.sqrt(data[0],  Math.abs(a));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0].sqrt(max  /  Math.sqrt(data[0],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0].sqrt(max  /  Math.sqrt(data[0],  Math.abs(a));	  return    data[0].sqrt(max    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  ')'  expected	22	None	replace
177	[BUG]  [BUGGY]  ((  RealVector)a).setLenient(false);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setLenient(false);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setLenient(false);	  ((    RealVector)a).reset();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
178	[BUG]  [BUGGY]  ((  RealVector)a).setValue(data);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setValue(data);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setValue(data);	  ((    RealVector)a).reset();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
179	[BUG]  [BUGGY]  if(a  <  max)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  max)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  max)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
180	[BUG]  [BUGGY]  if(max  <  =  a)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(max  <  =  a)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(max  <  =  a)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
181	[BUG]  [BUGGY]  if(a  <  =  data)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  data)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  data)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
182	[BUG]  [BUGGY]  return  data  *  a;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  *  a;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  *  a;	  return    data    +    max;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
183	[BUG]  [BUGGY]  return  max  +  Math.sin(data,  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(data,  max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(data,  max);	  return    max    +    Math.sin(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
184	[BUG]  [BUGGY]  return  max  +  Math.sin(a,  v2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(a,  v2);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(a,  v2);	  return    max    +    Math.sin(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
185	[BUG]  [BUGGY]  ((  RealVector)a).setLen(max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setLen(max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setLen(max);	  ((    RealVector)a).getLen();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
186	[BUG]  [BUGGY]  return  max  +  Math.sqrt(data[1],  Math.ceil(a));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sqrt(data[1],  Math.ceil(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sqrt(data[1],  Math.ceil(a));	  return    max    +    Math.sqrt(data[0],    Math.ceil(a));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
187	[BUG]  [BUGGY]  ((  RealVectorFormat)data).setNorm(max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)data).setNorm(max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)data).setNorm(max);	  ((    RealVectorFormat)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
188	[BUG]  [BUGGY]  ((  RealVectorFormat)data).setNorm(a);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)data).setNorm(a);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)data).setNorm(a);	  ((    RealVectorFormat)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
189	[BUG]  [BUGGY]  return  data[1]  +  Math.sqrt(data[1],  Math.abs(a));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[1]  +  Math.sqrt(data[1],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[1]  +  Math.sqrt(data[1],  Math.abs(a));	  return    data[0]    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
190	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(data,  max  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(data,  max  -  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(data,  max  -  1);	  ((    RealVector)a).setNorm(data,    max);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
191	[BUG]  [BUGGY]  return  a  *  max;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  *  max;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  *  max;	  return    a    +    max;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
192	[BUG]  [BUGGY]  return  a  +  max  +  data;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  +  max  +  data;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  +  max  +  data;	  return    a    +    max;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
193	[BUG]  [BUGGY]  ((  RealVectorFormat)a).getLenfNorm();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).getLenfNorm();  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).getLenfNorm();	  ((    RealVectorFormat)a).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
194	[BUG]  [BUGGY]  if(a  <  =  data)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  data)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  data)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
195	[BUG]  [BUGGY]  if(a  <  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
196	[BUG]  [BUGGY]  if(a  <  max)  {  return  max;  }  else  if(a  >  data)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  max)  {  return  max;  }  else  if(a  >  data)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  max)  {  return  max;  }  else  if(a  >  data)  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
197	[BUG]  [BUGGY]  mutation(a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	32	None	replace
198	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(MaximumFractionDigits(data.length));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(MaximumFractionDigits(data.length));  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(MaximumFractionDigits(data.length));	  ((    RealVector)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
199	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(MaximumFractionDigits(max,  data.length));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(MaximumFractionDigits(max,  data.length));  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(MaximumFractionDigits(max,  data.length));	  ((    RealVector)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
200	[BUG]  [BUGGY]  ((  RealVectorFormat)a).getLInfNorm()  /  2;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).getLInfNorm()  /  2;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).getLInfNorm()  /  2;	  ((    RealVectorFormat)a).getNorm()    /    2;    	non-compiled	[CE]  not  a  statement	25	None	replace
201	[BUG]  [BUGGY]  return  data[0],  Math.sqrt(max);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0],  Math.sqrt(max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0],  Math.sqrt(max);	  return    max    /    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  ';'  expected	23	None	replace
202	[BUG]  [BUGGY]  return  max  *  Math.sqrt(data[0],  Math.abs(a));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  *  Math.sqrt(data[0],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  *  Math.sqrt(data[0],  Math.abs(a));	  return    max    /    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
203	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(Max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(Max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(Max);	  ((    RealVector)a).setNorm(d);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
204	[BUG]  [BUGGY]  Math.sqrt(max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  Math.sqrt(max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	Math.sqrt(max);	  Math.sqrt(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
205	[BUG]  [BUGGY]  if(a  <  max)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  max)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  max)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
206	[BUG]  [BUGGY]  if(a  <  =  data)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  data)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  data)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
207	[BUG]  [BUGGY]  mutationIfNull(a)  {  if(max  <  =  0)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutationIfNull(a)  {  if(max  <  =  0)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutationIfNull(a)  {  if(max  <  =  0)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	51	None	replace
208	[BUG]  [BUGGY]  NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE;	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  not  a  statement	79	None	replace
209	[BUG]  [BUGGY]  NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE  =  false;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE  =  false;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE  =  false;	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
210	[BUG]  [BUGGY]  NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE.append(data[a]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE.append(data[a]);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE.append(data[a]);	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
211	[BUG]  [BUGGY]  NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE.append(data[a]));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE.append(data[a]));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	NegativeFormat.DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE.append(data[a]));	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
212	[BUG]  [BUGGY]  return  data[0]  +  Math.sqrt(data[1],  Math.pow(10,  a));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  +  Math.sqrt(data[1],  Math.pow(10,  a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  +  Math.sqrt(data[1],  Math.pow(10,  a));	  return    max    +    Math.sqrt(data[0],    Math.pow(10,    a));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
213	[BUG]  [BUGGY]  return  a  /  Math.sin(max);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  /  Math.sin(max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  /  Math.sin(max);	  return    max    /    Math.sin(a);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
214	[BUG]  [BUGGY]  return  max  *  Math.sin(a);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  *  Math.sin(a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  *  Math.sin(a);	  return    max    /    Math.sin(a);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
215	[BUG]  [BUGGY]  return  data  *  Math.sqrt(max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data  *  Math.sqrt(max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data  *  Math.sqrt(max);	  return    max    +    Math.sqrt(data);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
216	[BUG]  [BUGGY]  double[]  d  =  data.get(max  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data.get(max  +  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data.get(max  +  1);	  double[]    d    =    data.get(a    +    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
217	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(max,  f);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(max,  f);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(max,  f);	  ((    RealVector)a).setNorm(f);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
218	[BUG]  [BUGGY]  max  =  Math.max(max,  Math.abs(data  -  1));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  max  =  Math.max(max,  Math.abs(data  -  1));  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	max  =  Math.max(max,  Math.abs(data  -  1));	  max    =    Math.max(max,    Math.abs(a    -    1));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
219	[BUG]  [BUGGY]  return  data[1]  +  Math.sqrt(data[1],  Math.sqrt(a));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[1]  +  Math.sqrt(data[1],  Math.sqrt(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[1]  +  Math.sqrt(data[1],  Math.sqrt(a));	  return    data[0]    +    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
220	[BUG]  [BUGGY]  return  data[1]  +  Math.sqrt(data[0],  Math.sqrt(a));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[1]  +  Math.sqrt(data[0],  Math.sqrt(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[1]  +  Math.sqrt(data[0],  Math.sqrt(a));	  return    data[0]    +    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
221	[BUG]  [BUGGY]  ((  RealVectorFormat)a).doubleValue()  +  Math.sin(max);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).doubleValue()  +  Math.sin(max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).doubleValue()  +  Math.sin(max);	  ((    RealVectorFormat)a).doubleValue();    	non-compiled	[CE]  not  a  statement	29	None	replace
222	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(Max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(Max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(Max);	  ((    RealVectorFormat)a).setNorm(d);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
223	[BUG]  [BUGGY]  return  max  +  a.length  *  data.length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  a.length  *  data.length;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  a.length  *  data.length;	  return    max    +    a.length;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
224	[BUG]  [BUGGY]  Math.sqrt(data,  0,  a);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  Math.sqrt(data,  0,  a);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	Math.sqrt(data,  0,  a);	  Math.sqrt(data,    a);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
225	[BUG]  [BUGGY]  ((  RealVectorFormat)a).addValue(max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).addValue(max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).addValue(max);	  ((    RealVectorFormat)a).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
226	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(data,  max  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(data,  max  -  1);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(data,  max  -  1);	  ((    RealVectorFormat)a).setNorm(data,    max);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
227	[BUG]  [BUGGY]  mutation(a)  {  if(a  <  =  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  {  if(a  <  =  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  {  if(a  <  =  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
228	[BUG]  [BUGGY]  mutation(a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
229	[BUG]  [BUGGY]  safeMultiply(data,  a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  safeMultiply(data,  a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	safeMultiply(data,  a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
230	[BUG]  [BUGGY]  double[]  d  =  data.get(a  *  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data.get(a  *  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data.get(a  *  max);	  double[]    d    =    data.get(a    +    max);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
231	[BUG]  [BUGGY]  return  max  +  Math.sin(a)/  2  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(a)/  2  +  1;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(a)/  2  +  1;	  return    max    +    Math.sin(a)/    2;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
232	[BUG]  [BUGGY]  return  max  +  Math.sin(a)/  2  +  d;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(a)/  2  +  d;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(a)/  2  +  d;	  return    max    +    Math.sin(a)/    2;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
233	[BUG]  [BUGGY]  return  Math.sqrt(data[1],  Math.sqrt(a));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  Math.sqrt(data[1],  Math.sqrt(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  Math.sqrt(data[1],  Math.sqrt(a));	  return    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
234	[BUG]  [BUGGY]  return  Math.sqrt(data[0],  Math.abs(a));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  Math.sqrt(data[0],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  Math.sqrt(data[0],  Math.abs(a));	  return    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
235	[BUG]  [BUGGY]  return  data[0],  Math.sqrt(a));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0],  Math.sqrt(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0],  Math.sqrt(a));	  return    max    /    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  ';'  expected	15	None	replace
236	[BUG]  [BUGGY]  mutation(a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
237	[BUG]  [BUGGY]  safeMultiply(a,  data)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  safeMultiply(a,  data)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	safeMultiply(a,  data)  {  if(a  <  =  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
238	[BUG]  [BUGGY]  mutation(a)  {  if(a  <  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  {  if(a  <  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  {  if(a  <  max)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
239	[BUG]  [BUGGY]  mutation(a)  {  if(max  <  =  0)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  mutation(a)  {  if(max  <  =  0)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	mutation(a)  {  if(max  <  =  0)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	31	None	replace
240	[BUG]  [BUGGY]  ((  RealVector)a).setLInfNorm(max);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setLInfNorm(max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setLInfNorm(max);	  ((    RealVector)a).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
241	[BUG]  [BUGGY]  Math.sqrt(a,  max  +  data.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  Math.sqrt(a,  max  +  data.length);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	Math.sqrt(a,  max  +  data.length);	  Math.sqrt(a,    max);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
242	[BUG]  [BUGGY]  return  max  /  d;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  d;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  d;	  return    max    /    a;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
243	[BUG]  [BUGGY]  return  max  /  data;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  data;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  data;	  return    max    /    a;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
244	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
245	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  parent.getMaxNorm())  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  parent.getMaxNorm())  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  parent.getMaxNorm())  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
246	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  parent.getParent())  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
247	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
248	[BUG]  [BUGGY]  ((  RealVectorFormat)a).clear();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).clear();  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).clear();	  ((    RealVectorFormat)a).set();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
249	[BUG]  [BUGGY]  return  max  +  Math.sin(a)/  2  *  data;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(a)/  2  *  data;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(a)/  2  *  data;	  return    max    +    Math.sin(a)/    2;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
250	[BUG]  [BUGGY]  return  max  +  Math.sin(data)/  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(data)/  2;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(data)/  2;	  return    max    +    Math.sin(a)/    2;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
251	[BUG]  [BUGGY]  if(a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
252	[BUG]  [BUGGY]  if(a  <  =  data)  {  return  max;  }  else  if(a  >  max)  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  data)  {  return  max;  }  else  if(a  >  max)  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  data)  {  return  max;  }  else  if(a  >  max)  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
253	[BUG]  [BUGGY]  if(a  <  =  data.length)  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  data.length)  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  data.length)  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
254	[BUG]  [BUGGY]  if(a  <  =  max)  {  return  data[0];  }  else  if(a  >  max)  {  return  data[1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  max)  {  return  data[0];  }  else  if(a  >  max)  {  return  data[1];  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  max)  {  return  data[0];  }  else  if(a  >  max)  {  return  data[1];  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
255	[BUG]  [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.pow(10,  a)+  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.pow(10,  a)+  1);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sqrt(data[0],  Math.pow(10,  a)+  1);	  return    max    +    Math.sqrt(data[0],    Math.pow(10,    a));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
256	[BUG]  [BUGGY]  return  Math.sqrt(data[0],  Math.pow(10,  a));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  Math.sqrt(data[0],  Math.pow(10,  a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  Math.sqrt(data[0],  Math.pow(10,  a));	  return    max    +    Math.sqrt(data[0],    Math.pow(10,    a));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
257	[BUG]  [BUGGY]  return  max  /  Math.sqrt(data[0],  Math.min(a,  max));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sqrt(data[0],  Math.min(a,  max));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sqrt(data[0],  Math.min(a,  max));	  return    max    /    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
258	[BUG]  [BUGGY]  return  max  +  Math.sin(a)*  Math.sin(max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(a)*  Math.sin(max);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(a)*  Math.sin(max);	  return    max    +    a    *    Math.sin(a);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
259	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(max,  data);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(max,  data);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(max,  data);	  ((    RealVectorFormat)a).setNorm(data,    max);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
260	[BUG]  [BUGGY]  ((  RealVector)a).setValue(data,  max);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setValue(data,  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setValue(data,  max);	  ((    RealVector)a).reset();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
261	[BUG]  [BUGGY]  return  data[0].sqrt(data[1]  +  Math.sqrt(data[1],  Math.abs(a));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0].sqrt(data[1]  +  Math.sqrt(data[1],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0].sqrt(data[1]  +  Math.sqrt(data[1],  Math.abs(a));	  return    data[0].sqrt(max    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  ')'  expected	22	None	replace
262	[BUG]  [BUGGY]  return  max  +  Math.sqrt(data[1],  Math.abs(a));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sqrt(data[1],  Math.abs(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sqrt(data[1],  Math.abs(a));	  return    max    +    Math.sqrt(data[1],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
263	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(max,  data.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(max,  data.length);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(max,  data.length);	  ((    RealVectorFormat)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
264	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(data.length  -  max);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(data.length  -  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(data.length  -  max);	  ((    RealVectorFormat)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
265	[BUG]  [BUGGY]  double[]  d  =  data.get(a  +  max,  data.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  data.get(a  +  max,  data.length);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  data.get(a  +  max,  data.length);	  double[]    d    =    data.get(a    +    max);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
266	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
267	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
268	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  parent.getParent())  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
269	[BUG]  [BUGGY]  return  max  +  Math.sin(a,  a);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sin(a,  a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sin(a,  a);	  return    max    +    Math.sin(data,    a);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
270	[BUG]  [BUGGY]  return  max  +  data.length  /  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  data.length  /  2;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  data.length  /  2;	  return    max    +    data.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
271	[BUG]  [BUGGY]  return  max  +  d.length  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  d.length  -  1;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  d.length  -  1;	  return    max    +    data.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
272	[BUG]  [BUGGY]  if(a  <  =  data.length)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  data.length)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  data.length)  {  return  max;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
273	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setNorm(max,  f);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setNorm(max,  f);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setNorm(max,  f);	  ((    RealVectorFormat)a).setNorm(f);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
274	[BUG]  [BUGGY]  double[]  d  =  this.data[a].doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  double[]  d  =  this.data[a].doubleValue();  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	double[]  d  =  this.data[a].doubleValue();	  double[]    d    =    data[a].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
275	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(max  +  data.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(max  +  data.length);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(max  +  data.length);	  ((    RealVector)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
276	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(data.length  -  max);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(data.length  -  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(data.length  -  max);	  ((    RealVector)a).setNorm(data.length);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
277	[BUG]  [BUGGY]  ((  RealVectorFormat)a).doubleValue()  +  d;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).doubleValue()  +  d;  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).doubleValue()  +  d;	  ((    RealVectorFormat)a).doubleValue();    	non-compiled	[CE]  not  a  statement	29	None	replace
278	[BUG]  [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.max(max,  Math.abs(a)));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  data[0]  +  Math.sqrt(data[0],  Math.max(max,  Math.abs(a)));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  data[0]  +  Math.sqrt(data[0],  Math.max(max,  Math.abs(a)));	  return    data[0]    +    Math.sqrt(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
279	[BUG]  [BUGGY]  return  max  *  Math.sqrt(a);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  *  Math.sqrt(a);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  *  Math.sqrt(a);	  return    max    /    Math.sqrt(a);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
280	[BUG]  [BUGGY]  return  max  /  Math.sin(a,  data);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  /  Math.sin(a,  data);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  /  Math.sin(a,  data);	  return    max    /    Math.sin(a);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
281	[BUG]  [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.ceil(a)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.ceil(a)+  1);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sqrt(data[0],  Math.ceil(a)+  1);	  return    max    +    Math.sqrt(data[0],    Math.ceil(a));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
282	[BUG]  [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.ceil(a)/  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  max  +  Math.sqrt(data[0],  Math.ceil(a)/  2);  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  max  +  Math.sqrt(data[0],  Math.ceil(a)/  2);	  return    max    +    Math.sqrt(data[0],    Math.ceil(a));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
283	[BUG]  [BUGGY]  if(a  <  =  a)  {  return  max;  }  else  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  a)  {  return  max;  }  else  {  return  max;  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  a)  {  return  max;  }  else  {  return  max;  }	  if(a    <    =    max)    {    return    max;    }    else    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
284	[BUG]  [BUGGY]  return  a  *  data.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  a  *  data.length;  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  a  *  data.length;	  return    a    +    data.length;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
285	[BUG]  [BUGGY]  ((  RealVectorFormat)a).setValue(data[0],  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVectorFormat)a).setValue(data[0],  max);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVectorFormat)a).setValue(data[0],  max);	  ((    RealVectorFormat)a).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
286	[BUG]  [BUGGY]  ((  RealVector)a).setNorm(max,  d);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  ((  RealVector)a).setNorm(max,  d);  [BUGGY]      return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	((  RealVector)a).setNorm(max,  d);	  ((    RealVector)a).setNorm(d);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
287	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
288	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(max,  Math.abs(a));  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
289	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data,  Math.abs(a));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data,  Math.abs(a));  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  parent.getParent())  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data,  Math.abs(a));  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
290	[BUG]  [BUGGY]  parent  ==  null  ||  a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data[0],  Math.abs(a));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  parent  ==  null  ||  a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data[0],  Math.abs(a));  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	parent  ==  null  ||  a  <  =  data.length)  {  return  max;  }  else  if(a  >  max)  {  return  max  +  Math.max(data[0],  Math.abs(a));  }	  if(a    <    =    max)    {    return    max;    }    else    if(a    >    max)    {    return    max    +    Math.max(max,    Math.abs(a));    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
291	[BUG]  [BUGGY]  if(a  <  =  data.length)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(a  <  =  data.length)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(a  <  =  data.length)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
292	[BUG]  [BUGGY]  if(max  <  =  a)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  if(max  <  =  a)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	if(max  <  =  a)  {  return  max;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(a    <    =    max)    {    return    max;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
293	[BUG]  [BUGGY]  return  Math.sqrt(data[0],  Math.ceil(a));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }      [BUGGY]  return  Math.sqrt(data[0],  Math.ceil(a));  [BUGGY]      }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	723	723	2	replace	return  Math.sqrt(data[0],  Math.ceil(a));	  return    Math.sqrt(data[0],    Math.sqrt(a));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
