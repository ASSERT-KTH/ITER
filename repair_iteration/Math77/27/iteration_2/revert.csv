projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=entry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=entry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]&DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=this.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(key,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=current.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]/epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key],epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key],virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(this.values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=current.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=currentEntry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=this.entry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues().toArray(values);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getEmptyValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(values[key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(value,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[0]).put(key,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(value,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=this.values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=this.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=current.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length-1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[keys.length];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length+1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<Double>)values[key]).put(key,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=current.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]/DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]*DEFAULT_ZERO_TOLERANCE+epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length-1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=current.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=this.current.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=current.getValues(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=current.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=this.entry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=currentEntry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(this.values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]&DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]&DEFAULT_ZERO_TOLERANCE+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-DEFAULT_ZERO_TOLERANCE+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(epsilon,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()/DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()-DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1]+DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=entry.getKey();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[0]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entrycurrent=(Entry)iter.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]-DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getRealValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]*epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:0;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=current.values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key+DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(entries,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()&DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=currentEntry.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=entry.getKey();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=virtualSize[key]&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entries).setValue(values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:DEFAULT_ZERO_TOLERANCE+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(epsilon,key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(epsilon+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]/DEFAULT_ZERO_TOLERANCE+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-epsilon+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-DEFAULT_ZERO_TOLERANCE*1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=currentEntry.getKey();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=this.currentEntry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=current.getKey();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=currentEntry.getKey();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()/epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()/DEFAULT_ZERO_TOLERANCE+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()+DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=(double[])entries.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.entries.get(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[0]).put(key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[0]).put(value,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[0]).put(key,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[0]).put(key,values[1]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=this.entry.getKey();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=this.entry.getEntry();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=current.getKey();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<Double>)values[key]).put(value,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<Double>)values[0]).put(key,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<Double>)values[key]).put(value,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<Double>)values[key]).put(value,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getEmptyValues(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=this.entries.getEmptyValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key],epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key,values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key]));
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entries).setValue(values[key],epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entries).setValue(values[key],virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entries).setValue(this.values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]/DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length-1]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[keys.length]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]*epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=this.currentEntry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(this.values,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values,this.epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values,key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values,virtualSize,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(this.values[key],epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(this.values[key],virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:virtualSize;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(values.length-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(epsilon-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])values.get(key-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues().toArray(values,key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues().toArray(values,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues().toArray(newdouble[values.length]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=(double[])this.values.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(0);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length/1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length*1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]/epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=virtualSize[key]/epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=epsilon[key]/values;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]&epsilon+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]&DEFAULT_ZERO_TOLERANCE*1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(this.epsilon,key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=currentEntry.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=currentEntry.getValues(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=currentEntry.getKeys();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key],virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(value,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key,resize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=this.current.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=current.getEntry();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(value,virtualSize,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(value,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1]/DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1]*DEFAULT_ZERO_TOLERANCE+epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length-1].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=current.values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=this.values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=current.entrySet().iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length-1].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1].doubleValue().doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=current.getEntry();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length-1].doubleValue;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]/DEFAULT_ZERO_TOLERANCE+epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]*DEFAULT_ZERO_TOLERANCE/epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]*DEFAULT_ZERO_TOLERANCE+this.epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()/1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length].doubleValue()+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=current.getValues(values);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=current.getValues(values,key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=current.getValues(key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=current.getValues(values,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=getValues().toArray(values);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=this.entries.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=getValues().toArray(newDouble[values.length]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key+DEFAULT_ZERO_TOLERANCE+key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key/DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key+DEFAULT_ZERO_TOLERANCE+key));
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key+DEFAULT_ZERO_TOLERANCE]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]-key;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[keys.length]-DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=this.current.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=current.getValues(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(values,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.entries.get(epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])values.get(epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(values.length+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key/1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length-2];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Doublevalue=values[key.length-1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[keys.length]&DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length-1]&DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(values[key,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(epsilon,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(epsilon,resize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[keys.length-1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[keys.length+1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(value,this.epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131int[]values=current.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=this.entry.getKey();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(this.values[key],epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)this.values.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)this.values.get(key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-this.epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-virtualSize;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entrycurrent=(Entry)iter.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key],epsilon,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key],resize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[0],virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(values[key+1]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])values.get(key+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key/1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length-1]&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[keys.length]&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length]&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]/DEFAULT_ZERO_TOLERANCE*epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(values[0,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[0]).put(values[key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(values[0],epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(values[values[values.length,epsilon]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key],this.epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key],virtualSize,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=current.entrySet().iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getVisibleValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)this.entries.get(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)values.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)this.entries.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length+1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=virtualSize[key]&DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=(values[key]&epsilon)?virtualSize[key]:epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=epsilon[key]&virtualSize;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(values[key],epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(values[key]/DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(values[key]-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues(values);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues(key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues(values,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[0],epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[0],key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[1]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[keys.length].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(values,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key,this.epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(entries,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(values,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(entries,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1]+epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:values[key]+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:epsilon+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length-1]-DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(entries,DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key],epsilon,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(values[key+1]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key+2);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]-epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues(values.length);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=virtualSize[values.length]&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(value,virtualSize+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entries).setValue(values[0]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-virtualSize+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]-DEFAULT_ZERO_TOLERANCE+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?epsilon:DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleMap)entries.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=this.entry.getEntry();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=iter.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(entries[key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(values[key,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key]-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entrycurrent=(Entry)entry.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]&DEFAULT_ZERO_TOLERANCE+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key+2);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?epsilon:0;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]*epsilon+DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key,DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length+1]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()%DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[0]).put(epsilon,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getEmptyValues().toArray(values);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(this.values[key],this.epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:values[key+1]+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:values[values.length+1]+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()-1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()-epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length-1]+DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=this.current.getValues(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[1]).put(key,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key/DEFAULT_ZERO_TOLERANCE+DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key,DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(this.values[key],this.epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-2].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1].doubleValue()+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=this.entries.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=entries.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length-1]+DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length-1]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(value,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=this.current.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=getValues(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length]&DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1]*epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getVectorValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getRealValues(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=this.currentEntry.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=getEmptyValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(epsilon,key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=this.current.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=current.getValues(epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values,epsilon,DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values,epsilon,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[value.length].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=this.current.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=virtualSize[key]*epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(values[key]-DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(value,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length].doubleValue()/DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(entries,virtualSize+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entrycurrent=(Entry)iter.remove();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(value+DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key+DEFAULT_ZERO_TOLERANCE+key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key+1));
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<Double>)values[key]).put(epsilon,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues().toArray(values,true);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=virtualSize[key]-epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key/1].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]/DEFAULT_ZERO_TOLERANCE*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=this.entries.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(values[this.epsilon,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(values[this.epsilon,values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key],epsilon,DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(this.values[key]),epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key]),epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=currents.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key/1]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[0]).put(entries,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(epsilon,values);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key,virtualSize-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key,virtualSize+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=this.current.values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(values.length+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[value.length-1];
