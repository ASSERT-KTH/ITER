projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=entry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=entry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]&DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=this.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(key,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=current.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]/epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key],epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[key],virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(this.values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=current.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=currentEntry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=this.entry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues().toArray(values);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getEmptyValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(values[key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(value,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[0]).put(key,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(value,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=this.values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=this.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iterator<Entry>iter=current.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length-1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[keys.length];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length+1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<Double>)values[key]).put(key,value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=current.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]/DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]*DEFAULT_ZERO_TOLERANCE+epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key.length-1];
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1].doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Double[]values=current.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=this.current.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=current.getValues(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=current.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=this.entry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=currentEntry.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(this.values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]&DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]&DEFAULT_ZERO_TOLERANCE+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]-DEFAULT_ZERO_TOLERANCE+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(epsilon,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()/DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()-DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1]+DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key-1]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<?>current=entry.getKey();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entry).setValue(values[0]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key,epsilon);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entrycurrent=(Entry)iter.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]-DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getValues(key);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=getRealValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(key+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]*epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[values.length]*DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])this.values.get(key+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:0;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Iteratoriter=current.values.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap)entries.get(key+DEFAULT_ZERO_TOLERANCE);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenIntToDoubleHashMap<double>)values[key]).put(entries,virtualSize);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=(double[])entries.get(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key].doubleValue()&DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131double[]values=currentEntry.getValues();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131Entry<K,V>current=entry.getKey();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=virtualSize[key]&epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131((OpenMapEntry)entries).setValue(values[key]);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java131doublevalue=values[key]?DEFAULT_ZERO_TOLERANCE:DEFAULT_ZERO_TOLERANCE+1;
