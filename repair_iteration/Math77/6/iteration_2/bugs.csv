bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  max  +  2;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  +  2;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  2;	  return    max    +    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  return  max  /  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  /  1;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  1;	  return    max    +    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  +  1);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  entries.size()  +  1);	      ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    entries.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
4	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size());  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size());	      ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    entries.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(value);	      ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max  +  1);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(max  +  1);	      ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(this.value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(this.value);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(this.value);	      ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getNorm());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getNorm());  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(getNorm());	      ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  return  iter.getValue()  -  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  iter.getValue()  -  max;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.getValue()  -  max;	  return    max    -    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  return  iter  -  max.getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  iter  -  max.getValue();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter  -  max.getValue();	  return    max    -    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  return  max  /  iter.getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  /  iter.getValue();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  iter.getValue();	  return    max    -    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  return  max  -  2;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  -  2;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  -  2;	  return    max    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm();  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).getLInfNorm();	      ((    OpenMapEntry)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getNorm();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).getNorm();  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).getNorm();	      ((    OpenMapEntry)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  max;  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  max;  max  +=  iter.value();  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  +  max;  max  +=  iter.value();	      ((    OpenMapEntry)iter.next()).advance();    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  -  max;  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  -  max;  max  +=  iter.value();  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  -  max;  max  +=  iter.value();	      ((    OpenMapEntry)iter.next()).advance();    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  max  +=  iter.value();  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance(),  max  +=  iter.value();	      ((    OpenMapEntry)iter.next()).advance();    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).getNorm();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).getNorm();  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).getNorm();	      ((    OpenMapSparseIterator    <    Entry>)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).remove(0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).remove(0);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).remove(0);	      ((    OpenMapSparseIterator    <    Entry>)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  return  iter.value()  -  max;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  iter.value()  -  max;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.value()  -  max;	  return    max    -    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  return  max  /  iter.value();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  /  iter.value();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  iter.value();	  return    max    -    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  return  iter.value  -  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  iter.value  -  max;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.value  -  max;	  return    max    -    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(value);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(value);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(value);	      ((    OpenMapSparseIterator)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max  +  1);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(max  +  1);	      ((    OpenMapSparseIterator)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getNorm());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getNorm());  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(getNorm());	      ((    OpenMapSparseIterator)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(this.value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(this.value);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(this.value);	      ((    OpenMapSparseIterator)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  return  iter.next()  -  max;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  iter.next()  -  max;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.next()  -  max;	  return    max    -    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  return  max  /  iter.next();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  /  iter.next();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  iter.next();	  return    max    -    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(value);	      ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(current);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(current);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(current);	      ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value);	      ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  return  max  +  delta;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  +  delta;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  delta;	  return    max    +    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  return  max  /  epsilon;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  /  epsilon;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  epsilon;	  return    max    +    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  return  max  +  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  +  DEFAULT_ZERO_TOLERANCE;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  DEFAULT_ZERO_TOLERANCE;	  return    max    +    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(value);	      ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  +  1);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(max  +  1);	      ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
37	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm());  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(getNorm());	      ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
38	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(this.value);	      ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getLInfNorm();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getLInfNorm();  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).getLInfNorm();	      ((    OpenMapSparseIterator    <    Entry>)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getNorm();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getNorm();  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).getNorm();	      ((    OpenMapSparseIterator    <    Entry>)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(max);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(max);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(max);	      ((    OpenMapSparseIterator    <    Entry>)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  +  1);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  +  1);	      ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  -  1);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  -  1);	      ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(0,  max);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(0,  max);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(0,  max);	      ((    OpenMapSparseIterator)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  return  max  +  1.0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  +  1.0;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  1.0;	  return    max    +    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setNorm(max);	      ((    OpenMapEntry)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
47	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(max);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(max);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(max);	      ((    OpenMapSparseIterator    <    Entry>)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
48	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(0,  max);	      ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  return  iter  -  max.value();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  iter  -  max.value();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter  -  max.value();	  return    max    -    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  return  max  +  epsilon.doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  +  epsilon.doubleValue();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  epsilon.doubleValue();	  return    max    +    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  max;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  max;  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  +  max;	      ((    OpenMapEntry)iter.next()).advance();    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  -=  iter.value();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  -=  iter.value();  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  -=  iter.value();	      ((    OpenMapEntry)iter.next()).advance();    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  -  1);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(max  -  1);	      ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
54	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(0,  max);	      ((    OpenMapEntry)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
55	[BUG]  [BUGGY]  return  max  /  2;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  return  max  /  2;  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  2;	  return    max    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max  -  1);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(max  -  1);	      ((    OpenMapSparseIterator)iter).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max);	      ((    OpenMapSparseIterator    <    Entry>)iter.next()).advance();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.size());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.size());  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.size());	      ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    entries.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
59	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).value();  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapEntry)iter.next()).value();  max  +=  iter.value();  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).value();  max  +=  iter.value();	      ((    OpenMapEntry)iter.next()).advance();    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max  -  1);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(max  -  1);	      ((    OpenMapSparseIterator)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm(max);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }    [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm(max);  [BUGGY]    return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setNorm(max);	      ((    OpenMapSparseIterator    <    Entry>)iter).remove();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
