bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getLInfNorm());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getLInfNorm());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(getLInfNorm());	  ((    OpenMapSparseIterator)iter).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getNorm(),  max);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getNorm(),  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(getNorm(),  max);	  ((    OpenMapSparseIterator)iter).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getLimit());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getLimit());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(getLimit());	  ((    OpenMapSparseIterator)iter).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getNorm()  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getNorm()  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(getNorm()  +  1);	  ((    OpenMapSparseIterator)iter).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  return  iter.value  /  max.value();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.value  /  max.value();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.value  /  max.value();	  return    max    /    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]  return  max  *  iter.value();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  *  iter.value();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  *  iter.value();	  return    max    /    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
7	[BUG]  [BUGGY]  return  iter  /  max.value();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter  /  max.value();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter  /  max.value();	  return    max    /    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
8	[BUG]  [BUGGY]  return  max  /  2  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  2  +  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  2  +  1;	  return    max    /    2;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
9	[BUG]  [BUGGY]  return  max  /  2  +  iter.next();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  2  +  iter.next();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  2  +  iter.next();	  return    max    /    2;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
10	[BUG]  [BUGGY]  return  max  /  2  +  iter.getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  2  +  iter.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  2  +  iter.getValue();	  return    max    /    2;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
11	[BUG]  [BUGGY]  return  max  +  3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  3;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  3;	  return    max    +    2;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value,  max);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value,  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(this.value,  max);	  ((    OpenMapEntry)iter.next()).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
13	[BUG]  [BUGGY]  return  iter.value()  -  max.value();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.value()  -  max.value();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.value()  -  max.value();	  return    iter    -    max.value();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
14	[BUG]  [BUGGY]  return  iter  -  max  +  iter.value();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter  -  max  +  iter.value();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter  -  max  +  iter.value();	  return    iter    -    max.value();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
15	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value,  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(value,  max);	  ((    OpenMapSparseIterator)iter).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(value);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(value);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(value);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setNormalizedValue(max);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
17	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(max  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(max  +  1);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setNormalizedValue(max);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
18	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(this.value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(this.value);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(this.value);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setNormalizedValue(max);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
19	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  max;  max  -=  iter.value();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  max;  max  -=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  +  max;  max  -=  iter.value();	  ((    OpenMapEntry)iter.next()).advance();    max    -=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
20	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  -=  iter.value();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  -=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  -=  iter.value();	  ((    OpenMapEntry)iter.next()).advance();    max    -=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
21	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(0,  max  +  1);	  ((    OpenMapSparseIterator)iter).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
22	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(0,  max  -  1);	  ((    OpenMapSparseIterator)iter).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
23	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max  +  2);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(0,  max  +  2);	  ((    OpenMapSparseIterator)iter).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
24	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  /  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  /  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(max  /  1);	  ((    OpenMapEntry)iter.next()).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
25	[BUG]  [BUGGY]  return  max  +  iter.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  iter.doubleValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  iter.doubleValue();	  return    max    +    epsilon.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
26	[BUG]  [BUGGY]  return  max  /  epsilon.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  epsilon.doubleValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  epsilon.doubleValue();	  return    max    +    epsilon.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
27	[BUG]  [BUGGY]  return  max  +  entries.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  entries.doubleValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  entries.doubleValue();	  return    max    +    epsilon.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
28	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value,  max);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value,  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value,  max);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
29	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value  -  1);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
30	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setLInfNorm(max);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setLInfNorm(max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setLInfNorm(max);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
31	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getLInfNorm()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getLInfNorm()  +  1;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).getLInfNorm()  +  1;	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
32	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(0,  max  +  1);	  ((    OpenMapEntry)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
33	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(0,  max  -  1);	  ((    OpenMapEntry)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
34	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  -  iter.value());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  -  iter.value());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(0,  max  -  iter.value());	  ((    OpenMapEntry)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
35	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  max  +=  iter.value());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  max  +=  iter.value());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance(),  max  +=  iter.value());	  ((    OpenMapEntry)iter.next()).advance(),    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
36	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  delta  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  delta  +=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance(),  delta  +=  iter.value();	  ((    OpenMapEntry)iter.next()).advance(),    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
37	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  value  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  value  +=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance(),  value  +=  iter.value();	  ((    OpenMapEntry)iter.next()).advance(),    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
38	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size()  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size()  -  1);	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.min(max,    entries.size());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size()  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size()  +  1);	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.min(max,    entries.size());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size()  -  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size()  -  2);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  entries.size()  -  2);	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.min(max,    entries.size());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  return  max  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  DEFAULT_ZERO_TOLERANCE;	  return    max    /    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
42	[BUG]  [BUGGY]  return  max  /  delta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  delta;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  delta;	  return    max    /    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
43	[BUG]  [BUGGY]  return  max  /  defult_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  defult_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  defult_ZERO_TOLERANCE;	  return    max    /    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
44	[BUG]  [BUGGY]  return  max  *  epsilon;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  *  epsilon;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  *  epsilon;	  return    max    /    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
45	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(this.value,  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(this.value,  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(this.value,  max);	  ((    OpenMapSparseIterator)iter.next()).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
46	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(this.value  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(this.value  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(this.value  +  1);	  ((    OpenMapSparseIterator)iter.next()).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
47	[BUG]  [BUGGY]  return  max  /  DEFAULT_ZERO_TOLERANCE  +  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  DEFAULT_ZERO_TOLERANCE  +  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  DEFAULT_ZERO_TOLERANCE  +  DEFAULT_ZERO_TOLERANCE;	  return    max    +    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
48	[BUG]  [BUGGY]  return  max  /  DEFAULT_ZERO_TOLERANCE  +  max;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  DEFAULT_ZERO_TOLERANCE  +  max;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  DEFAULT_ZERO_TOLERANCE  +  max;	  return    max    +    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
49	[BUG]  [BUGGY]  return  max  /  DEFAULT_ZERO_TOLERANCE  +  defsilon;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  DEFAULT_ZERO_TOLERANCE  +  defsilon;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  DEFAULT_ZERO_TOLERANCE  +  defsilon;	  return    max    +    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
50	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max  +  2);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(max  +  2);	  ((    OpenMapSparseIterator)iter.next()).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
51	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max  +  1,  iter.value());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max  +  1,  iter.value());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(max  +  1,  iter.value());	  ((    OpenMapSparseIterator)iter.next()).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
52	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(max,  max  +  1);	  ((    OpenMapSparseIterator)iter.next()).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
53	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setLInfNorm(max);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setLInfNorm(max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setLInfNorm(max);	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  +  1;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).getLInfNorm()  +  1;	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  +  max;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  +  max;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).getLInfNorm()  +  max;	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(0,  max  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(0,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(0,  max  +  1);	  ((    OpenMapSparseIterator)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
57	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(0,  max  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(0,  max  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(0,  max  -  1);	  ((    OpenMapSparseIterator)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
58	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(0,  max  -  iter.value());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(0,  max  -  iter.value());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(0,  max  -  iter.value());	  ((    OpenMapSparseIterator)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
59	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(value);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(value);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
60	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(max  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(max  +  1);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
61	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(current);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(current);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(current);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
62	[BUG]  [BUGGY]  return  max  -  delta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  -  delta;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  -  delta;	  return    max    -    2;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setNorm(max  +  1);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
64	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(value);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setNorm(value);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
65	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setNorm(max  -  1);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
66	[BUG]  [BUGGY]  return  max  /  1.0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  1.0;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  1.0;	  return    max    +    1.0;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
67	[BUG]  [BUGGY]  return  max  +  0.5;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  0.5;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  0.5;	  return    max    +    1.0;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
68	[BUG]  [BUGGY]  return  max  +  1.0f;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  1.0f;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  1.0f;	  return    max    +    1.0;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
69	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(getNorm());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(getNorm());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(getNorm());	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(current);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
70	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(current,  max);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(current,  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(current,  max);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(current);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
71	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  /  max;  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  /  max;  max  +=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  /  max;  max  +=  iter.value();	  ((    OpenMapEntry)iter.next()).advance()    +    max;    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  delta;  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  delta;  max  +=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  +  delta;  max  +=  iter.value();	  ((    OpenMapEntry)iter.next()).advance()    +    max;    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
73	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  *  max;  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  *  max;  max  +=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  *  max;  max  +=  iter.value();	  ((    OpenMapEntry)iter.next()).advance()    +    max;    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
74	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  iter.size());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  iter.size());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.min(max,  iter.size());	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    iter.size());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
75	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.size()  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.size()  -  1);	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    iter.size());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
76	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.getValue());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.getValue());	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    iter.size());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
77	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.value());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.value());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance();  max  =  Math.max(max,  iter.value());	  ((    OpenMapEntry)iter.next()).advance();    max    =    Math.max(max,    iter.size());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
78	[BUG]  [BUGGY]  return  iter.getValue()  /  max;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.getValue()  /  max;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.getValue()  /  max;	  return    iter.getValue()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  return  max.getValue()  -  iter.getValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max.getValue()  -  iter.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max.getValue()  -  iter.getValue();	  return    iter.getValue()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  return  iter.getValue()  -  max  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.getValue()  -  max  +  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.getValue()  -  max  +  1;	  return    iter.getValue()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(value,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(value,  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(value,  max);	  ((    OpenMapSparseIterator)iter.next()).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
82	[BUG]  [BUGGY]  return  iter  -  max  +  iter.getValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter  -  max  +  iter.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter  -  max  +  iter.getValue();	  return    iter    -    max.getValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
83	[BUG]  [BUGGY]  return  iter.getValue()  -  max.getValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.getValue()  -  max.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.getValue()  -  max.getValue();	  return    iter    -    max.getValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
84	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).value()  +  1;  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).value()  +  1;  max  +=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).value()  +  1;  max  +=  iter.value();	  ((    OpenMapEntry)iter.next()).value();    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
85	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).value()  -(max  +  iter.value());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).value()  -(max  +  iter.value());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).value()  -(max  +  iter.value());	  ((    OpenMapEntry)iter.next()).value();    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
86	[BUG]  [BUGGY]  return  max  /  2.0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  2.0;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  2.0;	  return    max    /    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
87	[BUG]  [BUGGY]  return  max  *  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  *  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  *  1;	  return    max    /    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
88	[BUG]  [BUGGY]  return  iter.next()  /  max;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.next()  /  max;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.next()  /  max;	  return    max    /    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
89	[BUG]  [BUGGY]  return  max  /  entries.next();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  entries.next();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  entries.next();	  return    max    /    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
90	[BUG]  [BUGGY]  return  iter.value()  /  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.value()  /  max;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.value()  /  max;	  return    iter.value()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
91	[BUG]  [BUGGY]  return  iter.value()  -  max  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.value()  -  max  +  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.value()  -  max  +  1;	  return    iter.value()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
92	[BUG]  [BUGGY]  return  iter.next()  -  max  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.next()  -  max  +  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.next()  -  max  +  1;	  return    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
93	[BUG]  [BUGGY]  return  max.next()  -  iter.value();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max.next()  -  iter.value();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max.next()  -  iter.value();	  return    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
94	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getNorm()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getNorm()  +  1;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).getNorm()  +  1;	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
95	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max  +  1);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
96	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(value);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(value);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
97	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max  -  1);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
98	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLInfNorm());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLInfNorm());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(getLInfNorm());	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
99	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLimit());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLimit());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(getLimit());	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
100	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm()  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm()  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(getNorm()  +  1);	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
101	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm(),  max);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm(),  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(getNorm(),  max);	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
102	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getNorm()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).getNorm()  +  1;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).getNorm()  +  1;	  ((    OpenMapEntry)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
103	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(this.value,  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(this.value,  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(this.value,  max);	  ((    OpenMapSparseIterator)iter).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
104	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(this.value  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(this.value  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(this.value  -  1);	  ((    OpenMapSparseIterator)iter).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
105	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  +  2);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(max  +  2);	  ((    OpenMapEntry)iter.next()).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
106	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(max,  max  +  1);	  ((    OpenMapEntry)iter.next()).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
107	[BUG]  [BUGGY]  return  max  +  iter.next();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  iter.next();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  iter.next();	  return    max    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
108	[BUG]  [BUGGY]  return  max  +  delta.epsilon;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  delta.epsilon;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  delta.epsilon;	  return    max    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
109	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(max,  max  +  1);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
110	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  +  2);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  +  2);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
111	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max,  max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(max,  max  +  1);	  ((    OpenMapSparseIterator)iter).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
112	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max  +  2);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(max  +  2);	  ((    OpenMapSparseIterator)iter).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
113	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max  /  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max  /  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(max  /  1);	  ((    OpenMapSparseIterator)iter).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
114	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setNorm();	  ((    OpenMapSparseIterator    <    Entry>)iter).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
115	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).reset();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).reset();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).reset();	  ((    OpenMapSparseIterator    <    Entry>)iter).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
116	[BUG]  [BUGGY]  return  max  -  iter.value;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  -  iter.value;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  -  iter.value;	  return    iter.value    -    max;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
117	[BUG]  [BUGGY]  return  iter.value  /  max;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.value  /  max;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.value  /  max;	  return    iter.value    -    max;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
118	[BUG]  [BUGGY]  return  iter.value  -  max  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.value  -  max  +  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.value  -  max  +  1;	  return    iter.value    -    max;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
119	[BUG]  [BUGGY]  return  max  *  iter.getValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  *  iter.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  *  iter.getValue();	  return    max    /    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
120	[BUG]  [BUGGY]  return  max  /  entries.getValue();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  entries.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  entries.getValue();	  return    max    /    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
121	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getLInfNorm());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getLInfNorm());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(getLInfNorm());	  ((    OpenMapSparseIterator)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
122	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getNorm(),  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getNorm(),  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(getNorm(),  max);	  ((    OpenMapSparseIterator)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
123	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getLimit());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getLimit());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(getLimit());	  ((    OpenMapSparseIterator)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
124	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getLocalMillis());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getLocalMillis());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(getLocalMillis());	  ((    OpenMapSparseIterator)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
125	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  -  delta;  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  -  delta;  max  +=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  -  delta;  max  +=  iter.value();	  ((    OpenMapEntry)iter.next()).advance()    -    max;    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
126	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  -  1;  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  -  1;  max  +=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  -  1;  max  +=  iter.value();	  ((    OpenMapEntry)iter.next()).advance()    -    max;    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
127	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  /  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  /  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  /  1);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
128	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max  /  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(max  /  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(max  /  1);	  ((    OpenMapSparseIterator)iter.next()).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
129	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  /  max;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  /  max;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  /  max;	  ((    OpenMapEntry)iter.next()).advance()    +    max;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
130	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  *  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  *  max;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  *  max;	  ((    OpenMapEntry)iter.next()).advance()    +    max;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
131	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  1;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  +  1;	  ((    OpenMapEntry)iter.next()).advance()    +    max;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
132	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value,  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value,  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(value,  max);	  ((    OpenMapEntry)iter.next()).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
133	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value,  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value,  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(value,  max);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
134	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm(value);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setNorm(value);	  ((    OpenMapSparseIterator    <    Entry>)iter).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
135	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm(max  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm(max  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setNorm(max  +  1);	  ((    OpenMapSparseIterator    <    Entry>)iter).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
136	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm(this.value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm(this.value);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setNorm(this.value);	  ((    OpenMapSparseIterator    <    Entry>)iter).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
137	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(value  -  1);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
138	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(value  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(value  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(value  +  1);	  ((    OpenMapSparseIterator)iter.next()).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
139	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(value  -  1);	  ((    OpenMapSparseIterator)iter).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
140	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(1,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(1,  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(1,  max);	  ((    OpenMapSparseIterator)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
141	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLocale());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLocale());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(getLocale());	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
142	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(value  +  1);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
143	[BUG]  [BUGGY]  return  iter  -  max  *  iter.getValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter  -  max  *  iter.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter  -  max  *  iter.getValue();	  return    iter    -    max.getValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
144	[BUG]  [BUGGY]  return  max  -  3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  -  3;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  -  3;	  return    max    -    2;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
145	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(max  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(max  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setValue(max  -  1);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setValue(max);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
146	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  max  *  iter.value();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  max  *  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance(),  max  *  iter.value();	  ((    OpenMapEntry)iter.next()).advance(),    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
147	[BUG]  [BUGGY]  return  iter  /  max.getValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter  /  max.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter  /  max.getValue();	  return    max    /    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
148	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(value  +  1);	  ((    OpenMapEntry)iter.next()).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
149	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(value  +  1);	  ((    OpenMapSparseIterator)iter).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
150	[BUG]  [BUGGY]  return  max.getValue()  -  iter;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max.getValue()  -  iter;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max.getValue()  -  iter;	  return    iter.getValue()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
151	[BUG]  [BUGGY]  return  iter.getValue()  *  max;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.getValue()  *  max;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.getValue()  *  max;	  return    iter.getValue()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
152	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(value  -  1);	  ((    OpenMapEntry)iter.next()).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
153	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm(max  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setNorm(max  -  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setNorm(max  -  1);	  ((    OpenMapSparseIterator    <    Entry>)iter).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
154	[BUG]  [BUGGY]  return  max  *  iter.next();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  *  iter.next();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  *  iter.next();	  return    max    /    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
155	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(0);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(0);	  ((    OpenMapSparseIterator    <    Entry>)iter).remove(0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
156	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).remove(1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).remove(1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).remove(1);	  ((    OpenMapSparseIterator    <    Entry>)iter).remove(0);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
157	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getLen());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(getLen());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(getLen());	  ((    OpenMapSparseIterator)iter).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
158	[BUG]  [BUGGY]  return  max  /  1000;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  1000;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  1000;	  return    max    /    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
159	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(new  Double(max));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(new  Double(max));  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(new  Double(max));	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(current);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
160	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(current  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(current  +  1);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(current  +  1);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(current);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
161	[BUG]  [BUGGY]  return  max  /  2  +  iter.value();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  2  +  iter.value();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  2  +  iter.value();	  return    max    /    2;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
162	[BUG]  [BUGGY]  return  max  /  2  +  entries.size();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  2  +  entries.size();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  2  +  entries.size();	  return    max    /    2;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
163	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  1;  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  1;  max  +=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  +  1;  max  +=  iter.value();	  ((    OpenMapEntry)iter.next()).advance()    +    max;    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
164	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(max,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(max,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setNormalizedValue(max,  DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setNormalizedValue(max);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
165	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).value()  +  max;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).value()  +  max;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).value()  +  max;	  ((    OpenMapEntry)iter.next()).value();    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
166	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getLen();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getLen();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).getLen();	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
167	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLen();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).getLen();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).getLen();	  ((    OpenMapEntry)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
168	[BUG]  [BUGGY]  return  max  +  iter.value;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  iter.value;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  iter.value;	  return    max    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
169	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max,  iter);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max,  iter);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(max,  iter);	  ((    OpenMapSparseIterator)iter).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
170	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getLocale());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(getLocale());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(getLocale());	  ((    OpenMapSparseIterator)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
171	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max,  this.value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max,  this.value);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(max,  this.value);	  ((    OpenMapSparseIterator)iter).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
172	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getLenfNorm();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getLenfNorm();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).getLenfNorm();	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
173	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getLInfNorm()  +  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getLInfNorm()  +  max;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).getLInfNorm()  +  max;	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
174	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLenfNorm();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).getLenfNorm();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).getLenfNorm();	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
175	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max));  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(new  Float(max));	  ((    OpenMapEntry)iter.next()).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
176	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  +  2);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(0,  max  +  2);	  ((    OpenMapEntry)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
177	[BUG]  [BUGGY]  return  iter.value()  *  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.value()  *  max;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.value()  *  max;	  return    iter.value()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
178	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(new  Float(max));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(new  Float(max));  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(new  Float(max));	  ((    OpenMapSparseIterator)iter.next()).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
179	[BUG]  [BUGGY]  return  max  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  *  DEFAULT_ZERO_TOLERANCE;	  return    max    +    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
180	[BUG]  [BUGGY]  return  max  +  0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  0;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  0;	  return    max    +    2;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
181	[BUG]  [BUGGY]  return  iter.value  -  max.getValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.value  -  max.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.value  -  max.getValue();	  return    iter    -    max.getValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
182	[BUG]  [BUGGY]  return  max  /  entries.value();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  entries.value();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  entries.value();	  return    max    /    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
183	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(value  /  DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
184	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  DEFAULT_ZERO_TOLERANCE  +  iter.value();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  DEFAULT_ZERO_TOLERANCE  +  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance(),  DEFAULT_ZERO_TOLERANCE  +  iter.value();	  ((    OpenMapEntry)iter.next()).advance(),    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
185	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  DEFAULT_ZERO_TOLERANCE  +  max  +=  iter.value();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance(),  DEFAULT_ZERO_TOLERANCE  +  max  +=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance(),  DEFAULT_ZERO_TOLERANCE  +  max  +=  iter.value();	  ((    OpenMapEntry)iter.next()).advance(),    max    +=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
186	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getNorm()  +  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).getNorm()  +  max;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).getNorm()  +  max;	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
187	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(value  /  DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapSparseIterator)iter.next()).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
188	[BUG]  [BUGGY]  return  max  *  2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  *  2;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  *  2;	  return    max    -    2;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
189	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  -  2);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(max  -  2);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
190	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value  -  max);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value  -  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter).setValue(this.value  -  max);	  ((    OpenMapSparseIterator    <    Entry>)iter).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
191	[BUG]  [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max  +  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max  +  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator  <  Entry>)iter.next()).setNorm(max  +  DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapSparseIterator    <    Entry>)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
192	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(this.value  -  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(this.value  -  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(this.value  -  max);	  ((    OpenMapSparseIterator)iter).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
193	[BUG]  [BUGGY]  return  max  +  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  delta.doubleValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  delta.doubleValue();	  return    max    +    epsilon.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
194	[BUG]  [BUGGY]  return  max  /  defsilon;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  defsilon;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  defsilon;	  return    max    /    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
195	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(value  /  DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapSparseIterator)iter).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
196	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLimit();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).getLimit();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).getLimit();	  ((    OpenMapEntry)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
197	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(this.value  +  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter.next()).setValue(this.value  +  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter.next()).setValue(this.value  +  max);	  ((    OpenMapSparseIterator)iter.next()).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
198	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  +  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  +  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setNorm(max  +  DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
199	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max  -  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(max  -  2);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(max  -  2);	  ((    OpenMapSparseIterator)iter).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
200	[BUG]  [BUGGY]  return  max  /  1  +  iter.getValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  /  1  +  iter.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  /  1  +  iter.getValue();	  return    max    /    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
201	[BUG]  [BUGGY]  return  max  +  1.0d;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  max  +  1.0d;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  max  +  1.0d;	  return    max    +    1.0;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
202	[BUG]  [BUGGY]  return  iter.next()  +  max;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  return  iter.next()  +  max;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	return  iter.next()  +  max;	  return    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
203	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).value();  max  -=  iter.value();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).value();  max  -=  iter.value();  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).value();  max  -=  iter.value();	  ((    OpenMapEntry)iter.next()).advance();    max    -=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
204	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  -  max;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  -  max;  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).advance()  -  max;	  ((    OpenMapEntry)iter.next()).advance();    max    -=    iter.value();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
205	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  -  max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  -  max);  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapEntry)iter.next()).setValue(value  -  max);	  ((    OpenMapEntry)iter.next()).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
206	[BUG]  [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max  -  iter.next());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }      [BUGGY]  ((  OpenMapSparseIterator)iter).setValue(0,  max  -  iter.next());  [BUGGY]      return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	505	505	2	replace	((  OpenMapSparseIterator)iter).setValue(0,  max  -  iter.next());	  ((    OpenMapSparseIterator)iter).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
