projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter.next()).advance();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter).setValue(max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter).remove();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter).setValue(max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax+epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax-iter.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax-iter.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter.next()).setValue(max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax-1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax-iter.value();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance();max+=iter.value();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance();max=Math.max(max,entries.size());
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance();max=Math.max(max,entries.size()-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).setValue(max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax+2;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax/1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance();max=Math.max(max,entries.size()+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance();max=Math.min(max,entries.size());
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter).setValue(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter).setValue(max+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter).setValue(this.value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter).setValue(getNorm());
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returniter.getValue()-max;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returniter-max.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax/iter.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax-2;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).getLInfNorm();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).getNorm();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance()+max;max+=iter.value();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance()-max;max+=iter.value();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance(),max+=iter.value();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter).getNorm();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter).remove(0);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returniter.value()-max;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax/iter.value();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returniter.value-max;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter.next()).setValue(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter.next()).setValue(max+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter.next()).setValue(getNorm());
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter.next()).setValue(this.value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returniter.next()-max;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax/iter.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter).setValue(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter).setValue(current);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter).setValue(this.value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax+delta;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax/epsilon;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax+DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).setValue(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).setValue(max+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).setValue(getNorm());
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).setValue(this.value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter.next()).getLInfNorm();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter.next()).getNorm();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter.next()).setValue(max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter).setValue(max+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter).setValue(max-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter.next()).setValue(0,max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax+1.0;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).setNorm(max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter.next()).setNormalizedValue(max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter).setValue(0,max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returniter-max.value();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax+epsilon.doubleValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance()+max;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance();max-=iter.value();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).setValue(max-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).setValue(0,max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505returnmax/2;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter).setValue(max-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter.next()).setNorm(max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).advance();max=Math.max(max,iter.size());
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapEntry)iter.next()).value();max+=iter.value();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator)iter.next()).setValue(max-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java505((OpenMapSparseIterator<Entry>)iter).setNorm(max);
