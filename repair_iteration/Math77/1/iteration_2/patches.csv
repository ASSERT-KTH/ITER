bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  +  2);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(index  +  2);	  Entry    <    K,    V>    entry    =    entries.get(index    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
2	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(0,  index  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(0,  index  +  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(0,  index  +  1);	  Entry    <    K,    V>    entry    =    entries.get(index    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
3	[BUG]  [BUGGY]  Iterator  iter  =  entry.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  iter  =  entry.entries.iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  iter  =  entry.entries.iterator();	  Iterator    iter    =    current.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  Iterator  iter  =  entries.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  iter  =  entries.entrySet().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  iter  =  entries.entrySet().iterator();	  Iterator    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.info.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.info.entrySet().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.info.entrySet().iterator();	  Iterator    <    Entry>    entries    =    this.list.iterator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
6	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.dataIterator.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.dataIterator.iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.dataIterator.iterator();	  Iterator    <    Entry>    entries    =    this.list.iterator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
7	[BUG]  [BUGGY]  double  max  =  this.value.doubleValue()  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value.doubleValue()  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value.doubleValue()  /  DEFAULT_ZERO_TOLERANCE;	  double    max    =    this.value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
8	[BUG]  [BUGGY]  double  max  =  this.value.doubleValue()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value.doubleValue()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value.doubleValue()  *  DEFAULT_ZERO_TOLERANCE;	  double    max    =    this.value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
9	[BUG]  [BUGGY]  double  max  =  this.value.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value.doubleValue()  +  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value.doubleValue()  +  1;	  double    max    =    this.value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
10	[BUG]  [BUGGY]  double  max  =  current.doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  current.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  current.doubleValue();	  double    max    =    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
11	[BUG]  [BUGGY]  double  max  =  epsilon.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  epsilon.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  epsilon.doubleValue();	  double    max    =    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
12	[BUG]  [BUGGY]  double  max  =  0;  double  max  =  0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  0;  double  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  0;  double  max  =  0;	  double    max    =    0L;    double    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
13	[BUG]  [BUGGY]  long  max  =  0L;  long  max  =  0L;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  long  max  =  0L;  long  max  =  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	long  max  =  0L;  long  max  =  0L;	  double    max    =    0L;    double    max    =    0L;    	non-compiled	[CE]  ';'  expected	20	None	replace
14	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.current.entrySet().iterator();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.current.entrySet().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.current.entrySet().iterator();	  Iterator    <    Entry>    entries    =    current.entrySet().iterator();    	non-compiled	[CE]  ';'  expected	15	None	replace
15	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.info.list().iterator();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.info.list().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.info.list().iterator();	  Iterator    <    Entry>    entries    =    this.info.entries.iterator();    	non-compiled	[CE]  ';'  expected	31	None	replace
16	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  iter  =  this.entries.iterator();	  Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  ';'  expected	64	None	replace
17	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entrySet().iterator();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  iter  =  current.entrySet().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  iter  =  current.entrySet().iterator();	  Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  ';'  expected	64	None	replace
18	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entries.iterator();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  iter  =  current.entries.iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  iter  =  current.entries.iterator();	  Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  ';'  expected	64	None	replace
19	[BUG]  [BUGGY]  double  max  =  deFAULT_ZERO_TOLERANCE.doubleValue();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  deFAULT_ZERO_TOLERANCE.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  deFAULT_ZERO_TOLERANCE.doubleValue();	  double    max    =    DEFAULT_ZERO_TOLERANCE.doubleValue()    +    1;    	non-compiled	[CE]  ';'  expected	37	None	replace
20	[BUG]  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE.doubleValue()  /  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE.doubleValue()  /  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_ZERO_TOLERANCE.doubleValue()  /  1;	  double    max    =    DEFAULT_ZERO_TOLERANCE.doubleValue()    +    1;    	non-compiled	[CE]  ';'  expected	37	None	replace
21	[BUG]  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE  /  1;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE  /  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_ZERO_TOLERANCE  /  1;	  double    max    =    DEFAULT_ZERO_TOLERANCE    +    1;    	non-compiled	[CE]  ';'  expected	6	None	replace
22	[BUG]  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE  *  1;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE  *  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_ZERO_TOLERANCE  *  1;	  double    max    =    DEFAULT_ZERO_TOLERANCE    +    1;    	non-compiled	[CE]  ';'  expected	6	None	replace
23	[BUG]  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE  +  2;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE  +  2;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_ZERO_TOLERANCE  +  2;	  double    max    =    DEFAULT_ZERO_TOLERANCE    +    1;    	non-compiled	[CE]  ';'  expected	6	None	replace
24	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  current.getValue();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  current.getValue();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  current.getValue();	  Entry    <    K,    V>    entry    =    entries.get(current);    	non-compiled	[CE]  ';'  expected	46	None	replace
25	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  current.getEntry();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  current.getEntry();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  current.getEntry();	  Entry    <    K,    V>    entry    =    entries.get(current);    	non-compiled	[CE]  ';'  expected	46	None	replace
26	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  current.entrySet();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  current.entrySet();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  current.entrySet();	  Entry    <    K,    V>    entry    =    entries.get(current);    	non-compiled	[CE]  ';'  expected	46	None	replace
27	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  current.get();  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  current.get();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  current.get();	  Entry    <    K,    V>    entry    =    entries.get(current);    	non-compiled	[CE]  ';'  expected	46	None	replace
28	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  iter.getValue().iterator();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  iter.getValue().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  iter.getValue().iterator();	  Entry    <    K,    V>    entry    =    iter.entrySet().iterator();    	non-compiled	[CE]  ';'  expected	73	None	replace
29	[BUG]  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_ZERO_TOLERANCE?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	  double    max    =    this.value?    DEFAULT_ZERO_TOLERANCE    :    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  ';'  expected	56	None	replace
30	[BUG]  [BUGGY]  double  max  =  this.value?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE  +  1;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE  +  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE  +  1;	  double    max    =    this.value?    DEFAULT_ZERO_TOLERANCE    :    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  ';'  expected	56	None	replace
31	[BUG]  [BUGGY]  Entry  max  =  this.entries.iterator();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  max  =  this.entries.iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  max  =  this.entries.iterator();	  Entry    max    =    entries.iterator();    	non-compiled	[CE]  ';'  expected	69	None	replace
32	[BUG]  [BUGGY]  Entry  max  =  this.entryList.iterator();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  max  =  this.entryList.iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  max  =  this.entryList.iterator();	  Entry    max    =    entries.iterator();    	non-compiled	[CE]  ';'  expected	69	None	replace
33	[BUG]  [BUGGY]  Entry  max  =  this.entries.size();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  max  =  this.entries.size();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  max  =  this.entries.size();	  Entry    max    =    entries.iterator();    	non-compiled	[CE]  ';'  expected	69	None	replace
34	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().entries();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().entries();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry().entries();	  Entry    <    K,    V>    entry    =    getEntry().entrySet();    	non-compiled	[CE]  ';'  expected	74	None	replace
35	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().size();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().size();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry().size();	  Entry    <    K,    V>    entry    =    getEntry().entrySet();    	non-compiled	[CE]  ';'  expected	74	None	replace
36	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.entries.keySet().iterator();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.entries.keySet().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.entries.keySet().iterator();	  Iterator    <    Entry>    entries    =    this.entries.values().iterator();    	non-compiled	[CE]  ';'  expected	66	None	replace
37	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =(this.entries!=  null)?  this.entries.values().iterator()  :  entries.iterator();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =(this.entries!=  null)?  this.entries.values().iterator()  :  entries.iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =(this.entries!=  null)?  this.entries.values().iterator()  :  entries.iterator();	  Iterator    <    Entry>    entries    =    this.entries.values().iterator();    	non-compiled	[CE]  ';'  expected	66	None	replace
38	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(0,  index  -  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(0,  index  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(0,  index  -  1);	  Entry    <    K,    V>    entry    =    entries.get(index    -    1);    	non-compiled	[CE]  ';'  expected	44	None	replace
39	[BUG]  [BUGGY]  int  max  =  DEFAULT_ZERO_TOLERANCE;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  int  max  =  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	int  max  =  DEFAULT_ZERO_TOLERANCE;	  double    max    =    DEFAULT_ZERO_TOLERANCE;    long    max    =    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  ';'  expected	42	None	replace
40	[BUG]  [BUGGY]  long  max  =  DEFAULT_ZERO_TOLERANCE;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  long  max  =  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	long  max  =  DEFAULT_ZERO_TOLERANCE;	  double    max    =    DEFAULT_ZERO_TOLERANCE;    long    max    =    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  ';'  expected	42	None	replace
41	[BUG]  [BUGGY]  n  =  DEFAULT_ZERO_TOLERANCE;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  n  =  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	n  =  DEFAULT_ZERO_TOLERANCE;	  double    max    =    DEFAULT_ZERO_TOLERANCE;    long    max    =    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  ';'  expected	42	None	replace
42	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  this.entries.entrySet().iterator();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  this.entries.entrySet().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  this.entries.entrySet().iterator();	  Entry    <    N,    V>    entry    =    this.entries.iterator();    	non-compiled	[CE]  ';'  expected	26	None	replace
43	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  this.entries!=  null?  this.entries.iterator()  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  this.entries!=  null?  this.entries.iterator()  :  null;  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  this.entries!=  null?  this.entries.iterator()  :  null;	  Entry    <    N,    V>    entry    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
44	[BUG]  [BUGGY]  double  max  =  this.value  /  DEFAULT_ZERO_TOLERANCE  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value  /  DEFAULT_ZERO_TOLERANCE  +  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value  /  DEFAULT_ZERO_TOLERANCE  +  1;	  double    max    =    this.value    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  double  max  =  this.value  /  DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value  /  DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value  /  DEFAULT_ZERO_TOLERANCE  *  DEFAULT_ZERO_TOLERANCE;	  double    max    =    this.value    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  double  max  =  this.value  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value  *  DEFAULT_ZERO_TOLERANCE;	  double    max    =    this.value    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  double  max  =  this.value  -  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value  -  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value  -  1;	  double    max    =    this.value;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
48	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(i  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(i  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entries.get(i  -  1);	  Entry    entry    =(Entry)entries.get(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
49	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(0,  i  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)entries.get(0,  i  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)entries.get(0,  i  -  1);	  Entry    entry    =(Entry)entries.get(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
50	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(0);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entries.get(0);	  Entry    entry    =(Entry)this.entries.get(i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
51	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(i  +  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entries.get(i  +  1);	  Entry    entry    =(Entry)this.entries.get(i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
52	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(key);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(key);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entryMap.get(key);	  Entry    entry    =(Entry)this.entryMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
53	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(i  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(i  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entryMap.get(i  -  1);	  Entry    entry    =(Entry)this.entryMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
54	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(i  +  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entryMap.get(i  +  1);	  Entry    entry    =(Entry)this.entryMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
55	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entrySet.get(0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entrySet.get(0);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entrySet.get(0);	  Entry    entry    =(Entry)entries.get(0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
56	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(0);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(0);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entryMap.get(0);	  Entry    entry    =(Entry)entries.get(0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
57	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.value();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.value();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries.value();	  Entry    <    K,    V>    entry    =    entries.value();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
58	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(1);	  Entry    <    K,    V>    entry    =    entries.get(0);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
59	[BUG]  [BUGGY]  double  max  =  0;  Double  max  =  0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  0;  Double  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  0;  Double  max  =  0;	  double    max    =    1;    Double    max    =    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
60	[BUG]  [BUGGY]  Double  max  =  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Double  max  =  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Double  max  =  1;	  double    max    =    1;    Double    max    =    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
61	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(key);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(key);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entries.get(key);	  Entry    entry    =(Entry)entries.get(key);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
62	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(this.value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)entries.get(this.value);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)entries.get(this.value);	  Entry    entry    =(Entry)entries.get(key);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
63	[BUG]  [BUGGY]  double  max  =  key.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  key.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  key.doubleValue();	  double    max    =    n.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
64	[BUG]  [BUGGY]  double  max  =  n.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  n.doubleValue()  +  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  n.doubleValue()  +  1;	  double    max    =    n.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
65	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().getKey();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().getKey();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry().getKey();	  Entry    <    K,    V>    entry    =    getEntry().getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
66	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().getValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().getValue()  +  1;  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry().getValue()  +  1;	  Entry    <    K,    V>    entry    =    getEntry().getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
67	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().getIterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().getIterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry().getIterator();	  Entry    <    K,    V>    entry    =    getEntry().getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
68	[BUG]  [BUGGY]  double  max  =  1.0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  1.0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  1.0;	  double    max    =    0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
69	[BUG]  [BUGGY]  double  max  =  1.0d;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  1.0d;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  1.0d;	  double    max    =    0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
70	[BUG]  [BUGGY]  double  max  =  0.0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  0.0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  0.0;	  double    max    =    0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
71	[BUG]  [BUGGY]  double  max  =  0.5;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  0.5;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  0.5;	  double    max    =    0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
72	[BUG]  [BUGGY]  double  max  =(value  <  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  <  0)?  DEFAULT_ZERO_TOLERANCE  :  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  <  0)?  DEFAULT_ZERO_TOLERANCE  :  0;	  double    max    =(value    <    0)?    0    :    0;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
73	[BUG]  [BUGGY]  double  max  =(value  <  0)?  1  :  0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  <  0)?  1  :  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  <  0)?  1  :  0;	  double    max    =(value    <    0)?    0    :    0;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
74	[BUG]  [BUGGY]  double  max  =(value  ==  0)?  0  :  0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  ==  0)?  0  :  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  0)?  0  :  0;	  double    max    =(value    <    0)?    0    :    0;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
75	[BUG]  [BUGGY]  double  max  =(value  <  1)?  0  :  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  <  1)?  0  :  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  <  1)?  0  :  1;	  double    max    =(value    <    0)?    0    :    0;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
76	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.entrySet().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries.entrySet().iterator();	  Entry    <    K,    V>    entry    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
77	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries!=  null?  this.entries.iterator()  :  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries!=  null?  this.entries.iterator()  :  null;  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries!=  null?  this.entries.iterator()  :  null;	  Entry    <    K,    V>    entry    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
78	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.getNorms().iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.getNorms().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.getNorms().iterator();	  Iterator    <    Entry>    entries    =    this.getEntrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
79	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.getNorm().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.getNorm().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.getNorm().iterator();	  Iterator    <    Entry>    entries    =    this.getEntrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
80	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.getEntryHashMap().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.getEntryHashMap().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.getEntryHashMap().iterator();	  Iterator    <    Entry>    entries    =    this.getEntrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
81	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.values();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.values();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.values();	  Entry    <    K,    V>    entry    =    entries.entrySet();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
82	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.entrySet();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.entrySet();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries.entrySet();	  Entry    <    K,    V>    entry    =    entries.entrySet();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
83	[BUG]  [BUGGY]  Iterator  iter  =  entries.entryIterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  iter  =  entries.entryIterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  iter  =  entries.entryIterator();	  Iterator    iter    =    current.entryIterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
84	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entries.get(index);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entries.get(index);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entries.get(index);	  Entry    entry    =(Entry)entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
85	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)entries.get(index  -  1);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)entries.get(index  -  1);	  Entry    entry    =(Entry)entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
86	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)this.entryMap.get(index);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)this.entryMap.get(index);	  Entry    entry    =(Entry)entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
87	[BUG]  [BUGGY]  Double  max  =(value!=  null)?  0  :  value.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Double  max  =(value!=  null)?  0  :  value.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Double  max  =(value!=  null)?  0  :  value.doubleValue();	  Double    max    =(value    ==    null)?    0    :    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  Double  max  =(value  ==  null)?  1  :  value.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Double  max  =(value  ==  null)?  1  :  value.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Double  max  =(value  ==  null)?  1  :  value.doubleValue();	  Double    max    =(value    ==    null)?    0    :    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.entryHashMap().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.entryHashMap().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.entryHashMap().iterator();	  Iterator    <    Entry>    entries    =    this.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
90	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entryList.get(index);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entryList.get(index);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entryList.get(index);	  Entry    <    K,    V>    entry    =    this.entryList.iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
91	[BUG]  [BUGGY]  double  max  =(value!=  null)?  1  :  value.doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value!=  null)?  1  :  value.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value!=  null)?  1  :  value.doubleValue();	  double    max    =(value    ==    null)?    1    :    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
92	[BUG]  [BUGGY]  double  max  =(value  ==  null)?  2  :  value.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  ==  null)?  2  :  value.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  null)?  2  :  value.doubleValue();	  double    max    =(value    ==    null)?    1    :    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
93	[BUG]  [BUGGY]  int  max  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  int  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	int  max  =  0;	  double    max    =    DEFAULT_ZERO_TOLERANCE;    int    max    =    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
94	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(0,  index++);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(0,  index++);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(0,  index++);	  Entry    <    K,    V>    entry    =    entries.get(index++);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
95	[BUG]  [BUGGY]  n  =  0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  n  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	n  =  0;	  double    max    =    DEFAULT_ZERO_TOLERANCE;    double    max    =    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
96	[BUG]  [BUGGY]  double  max  =(value!=  null)?  -1  :  value.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value!=  null)?  -1  :  value.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value!=  null)?  -1  :  value.doubleValue();	  double    max    =(value    ==    null)?    -1    :    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
97	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(current);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(current);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  entries.get(current);	  Entry    <    N,    V>    entry    =    entries.get(key);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
98	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(index);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(index);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  entries.get(index);	  Entry    <    N,    V>    entry    =    entries.get(key);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
99	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(this.value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(this.value);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  entries.get(this.value);	  Entry    <    N,    V>    entry    =    entries.get(key);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
100	[BUG]  [BUGGY]  double  max  =  0;  long  max  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  0;  long  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  0;  long  max  =  0;	  double    max    =    0L;    long    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
101	[BUG]  [BUGGY]  long  max  =  0L;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  long  max  =  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	long  max  =  0L;	  double    max    =    0L;    long    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
102	[BUG]  [BUGGY]  int  max  =  0L;  long  max  =  0L;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  int  max  =  0L;  long  max  =  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	int  max  =  0L;  long  max  =  0L;	  double    max    =    0L;    long    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
103	[BUG]  [BUGGY]  Double  max  =  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Double  max  =  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Double  max  =  DEFAULT_ZERO_TOLERANCE;	  double    max    =    DEFAULT_ZERO_TOLERANCE;    Double    max    =    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
104	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry(1);	  Entry    <    K,    V>    entry    =    getEntry(0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
105	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(0).getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(0).getValue();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry(0).getValue();	  Entry    <    K,    V>    entry    =    getEntry(0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
106	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(n);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(n);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry(n);	  Entry    <    K,    V>    entry    =    getEntry(0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
107	[BUG]  [BUGGY]  Double  max  =  0L;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Double  max  =  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Double  max  =  0L;	  Double    max    =    0;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
108	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  this.entries.value();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  this.entries.value();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  this.entries.value();	  Entry    <    N,    V>    entry    =    entries.value();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
109	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(0);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  entries.get(0);	  Entry    <    N,    V>    entry    =    entries.value();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
110	[BUG]  [BUGGY]  double  max  =(value  <  1)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  <  1)?  0L  :  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  <  1)?  0L  :  0L;	  double    max    =(value    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
111	[BUG]  [BUGGY]  double  max  =(value  <  0)?  1L  :  0L;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  <  0)?  1L  :  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  <  0)?  1L  :  0L;	  double    max    =(value    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
112	[BUG]  [BUGGY]  double  max  =(value  <  2)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  <  2)?  0L  :  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  <  2)?  0L  :  0L;	  double    max    =(value    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
113	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(this.value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(this.value);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(this.value);	  Entry    <    K,    V>    entry    =    entries.get(key);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
114	[BUG]  [BUGGY]  double  max  =  this.data.doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.data.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.data.doubleValue();	  double    max    =    data.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
115	[BUG]  [BUGGY]  double  max  =  0;  int  max  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  0;  int  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  0;  int  max  =  0;	  double    max    =    1;    int    max    =    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
116	[BUG]  [BUGGY]  int  max  =  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  int  max  =  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	int  max  =  1;	  double    max    =    1;    int    max    =    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
117	[BUG]  [BUGGY]  double  max  =  1;  int  max  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  1;  int  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  1;  int  max  =  0;	  double    max    =    1;    int    max    =    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
118	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  entries.values();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  entries.values();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  entries.values();	  Entry    <    N,    V>    entry    =    entries.entrySet();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
119	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  this.entries.entrySet();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  this.entries.entrySet();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  this.entries.entrySet();	  Entry    <    N,    V>    entry    =    entries.entrySet();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
120	[BUG]  [BUGGY]  double  max  =(value!=  null)?  DEFAULT_ZERO_TOLERANCE  :  value.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value!=  null)?  DEFAULT_ZERO_TOLERANCE  :  value.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value!=  null)?  DEFAULT_ZERO_TOLERANCE  :  value.doubleValue();	  double    max    =(value    ==    null)?    DEFAULT_ZERO_TOLERANCE    :    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
121	[BUG]  [BUGGY]  Double  max  =(value  ==  null)?  DEFAULT_ZERO_TOLERANCE  :  value.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Double  max  =(value  ==  null)?  DEFAULT_ZERO_TOLERANCE  :  value.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Double  max  =(value  ==  null)?  DEFAULT_ZERO_TOLERANCE  :  value.doubleValue();	  double    max    =(value    ==    null)?    DEFAULT_ZERO_TOLERANCE    :    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
122	[BUG]  [BUGGY]  long  max  =  0L;  int  max  =  0L;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  long  max  =  0L;  int  max  =  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	long  max  =  0L;  int  max  =  0L;	  double    max    =    0L;    int    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
123	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  entries.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  entries.keySet().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  entries.keySet().iterator();	  Entry    <    N,    V>    entry    =    entries.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
124	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  entries.values().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  entries.values().iterator();	  Entry    <    N,    V>    entry    =    entries.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
125	[BUG]  [BUGGY]  long  max  =  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  long  max  =  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	long  max  =  1;	  double    max    =    1;    long    max    =    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
126	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.getEntryList().iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.getEntryList().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.getEntryList().iterator();	  Iterator    <    Entry>    entries    =    getEntryList().iterator();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
127	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.entryList.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.entryList.iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.entryList.iterator();	  Iterator    <    Entry>    entries    =    getEntryList().iterator();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
128	[BUG]  [BUGGY]  double  max  =  value  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  value  -  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  value  -  1;	  double    max    =    DEFAULT_ZERO_TOLERANCE    -    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
129	[BUG]  [BUGGY]  double  max  =  epsilon  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  epsilon  -  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  epsilon  -  1;	  double    max    =    DEFAULT_ZERO_TOLERANCE    -    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
130	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.keySet().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.keySet().iterator();	  Entry    <    K,    V>    entry    =    entries.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
131	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.values().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.values().iterator();	  Entry    <    K,    V>    entry    =    entries.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
132	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(i  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(i  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(i  -  1);	  Entry    <    K,    V>    entry    =    entries.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
133	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.current.getEntrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.current.getEntrySet().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.current.getEntrySet().iterator();	  Iterator    <    Entry>    entries    =    current.getEntrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
134	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  current.getEntryHashMap().iterator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  current.getEntryHashMap().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  current.getEntryHashMap().iterator();	  Iterator    <    Entry>    entries    =    current.getEntrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
135	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  current.getNorms().iterator();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  current.getNorms().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  current.getNorms().iterator();	  Iterator    <    Entry>    entries    =    current.getEntrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
136	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.getEntry(0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.getEntry(0);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries.getEntry(0);	  Entry    <    K,    V>    entry    =    this.entries.getEntry();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
137	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.getEntry(this.value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.getEntry(this.value);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries.getEntry(this.value);	  Entry    <    K,    V>    entry    =    this.entries.getEntry();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
138	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.getValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.getValue();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries.getValue();	  Entry    <    K,    V>    entry    =    this.entries.getEntry();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
139	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(DEFAULT_ZERO_TOLERANCE);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry(DEFAULT_ZERO_TOLERANCE);	  Entry    <    K,    V>    entry    =    getEntry(null);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
140	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(null,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(null,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry(null,  DEFAULT_ZERO_TOLERANCE);	  Entry    <    K,    V>    entry    =    getEntry(null);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
141	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(entries);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry(entries);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry(entries);	  Entry    <    K,    V>    entry    =    getEntry(null);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
142	[BUG]  [BUGGY]  double  max  =  1.0.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  1.0.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  1.0.doubleValue();	  double    max    =    0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
143	[BUG]  [BUGGY]  double  max  =  1.0dValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  1.0dValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  1.0dValue();	  double    max    =    0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
144	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =(this.entries!=  null)?  this.entries.values().iterator()  :  new  OpenMapSparseIterator  <  Entry>();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =(this.entries!=  null)?  this.entries.values().iterator()  :  new  OpenMapSparseIterator  <  Entry>();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =(this.entries!=  null)?  this.entries.values().iterator()  :  new  OpenMapSparseIterator  <  Entry>();	  Iterator    <    Entry>    entries    =    this.entries.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
145	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.valueHashMap().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.valueHashMap().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.valueHashMap().iterator();	  Iterator    <    Entry>    entries    =    this.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
146	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().getNorm();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().getNorm();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry().getNorm();	  Entry    <    K,    V>    entry    =    getEntry().getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
147	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  getEntryList().values().iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  getEntryList().values().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  getEntryList().values().iterator();	  Iterator    <    Entry>    entries    =    getEntryList().iterator();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
148	[BUG]  [BUGGY]  Iterator  iter  =  this.current.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  iter  =  this.current.entries.iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  iter  =  this.current.entries.iterator();	  Iterator    iter    =    current.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
149	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index++  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index++  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(index++  -  1);	  Entry    <    K,    V>    entry    =    entries.get(index++);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
150	[BUG]  [BUGGY]  Iterator  iter  =  this.current.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  iter  =  this.current.entrySet().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  iter  =  this.current.entrySet().iterator();	  Iterator    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
151	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.info.values.iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.info.values.iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.info.values.iterator();	  Iterator    <    Entry>    entries    =    this.info.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
152	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.listeners.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.listeners.iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.listeners.iterator();	  Iterator    <    Entry>    entries    =    this.list.iterator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
153	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.value.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.value.iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.value.iterator();	  Iterator    <    Entry>    entries    =    this.list.iterator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
154	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.info.entryList.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.info.entryList.iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.info.entryList.iterator();	  Entry    <    K,    V>    entry    =    this.entryList.iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
155	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  this.entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  this.entries.values().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  this.entries.values().iterator();	  Entry    <    N,    V>    entry    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
156	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entryIterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  iter  =  current.entryIterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  iter  =  current.entryIterator();	  Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
157	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.values().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries.values().iterator();	  Entry    <    K,    V>    entry    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
158	[BUG]  [BUGGY]  double  max  =  2;  long  max  =  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  2;  long  max  =  2;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  2;  long  max  =  2;	  double    max    =    1;    long    max    =    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
159	[BUG]  [BUGGY]  double  max  =  1;  long  max  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  1;  long  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  1;  long  max  =  0;	  double    max    =    1;    long    max    =    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
160	[BUG]  [BUGGY]  double  max  =(value  <  0)?  0L  :  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  <  0)?  0L  :  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  <  0)?  0L  :  1;	  double    max    =(value    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
161	[BUG]  [BUGGY]  double  max  =(value  ==  0)?  0L  :  0L;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  ==  0)?  0L  :  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  0)?  0L  :  0L;	  double    max    =(value    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
162	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(current  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(current  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(current  -  1);	  Entry    <    K,    V>    entry    =    entries.get(current);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
163	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(current  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(current  +  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(current  +  1);	  Entry    <    K,    V>    entry    =    entries.get(current);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
164	[BUG]  [BUGGY]  double  max  =  0,  max  =  0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  0,  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  0,  max  =  0;	  double    max    =    0L;    double    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
165	[BUG]  [BUGGY]  Iterator  iter  =  this.current.entryIterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  iter  =  this.current.entryIterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  iter  =  this.current.entryIterator();	  Iterator    iter    =    current.entryIterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
166	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  -  1  +  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(index  -  1  +  1);	  Entry    <    K,    V>    entry    =    entries.get(index    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
167	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  -  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  -  2);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(index  -  2);	  Entry    <    K,    V>    entry    =    entries.get(index    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
168	[BUG]  [BUGGY]  double  max  =  value  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  value  +  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  value  +  1;	  double    max    =    DEFAULT_ZERO_TOLERANCE    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
169	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(key  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)entries.get(key  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)entries.get(key  -  1);	  Entry    entry    =(Entry)entries.get(key);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
170	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)entries.get(index  +  1);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)entries.get(index  +  1);	  Entry    entry    =(Entry)entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
171	[BUG]  [BUGGY]  double  max  =  DEFAULT_NEGATIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_NEGATIVE_INFINITY;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_NEGATIVE_INFINITY;	  double    max    =    DEFAULT_ZERO_TOLERANCE;    Double    max    =    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
172	[BUG]  [BUGGY]  Entry  max  =  this.entries.value();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  max  =  this.entries.value();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  max  =  this.entries.value();	  Entry    max    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
173	[BUG]  [BUGGY]  Double  max  =  0;  int  max  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Double  max  =  0;  int  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Double  max  =  0;  int  max  =  0;	  double    max    =    1;    int    max    =    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
174	[BUG]  [BUGGY]  int  max  =  0;  int  max  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  int  max  =  0;  int  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	int  max  =  0;  int  max  =  0;	  double    max    =    0L;    long    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
175	[BUG]  [BUGGY]  Double  max  =  0;  long  max  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Double  max  =  0;  long  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Double  max  =  0;  long  max  =  0;	  double    max    =    0L;    long    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
176	[BUG]  [BUGGY]  double  max  =  data.length  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  data.length  -  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  data.length  -  1;	  double    max    =    DEFAULT_ZERO_TOLERANCE    -    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
177	[BUG]  [BUGGY]  double  max  =  DEFAULT_NUMBER_INTEGER;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_NUMBER_INTEGER;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_NUMBER_INTEGER;	  double    max    =    DEFAULT_ZERO_TOLERANCE;    double    max    =    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
178	[BUG]  [BUGGY]  double  max  =  DEFAULT_NUMBER_OF_NORMAL;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_NUMBER_OF_NORMAL;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_NUMBER_OF_NORMAL;	  double    max    =    DEFAULT_ZERO_TOLERANCE;    double    max    =    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
179	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().value();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().value();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry().value();	  Entry    <    K,    V>    entry    =    getEntry().entrySet();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
180	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.getEntryCount();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.getEntryCount();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries.getEntryCount();	  Entry    <    K,    V>    entry    =    this.entries.getEntry();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
181	[BUG]  [BUGGY]  double  max  =  defULT_ZERO_TOLERANCE.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  defULT_ZERO_TOLERANCE.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  defULT_ZERO_TOLERANCE.doubleValue();	  double    max    =    DEFAULT_ZERO_TOLERANCE.doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
182	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(i  -  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)entries.get(i  -  2);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)entries.get(i  -  2);	  Entry    entry    =(Entry)entries.get(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
183	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(0  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)entries.get(0  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)entries.get(0  -  1);	  Entry    entry    =(Entry)entries.get(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
184	[BUG]  [BUGGY]  double  max  =  value  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  value  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  value  /  DEFAULT_ZERO_TOLERANCE;	  double    max    =    this.value    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
185	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  current.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  current.values().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  current.values().iterator();	  Iterator    <    Entry>    entries    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
186	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  current.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  current.keySet().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  current.keySet().iterator();	  Iterator    <    Entry>    entries    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
187	[BUG]  [BUGGY]  double  max  =(value  <  0)?  0  :  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  <  0)?  0  :  1;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  <  0)?  0  :  1;	  double    max    =(value    <    0)?    0    :    0;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
188	[BUG]  [BUGGY]  double  max  =(value  >=  0)?  0  :  0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  >=  0)?  0  :  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  >=  0)?  0  :  0;	  double    max    =(value    <    0)?    0    :    0;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
189	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(i  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(i  +  2);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(i  +  2);	  Entry    <    K,    V>    entry    =    entries.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
190	[BUG]  [BUGGY]  float  max  =  0L;  int  max  =  0L;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  float  max  =  0L;  int  max  =  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	float  max  =  0L;  int  max  =  0L;	  double    max    =    0L;    int    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
191	[BUG]  [BUGGY]  double  max  =  0;  Double  max  =  0L;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  0;  Double  max  =  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  0;  Double  max  =  0L;	  double    max    =    0L;    Double    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
192	[BUG]  [BUGGY]  double  max  =  value?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  value?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  value?  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	  double    max    =    this.value?    DEFAULT_ZERO_TOLERANCE    :    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
193	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(key  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(key  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  entries.get(key  -  1);	  Entry    <    N,    V>    entry    =    entries.get(key);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
194	[BUG]  [BUGGY]  double  max  =  epsilon  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  epsilon  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  epsilon  /  DEFAULT_ZERO_TOLERANCE;	  double    max    =    this.value    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
195	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.list().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.list().iterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.list().iterator();	  Iterator    <    Entry>    entries    =    this.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
196	[BUG]  [BUGGY]  Entry  max  =  this.entrySize.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  max  =  this.entrySize.iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  max  =  this.entrySize.iterator();	  Entry    max    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
197	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =(this.entries!=  null)?  this.entries.values().iterator()  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =(this.entries!=  null)?  this.entries.values().iterator()  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =(this.entries!=  null)?  this.entries.values().iterator()  :  DEFAULT_ZERO_TOLERANCE;	  Iterator    <    Entry>    entries    =    this.entries.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
198	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(current);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)entries.get(current);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)entries.get(current);	  Entry    entry    =(Entry)entries.get(key);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
199	[BUG]  [BUGGY]  double  max  =  this.value.doubleValue()  -(this.value!=  null?  this.value.doubleValue()  :  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value.doubleValue()  -(this.value!=  null?  this.value.doubleValue()  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value.doubleValue()  -(this.value!=  null?  this.value.doubleValue()  :  DEFAULT_ZERO_TOLERANCE);	  double    max    =    this.value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
200	[BUG]  [BUGGY]  double  max  =  this.value  -(this.value  *  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value  -(this.value  *  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value  -(this.value  *  DEFAULT_ZERO_TOLERANCE);	  double    max    =    this.value;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
201	[BUG]  [BUGGY]  long  max  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  long  max  =  0;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	long  max  =  0;	  double    max    =    0L;    long    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
202	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.getEntry().getValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.getEntry().getValue();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.getEntry().getValue();	  Entry    <    K,    V>    entry    =    getEntry().getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
203	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.getValue();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.getValue();	  Entry    <    K,    V>    entry    =    getEntry().getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
204	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;	  Entry    <    N,    V>    entry    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
205	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  this.entries!=  null?  this.entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  N,  V>  entry  =  this.entries!=  null?  this.entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  N,  V>  entry  =  this.entries!=  null?  this.entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;	  Entry    <    N,    V>    entry    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
206	[BUG]  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE?  this.value  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE?  this.value  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_ZERO_TOLERANCE?  this.value  :  DEFAULT_ZERO_TOLERANCE;	  double    max    =    this.value?    DEFAULT_ZERO_TOLERANCE    :    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
207	[BUG]  [BUGGY]  double  max  =  this.value  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  this.value  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  this.value  /  DEFAULT_ZERO_TOLERANCE  :  DEFAULT_ZERO_TOLERANCE;	  double    max    =    this.value?    DEFAULT_ZERO_TOLERANCE    :    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
208	[BUG]  [BUGGY]  double  max  =  1.0d();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  1.0d();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  1.0d();	  double    max    =    0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
209	[BUG]  [BUGGY]  double  max  =  1.0f;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  1.0f;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  1.0f;	  double    max    =    0.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
210	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.info.listIterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Iterator  <  Entry>  entries  =  this.info.listIterator();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Iterator  <  Entry>  entries  =  this.info.listIterator();	  Iterator    <    Entry>    entries    =    this.info.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
211	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(0,  entries.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)entries.get(0,  entries.size()  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)entries.get(0,  entries.size()  -  1);	  Entry    entry    =(Entry)entries.get(0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
212	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(key  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(key  -  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(key  -  1);	  Entry    <    K,    V>    entry    =    entries.get(key);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
213	[BUG]  [BUGGY]  double  max  =  DEFAULT_NUMBER_OF_RANGE;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_NUMBER_OF_RANGE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_NUMBER_OF_RANGE;	  double    max    =    DEFAULT_ZERO_TOLERANCE;    double    max    =    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
214	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;	  Entry    <    K,    V>    entry    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
215	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().next();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  getEntry().next();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  getEntry().next();	  Entry    <    K,    V>    entry    =    getEntry().entrySet();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
216	[BUG]  [BUGGY]  double  max  =  entry.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  entry.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  entry.doubleValue();	  double    max    =    n.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
217	[BUG]  [BUGGY]  double  max  =  entries.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  entries.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  entries.doubleValue();	  double    max    =    n.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
218	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.getEntry();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.getEntry();  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.getEntry();	  Entry    <    K,    V>    entry    =    this.entries.getEntry();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
219	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  *  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  *  1);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  entries.get(index  *  1);	  Entry    <    K,    V>    entry    =    entries.get(index    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
220	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(i  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  entry  =(Entry)entries.get(i  +  2);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  entry  =(Entry)entries.get(i  +  2);	  Entry    entry    =(Entry)entries.get(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
221	[BUG]  [BUGGY]  double  max  =  2;  int  max  =  2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  2;  int  max  =  2;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  2;  int  max  =  2;	  double    max    =    1;    int    max    =    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
222	[BUG]  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE;  Double  max  =  0L;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE;  Double  max  =  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_ZERO_TOLERANCE;  Double  max  =  0L;	  double    max    =    0L;    Double    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
223	[BUG]  [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE.doubleValue();  Double  max  =  0L;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =  DEFAULT_ZERO_TOLERANCE.doubleValue();  Double  max  =  0L;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =  DEFAULT_ZERO_TOLERANCE.doubleValue();  Double  max  =  0L;	  double    max    =    0L;    Double    max    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
224	[BUG]  [BUGGY]  double  max  =(value  ==  null)?  DEFAULT_ZERO_TOLERANCE  :  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  ==  null)?  DEFAULT_ZERO_TOLERANCE  :  delta.doubleValue();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  ==  null)?  DEFAULT_ZERO_TOLERANCE  :  delta.doubleValue();	  double    max    =(value    ==    null)?    DEFAULT_ZERO_TOLERANCE    :    value.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
225	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.get(current);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.get(current);  [BUGGY]      double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	Entry  <  K,  V>  entry  =  this.entries.get(current);	  Entry    <    K,    V>    entry    =    entries.get(current);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
226	[BUG]  [BUGGY]  double  max  =(value  <  0)?  0L  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {      [BUGGY]  double  max  =(value  <  0)?  0L  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	499	499	2	replace	double  max  =(value  <  0)?  0L  :  DEFAULT_ZERO_TOLERANCE;	  double    max    =(value    <    0)?    0L    :    0L;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
