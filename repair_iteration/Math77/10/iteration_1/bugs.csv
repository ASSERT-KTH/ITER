bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  Math.sqrt(sum  +  1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  +  1);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  +  1);	return  Math.sqrt(sum);  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2	[BUG]  [BUGGY]  return  Math.sqrt(sum  +  a);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  +  a);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  +  a);	return  Math.sqrt(sum);  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  return  Math.sin(sum);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sin(sum);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sin(sum);	return  Math.sqrt(sum);  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	  	return  Math.sqrt(sum);  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
5	[BUG]  [BUGGY]    Math.sqrt(sum);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    Math.sqrt(sum);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    Math.sqrt(sum);		non-compiled	[CE]  illegal  start  of  expression	20	None	add
6	[BUG]  [BUGGY]    double[]  d  =(double[])data.clone();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    double[]  d  =(double[])data.clone();  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    double[]  d  =(double[])data.clone();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
7	[BUG]  [BUGGY]    double[]  d  =(double[])data.toArray(new  double[data.size()  ]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    double[]  d  =(double[])data.toArray(new  double[data.size()  ]);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    double[]  d  =(double[])data.toArray(new  double[data.size()  ]);		non-compiled	[CE]  illegal  start  of  expression	20	None	add
8	[BUG]  [BUGGY]    double[]  d  =  getNorm();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    double[]  d  =  getNorm();  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    double[]  d  =  getNorm();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
9	[BUG]  [BUGGY]    double[]  d  =(double[])data.get(a);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    double[]  d  =(double[])data.get(a);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    double[]  d  =(double[])data.get(a);		non-compiled	[CE]  illegal  start  of  expression	20	None	add
10	[BUG]  [BUGGY]  return  Math.sqrt(sum,  data);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum,  data);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum,  data);	return  Math.sqrt(sum);  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
11	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i];  }  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i];  }		non-compiled	[CE]  ';'  expected	20	None	add
12	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  sum  +=  data[i];  }  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  sum  +=  data[i];  }		non-compiled	[CE]  ';'  expected	20	None	add
13	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i]  *  a;  }  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i]  *  a;  }  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i]  *  a;  }		non-compiled	[CE]  ';'  expected	20	None	add
14	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i]  *  d;  }  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i]  *  d;  }  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i]  *  d;  }		non-compiled	[CE]  ';'  expected	20	None	add
15	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  sum  +=  data[i].doubleValue();  }  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  sum  +=  data[i].doubleValue();  }  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  sum  +=  data[i].doubleValue();  }		non-compiled	[CE]  ';'  expected	20	None	add
16	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }		non-compiled	[CE]  ';'  expected	20	None	add
17	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  sum  +=  data[i].getNorm();  }  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  sum  +=  data[i].getNorm();  }  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  sum  +=  data[i].getNorm();  }		non-compiled	[CE]  ';'  expected	20	None	add
18	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  return  sum;  }  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  return  sum;  }  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  return  sum;  }		non-compiled	[CE]  ';'  expected	20	None	add
