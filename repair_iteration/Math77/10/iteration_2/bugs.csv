bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  i  =  0;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  int  i  =  0;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	int  i  =  0;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    <    a)    {    sum    +=    data[i].doubleValue();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(d[i]  <  a)  {  sum  +=  data[i].doubleValue();  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(d[i]  <  a)  {  sum  +=  data[i].doubleValue();  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(d[i]  <  a)  {  sum  +=  data[i].doubleValue();  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    <    a)    {    sum    +=    data[i].doubleValue();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
3	[BUG]  [BUGGY]  int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    <    a)    {    sum    +=    data[i].doubleValue();    }    	non-compiled	[CE]  >  expected	16	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  sum  +=  data[i].doubleValue();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  sum  +=  data[i].doubleValue();  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  sum  +=  data[i].doubleValue();  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    >    a)    {    sum    +=    data[i].doubleValue();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  ==  a)  {  sum  +=  data[i].doubleValue();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  ==  a)  {  sum  +=  data[i].doubleValue();  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  ==  a)  {  sum  +=  data[i].doubleValue();  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    >    a)    {    sum    +=    data[i].doubleValue();    }    	non-compiled	[CE]  ';'  expected	15	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  <  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  <  a)  {  sum  +=  data[i];  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  <  a)  {  sum  +=  data[i];  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i];    }    	non-compiled	[CE]  ';'  expected	11	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >=  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >=  a)  {  sum  +=  data[i];  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >=  a)  {  sum  +=  data[i];  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i];    }    	non-compiled	[CE]  ';'  expected	11	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length  -  1;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length  -  1;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i];  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length  -  1;  i++)  {  if(data[i]  >  a)  {  sum  +=  data[i];  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i];    }    	non-compiled	[CE]  ';'  expected	11	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  <  a)  {  sum  +=  data[i]  *  a;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  <  a)  {  sum  +=  data[i]  *  a;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  <  a)  {  sum  +=  data[i]  *  a;  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i]    *    a;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  ==  a)  {  sum  +=  data[i]  *  a;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  ==  a)  {  sum  +=  data[i]  *  a;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  ==  a)  {  sum  +=  data[i]  *  a;  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i]    *    a;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >=  a)  {  sum  +=  data[i]  *  a;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >=  a)  {  sum  +=  data[i]  *  a;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >=  a)  {  sum  +=  data[i]  *  a;  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i]    *    a;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i];  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i];  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    >    a)    {    sum    +=    data[i];    }    	non-compiled	[CE]  ';'  expected	12	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  sum  +=  data[i];  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  sum  +=  data[i];  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    >    a)    {    sum    +=    data[i];    }    	non-compiled	[CE]  ';'  expected	12	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  ==  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  ==  a)  {  sum  +=  data[i];  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  ==  a)  {  sum  +=  data[i];  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    >    a)    {    sum    +=    data[i];    }    	non-compiled	[CE]  ';'  expected	12	None	replace
15	[BUG]  [BUGGY]  double[]  d  =  getNorm()  +  sum;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =  getNorm()  +  sum;  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =  getNorm()  +  sum;	      double[]    d    =    getNorm();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  double[]  d  =  getNorm()  *  sum;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =  getNorm()  *  sum;  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =  getNorm()  *  sum;	      double[]    d    =    getNorm();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  double[]  d  =(double[])this.data.clone();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])this.data.clone();  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])this.data.clone();	      double[]    d    =(double[])data.clone();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  double[]  d  =(double[])sum.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])sum.clone();  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])sum.clone();	      double[]    d    =(double[])data.clone();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  double[]  d  =(double[])mapping.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])mapping.clone();  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])mapping.clone();	      double[]    d    =(double[])data.clone();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  double[]  d  =(double[])this.data.get(a);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])this.data.get(a);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])this.data.get(a);	      double[]    d    =(double[])data.get(a);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  double[]  d  =(double[])data.get(a  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])data.get(a  +  1);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])data.get(a  +  1);	      double[]    d    =(double[])data.get(a);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  double[]  d  =(double[])data.get(sum);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])data.get(sum);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])data.get(sum);	      double[]    d    =(double[])data.get(a);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  return  Math.sin(a);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sin(a);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sin(a);	  return    Math.sin(sum);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  return  Math.sin(sum  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sin(sum  +  1);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sin(sum  +  1);	  return    Math.sin(sum);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  return  Math.sin(sum,  data.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sin(sum,  data.length);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sin(sum,  data.length);	  return    Math.sin(sum);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  return  Math.sin(data,  sum);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sin(data,  sum);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sin(data,  sum);	  return    Math.sin(sum);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  sum.length;  ++i)  {  if(data[i]  <  a)  {  return  sum;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  sum.length;  ++i)  {  if(data[i]  <  a)  {  return  sum;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  sum.length;  ++i)  {  if(data[i]  <  a)  {  return  sum;  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    <    a)    {    return    sum;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
28	[BUG]  [BUGGY]  int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  return  sum;  }  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  return  sum;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  return  sum;  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    <    a)    {    return    sum;    }    	non-compiled	[CE]  >  expected	18	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  return  sum;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  return  sum;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  return  sum;  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    <    a)    {    return    sum;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
30	[BUG]  [BUGGY]  return  Math.sqrt(sum,  data.length);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum,  data.length);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum,  data.length);	  return    Math.sqrt(sum,    data);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  return  Math.sqrt(sum,  a);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum,  a);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum,  a);	  return    Math.sqrt(sum,    data);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  return  Math.sqrt(sum,  d);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum,  d);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum,  d);	  return    Math.sqrt(sum,    data);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  return  Math.sqrt(data,  sum);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(data,  sum);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(data,  sum);	  return    Math.sqrt(sum,    data);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  <  a)  {  sum  +=  data[i]  *  d;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  <  a)  {  sum  +=  data[i]  *  d;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  <  a)  {  sum  +=  data[i]  *  d;  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i]    *    d;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  ==  a)  {  sum  +=  data[i]  *  d;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  ==  a)  {  sum  +=  data[i]  *  d;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  ==  a)  {  sum  +=  data[i]  *  d;  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i]    *    d;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >=  a)  {  sum  +=  data[i]  *  d;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >=  a)  {  sum  +=  data[i]  *  d;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >=  a)  {  sum  +=  data[i]  *  d;  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i]    *    d;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].getNorm();  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].getNorm();  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].getNorm();  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    >    a)    {    sum    +=    data[i].getNorm();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  ==  a)  {  sum  +=  data[i].getNorm();  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  ==  a)  {  sum  +=  data[i].getNorm();  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  ==  a)  {  sum  +=  data[i].getNorm();  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    >    a)    {    sum    +=    data[i].getNorm();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  sum  +=  data[i].getNorm();  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  sum  +=  data[i].getNorm();  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >=  a)  {  sum  +=  data[i].getNorm();  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    >    a)    {    sum    +=    data[i].getNorm();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
40	[BUG]  [BUGGY]  double[]  d  =(double[])data.toArray(new  double[data.size()  +  1]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])data.toArray(new  double[data.size()  +  1]);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])data.toArray(new  double[data.size()  +  1]);	      double[]    d    =(double[])data.toArray(new    double[data.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  double[]  d  =(double[])data.toArray(new  double[data.size()  -  1]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])data.toArray(new  double[data.size()  -  1]);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])data.toArray(new  double[data.size()  -  1]);	      double[]    d    =(double[])data.toArray(new    double[data.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  double[]  d  =(double[])data.toArray(new  double[sum.size()  ]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])data.toArray(new  double[sum.size()  ]);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])data.toArray(new  double[sum.size()  ]);	      double[]    d    =(double[])data.toArray(new    double[data.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  return  Math.sqrt(sum  +  a,  sum);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  +  a,  sum);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  +  a,  sum);	  return    Math.sqrt(sum    +    a);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  return  Math.sqrt(sum  /  a);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  /  a);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  /  a);	  return    Math.sqrt(sum    +    a);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  return  Math.sqrt(sum  *  a);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  *  a);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  *  a);	  return    Math.sqrt(sum    +    a);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
46	[BUG]  [BUGGY]  return  Math.sqrt(sum  +  1,  a);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  +  1,  a);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  +  1,  a);	  return    Math.sqrt(sum    +    a);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
47	[BUG]  [BUGGY]  Math.sqrt(sum  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  Math.sqrt(sum  +  1);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	Math.sqrt(sum  +  1);	      Math.sqrt(sum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  Math.rint(sum);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  Math.rint(sum);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	Math.rint(sum);	      Math.sqrt(sum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  Math.sqrt(sum,  data.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  Math.sqrt(sum,  data.length);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	Math.sqrt(sum,  data.length);	      Math.sqrt(sum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]);  }  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]);  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
51	[BUG]  [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  data[i]  *  d[i];  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  data[i]  *  d[i];  }  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  data[i]  *  d[i];  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
52	[BUG]  [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]  *  i);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]  *  i);  }  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]  *  i);  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
53	[BUG]  [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  data[i]  *  d[i];  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  data[i]  *  d[i];  }  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  data[i]  *  d[i];  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
54	[BUG]  [BUGGY]  return  Math.sqrt(sum  /  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  /  1);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  /  1);	  return    Math.sqrt(sum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  return  Math.sqrt(sum  +  1,  sum);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  +  1,  sum);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  +  1,  sum);	  return    Math.sqrt(sum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  Math.sqrt(sum  +  a);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  Math.sqrt(sum  +  a);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	Math.sqrt(sum  +  a);	      Math.sqrt(sum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  return  Math.sqrt(sum  +  1,  data);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  +  1,  data);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  +  1,  data);	  return    Math.sqrt(sum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  return  Math.sqrt(sum  +  2);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  +  2);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  +  2);	  return    Math.sqrt(sum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  double[]  d  =  getDestination();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =  getDestination();  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =  getDestination();	      double[]    d    =    getNorm();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  double[]  d  =  getDimension();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =  getDimension();  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =  getDimension();	      double[]    d    =    getNorm();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  double[]  d  =  getNorm(sum);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =  getNorm(sum);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =  getNorm(sum);	      double[]    d    =    getNorm();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  0)  {  sum  +=  data[i]  *  a;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  0)  {  sum  +=  data[i]  *  a;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  >  0)  {  sum  +=  data[i]  *  a;  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i]    *    a;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  ==  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  ==  a)  {  sum  +=  data[i];  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]  ==  a)  {  sum  +=  data[i];  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i];    }    	non-compiled	[CE]  ';'  expected	11	None	replace
64	[BUG]  [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  data[i]  *  i;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  data[i]  *  i;  }  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  data[i]  *  i;  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
65	[BUG]  [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  data[i]  *  a;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  data[i]  *  a;  }  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	if(sum  >  0)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  data[i]  *  a;  }	      	non-compiled	[CE]  ';'  expected	4	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  return  sum;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  return  sum;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  >  a)  {  return  sum;  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    <    a)    {    return    sum;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
67	[BUG]  [BUGGY]  return  Math.sqrt(sum  +  data);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  +  data);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  +  data);	  return    Math.sqrt(sum    +    a);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
68	[BUG]  [BUGGY]  return  Math.sqrt(sum  +  a,  data);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  +  a,  data);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  +  a,  data);	  return    Math.sqrt(sum    +    a);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
69	[BUG]  [BUGGY]  return  Math.sin(sum,  data);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sin(sum,  data);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sin(sum,  data);	  return    Math.sin(sum);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  return  Math.sin(sum  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sin(sum  -  1);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sin(sum  -  1);	  return    Math.sin(sum);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  double[]  d  =(double[])data.toArray(new  double[sum  +  data.size()  ]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])data.toArray(new  double[sum  +  data.size()  ]);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])data.toArray(new  double[sum  +  data.size()  ]);	      double[]    d    =(double[])data.toArray(new    double[data.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  double[]  d  =(double[])data.get(a  +  sum);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])data.get(a  +  sum);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])data.get(a  +  sum);	      double[]    d    =(double[])data.get(a);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
73	[BUG]  [BUGGY]  return  Math.sqrt(sum  +  a  *  data);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  +  a  *  data);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  +  a  *  data);	  return    Math.sqrt(sum    +    a);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  double[]  d  =  out.getNorm();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =  out.getNorm();  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =  out.getNorm();	      double[]    d    =    getNorm();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
75	[BUG]  [BUGGY]  double[]  d  =(double[])this.data.toArray(new  double[data.size()  ]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  double[]  d  =(double[])this.data.toArray(new  double[data.size()  ]);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	double[]  d  =(double[])this.data.toArray(new  double[data.size()  ]);	      double[]    d    =(double[])data.toArray(new    double[data.size()    ]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
76	[BUG]  [BUGGY]  Math.sqrt(a);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  Math.sqrt(a);  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	Math.sqrt(a);	      Math.sqrt(sum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  ARRAY)  {  sum  +=  data[i].doubleValue();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  ARRAY)  {  sum  +=  data[i].doubleValue();  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]  <  ARRAY)  {  sum  +=  data[i].doubleValue();  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    <    a)    {    sum    +=    data[i].doubleValue();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  this.data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  this.data.length;  ++i)  {  if(data[i]  <  a)  {  sum  +=  data[i].doubleValue();  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    <    a)    {    sum    +=    data[i].doubleValue();    }    	non-compiled	[CE]  ';'  expected	16	None	replace
79	[BUG]  [BUGGY]  return  Math.sqrt(sum  *  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  return  Math.sqrt(sum  *  1);  [BUGGY]    }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  *  1);	  return    Math.sqrt(sum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]!=  a)  {  sum  +=  data[i]  *  a;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]!=  a)  {  sum  +=  data[i]  *  a;  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]!=  a)  {  sum  +=  data[i]  *  a;  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i]    *    a;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]!=  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]!=  a)  {  sum  +=  data[i];  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  ++i)  {  if(data[i]!=  a)  {  sum  +=  data[i];  }	      for(int    i    =    0;    i    <    data.length;    ++i)    {    if(data[i]    >    a)    {    sum    +=    data[i];    }    	non-compiled	[CE]  ';'  expected	12	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]!=  a)  {  sum  +=  data[i];  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }    [BUGGY]  for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]!=  a)  {  sum  +=  data[i];  }  [BUGGY]    return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	for(int  i  =  0;  i  <  data.length;  i++)  {  if(data[i]!=  a)  {  sum  +=  data[i];  }	      for(int    i    =    0;    i    <    data.length;    i++)    {    if(data[i]    >    a)    {    sum    +=    data[i];    }    	non-compiled	[CE]  ';'  expected	11	None	replace
