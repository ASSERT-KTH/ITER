bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getValues();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getValues();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getValues();	  double[]    data    =    getDataRealVectorFormat().values();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
2	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().values();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().values();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().values();	  double[]    data    =    getDataRealVectorFormat().values();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
3	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max  +  1);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max  +  1);	  double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    max);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
4	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max,  DEFAULT_FORMAT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max,  DEFAULT_FORMAT);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max,  DEFAULT_FORMAT);	  double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    max);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
5	[BUG]  [BUGGY]  double[]  data  =  getLInfNorm();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getLInfNorm();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getLInfNorm();	  double[]    data    =    getRealVectorFormat();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  double[]  data  =  getRealVectorFormat().length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRealVectorFormat().length;  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVectorFormat().length;	  double[]    data    =    getRealVectorFormat();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLInfNorm(max);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLInfNorm(max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLInfNorm(max);	  double[]    data    =    getDataRealVectorFormat().getLInfNorm();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
8	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLinfNorm();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLinfNorm();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLinfNorm();	  double[]    data    =    getDataRealVectorFormat().getLInfNorm();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
9	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLenfNorm();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLenfNorm();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLenfNorm();	  double[]    data    =    getDataRealVectorFormat().getLInfNorm();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
10	[BUG]  [BUGGY]  for(int  a  :  data.length,  Math.abs(a))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  :  data.length,  Math.abs(a))  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  data.length,  Math.abs(a))  {	  for(int    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
11	[BUG]  [BUGGY]  for(int  a  :  data.length,  max  +  1)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  :  data.length,  max  +  1)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  data.length,  max  +  1)  {	  for(int    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
12	[BUG]  [BUGGY]  for(int  a  :  data.length,  max  -  1)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  :  data.length,  max  -  1)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  data.length,  max  -  1)  {	  for(int    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
13	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1]  /  data[2]));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1]  /  data[2]));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1]  /  data[2]));	  Math.sqrt(data[0],    data[1]    -    data[2]));    	non-compiled	[CE]  ';'  expected	46	None	replace
14	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1]  -  1]));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1]  -  1]));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1]  -  1]));	  Math.sqrt(data[0],    data[1]    -    data[2]));    	non-compiled	[CE]  ')'  expected	46	None	replace
15	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1]  -  data[2]),  max);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1]  -  data[2]),  max);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1]  -  data[2]),  max);	  Math.sqrt(data[0],    data[1]    -    data[2]));    	non-compiled	[CE]  ';'  expected	46	None	replace
16	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);	  double[]    data    =    getDataRealVectorFormat(DEFAULT_FORMAT,    NON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
17	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  max);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  max);	  double[]    data    =    getDataRealVectorFormat(DEFAULT_FORMAT,    NON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
18	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVectorFormat(DEFAULT_FORMAT,    NON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
19	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector(true);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(true);	  double[]    data    =    getDataRealVector(false);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
20	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVector(true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVector(true);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVector(true);	  double[]    data    =    getDataRealVector(false);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
21	[BUG]  [BUGGY]  []  data  =  getDataRealVector(true);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVector(true);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVector(true);	  double[]    data    =    getDataRealVector(false);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
22	[BUG]  [BUGGY]  for(int  a  =  data.length  -  out.length)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  =  data.length  -  out.length)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  =  data.length  -  out.length)  {	  for(int    a    :    out.length)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
23	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormSize(data);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormSize(data);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNormSize(data);	  double[]    data    =    getDataRealVectorFormat().getNormSize(max);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
24	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormSize(max  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormSize(max  +  1);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNormSize(max  +  1);	  double[]    data    =    getDataRealVectorFormat().getNormSize(max);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
25	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormSize(max,  max);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormSize(max,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNormSize(max,  max);	  double[]    data    =    getDataRealVectorFormat().getNormSize(max);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
26	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(DEFAULT_FORMAT);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(DEFAULT_FORMAT);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(DEFAULT_FORMAT);	  double[]    data    =    getDataRealVectorFormat().getNorms(null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(null,  max);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(null,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(null,  max);	  double[]    data    =    getDataRealVectorFormat().getNorms(null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  for(int  a  :  this.data.length,  max)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  :  this.data.length,  max)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  this.data.length,  max)  {	  for(int    a    :    this.data.length)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
29	[BUG]  [BUGGY]  for(int  i  :  this.data.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  i  :  this.data.length)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  i  :  this.data.length)  {	  for(int    a    :    this.data.length)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
30	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);	  double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  []  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);	  double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    true);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  DEFAULT_FORMAT);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  DEFAULT_FORMAT);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  DEFAULT_FORMAT);	  double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    NON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
33	[BUG]  [BUGGY]  for(int  d  :  data.length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  d  :  data.length)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  d  :  data.length)  {	  for(int    d    :    d.length)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
34	[BUG]  [BUGGY]  for(int  d  :  a.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  d  :  a.length)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  d  :  a.length)  {	  for(int    d    :    d.length)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
35	[BUG]  [BUGGY]  double  a  =  Math.floor(data[0],  Math.abs(max));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.floor(data[0],  Math.abs(max));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.floor(data[0],  Math.abs(max));	  double    a    =    Math.floor(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  double  a  =  Math.floor(data[1],  Math.abs(a));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.floor(data[1],  Math.abs(a));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.floor(data[1],  Math.abs(a));	  double    a    =    Math.floor(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  double  a  =  Math.floor(data[0],  Math.abs(Maximum));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.floor(data[0],  Math.abs(Maximum));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.floor(data[0],  Math.abs(Maximum));	  double    a    =    Math.floor(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  double  a  =  Math.floor(data[0],  Math.abs(max),  Math.abs(data[0]));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.floor(data[0],  Math.abs(max),  Math.abs(data[0]));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.floor(data[0],  Math.abs(max),  Math.abs(data[0]));	  double    a    =    Math.floor(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  double[]  data  =  getRawNorm();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRawNorm();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRawNorm();	  double[]    data    =    getNorm();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
40	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getLInfNorm();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getLInfNorm();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getLInfNorm();	  Double[]    data    =    getDataRealVectorFormat().getNormSize();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
41	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNormSize(max);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNormSize(max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getNormSize(max);	  Double[]    data    =    getDataRealVectorFormat().getNormSize();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
42	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getRangeSize();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getRangeSize();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getRangeSize();	  Double[]    data    =    getDataRealVectorFormat().getNormSize();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
43	[BUG]  [BUGGY]  for(int  a  :  d.length,  max)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  :  d.length,  max)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  d.length,  max)  {	  for(int    a    :    d.length)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
44	[BUG]  [BUGGY]  for(int  i  :  d.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  i  :  d.length)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  i  :  d.length)  {	  for(int    a    :    d.length)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
45	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(null,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector(null,  true);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(null,  true);	  double[]    data    =    getDataRealVector(null,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
46	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVector(null,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVector(null,  true);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVector(null,  true);	  double[]    data    =    getDataRealVector(null,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
47	[BUG]  [BUGGY]  []  data  =  getDataRealVector(null,  true);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVector(null,  true);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVector(null,  true);	  double[]    data    =    getDataRealVector(null,    false);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
48	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(null,  false,  max);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector(null,  false,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(null,  false,  max);	  double[]    data    =    getDataRealVector(null,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
49	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVector().getLInfNorms();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVector().getLInfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVector().getLInfNorms();	  Double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
50	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVector().getLinfNorms();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVector().getLinfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVector().getLinfNorms();	  Double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
51	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVector().getNorms(null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVector().getNorms(null);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVector().getNorms(null);	  Double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
52	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1]  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1]  +  1);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1]  +  1);	  Math.sqrt(data[0],    data[1]);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
53	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1]  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1]  -  1);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1]  -  1);	  Math.sqrt(data[0],    data[1]);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
54	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1]  +  a);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1]  +  a);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1]  +  a);	  Math.sqrt(data[0],    data[1]);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
55	[BUG]  [BUGGY]  double[]  d  =  getDataInstantiator().getLInfNorms();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  d  =  getDataInstantiator().getLInfNorms();  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  d  =  getDataInstantiator().getLInfNorms();	  double[]    d    =    getDataInstantiator().getNorms();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
56	[BUG]  [BUGGY]  Double[]  d  =  getDataInstantiator().getNorms();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  d  =  getDataInstantiator().getNorms();  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  d  =  getDataInstantiator().getNorms();	  double[]    d    =    getDataInstantiator().getNorms();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
57	[BUG]  [BUGGY]  double[]  d  =  getDataInstantiator().getDestination();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  d  =  getDataInstantiator().getDestination();  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  d  =  getDataInstantiator().getDestination();	  double[]    d    =    getDataInstantiator().getNorms();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
58	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getLinfNorms();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector().getLinfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getLinfNorms();	  double[]    data    =    getDataRealVector().getLInfNorms();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
59	[BUG]  [BUGGY]  []  data  =  getDataRealVector().getLInfNorms();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVector().getLInfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVector().getLInfNorms();	  double[]    data    =    getDataRealVector().getLInfNorms();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
60	[BUG]  [BUGGY]  for(double  a  :  data.length,  max  +  1)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(double  a  :  data.length,  max  +  1)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  data.length,  max  +  1)  {	  for(double    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	18	None	replace
61	[BUG]  [BUGGY]  for(double  a  :  data.length,  max  -  1)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(double  a  :  data.length,  max  -  1)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  data.length,  max  -  1)  {	  for(double    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	18	None	replace
62	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  max);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  max);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1],  data[2],  max);	  Math.sqrt(data[0],    data[1],    data[2],    data[3]);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
63	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  data[4]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  data[4]);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1],  data[2],  data[4]);	  Math.sqrt(data[0],    data[1],    data[2],    data[3]);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
64	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  max,  data[3]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  max,  data[3]);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1],  data[2],  max,  data[3]);	  Math.sqrt(data[0],    data[1],    data[2],    data[3]);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
65	[BUG]  [BUGGY]  Double[]  data  =  getRealVector().getNorms();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getRealVector().getNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getRealVector().getNorms();	  double[]    data    =    getRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
66	[BUG]  [BUGGY]  double[]  data  =  getRealVector().getNorms(null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRealVector().getNorms(null);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVector().getNorms(null);	  double[]    data    =    getRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
67	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);	  double[]    data    =    getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
68	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);	  double[]    data    =    getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
69	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[0],  data[1]  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(data[0],  data[1]  +  1);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[0],  data[1]  +  1);	  double    a    =    Math.sqrt(data[0],    data[1]);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
70	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[0],  data[1]  *  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(data[0],  data[1]  *  2);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[0],  data[1]  *  2);	  double    a    =    Math.sqrt(data[0],    data[1]);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
71	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[0],  data[2]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(data[0],  data[2]);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[0],  data[2]);	  double    a    =    Math.sqrt(data[0],    data[1]);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
72	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(null,  max,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector(null,  max,  false);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(null,  max,  false);	  double[]    data    =    getDataRealVector(null,    max);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
73	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(null,  max,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector(null,  max,  0);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(null,  max,  0);	  double[]    data    =    getDataRealVector(null,    max);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
74	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(null,  max,  DEFAULT_FORMAT);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector(null,  max,  DEFAULT_FORMAT);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(null,  max,  DEFAULT_FORMAT);	  double[]    data    =    getDataRealVector(null,    max);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
75	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(null,  max,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector(null,  max,  true);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(null,  max,  true);	  double[]    data    =    getDataRealVector(null,    max);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
76	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);	  double[]    data    =    getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
77	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);	  double[]    data    =    getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
78	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
79	[BUG]  [BUGGY]  for(double  a  :  out)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(double  a  :  out)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  out)  {	  for(int    a    :    out)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
80	[BUG]  [BUGGY]  for(int  a  :  data[a])  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  :  data[a])  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  data[a])  {	  for(int    a    :    out)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
81	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getLInfNorms();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getLInfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getLInfNorms();	  Double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
82	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNorms(null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNorms(null);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getNorms(null);	  Double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
83	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getRangeNorms();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getRangeNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getRangeNorms();	  Double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
84	[BUG]  [BUGGY]  double[]  data  =  getLInfNorms();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getLInfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getLInfNorms();	  double[]    data    =    getNorms();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
85	[BUG]  [BUGGY]  double[]  data  =  getLinfNorms();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getLinfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getLinfNorms();	  double[]    data    =    getNorms();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
86	[BUG]  [BUGGY]  double[]  data  =  getLimits();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getLimits();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getLimits();	  double[]    data    =    getNorms();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
87	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
88	[BUG]  [BUGGY]  for(double  a  :  this.data.length,  max)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(double  a  :  this.data.length,  max)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  this.data.length,  max)  {	  for(double    a    :    this.data.length)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
89	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVectorFormat(DEFAULT_FORMAT);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
90	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  max);	  double[]    data    =    getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
91	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  true);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  true);	  double[]    data    =    getDataRealVectorFormat(DEFAULT_FORMAT,    false);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
92	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  true);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  true);	  double[]    data    =    getDataRealVectorFormat(DEFAULT_FORMAT,    false);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
93	[BUG]  [BUGGY]  []  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  true);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  true);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  true);	  double[]    data    =    getDataRealVectorFormat(DEFAULT_FORMAT,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
94	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  false,  max);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  false,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  false,  max);	  double[]    data    =    getDataRealVectorFormat(DEFAULT_FORMAT,    false);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
95	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  max);	  double[]    data    =    getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
96	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
97	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLinfNorms();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLinfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLinfNorms();	  double[]    data    =    getDataRealVectorFormat().getLInfNorms();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
98	[BUG]  [BUGGY]  []  data  =  getDataRealVectorFormat().getLInfNorms();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVectorFormat().getLInfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVectorFormat().getLInfNorms();	  double[]    data    =    getDataRealVectorFormat().getLInfNorms();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
99	[BUG]  [BUGGY]  []  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);	  []    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
100	[BUG]  [BUGGY]  []  data  =  getDataRealVector().getNorms(null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVector().getNorms(null);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVector().getNorms(null);	  []    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
101	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[0],  max);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(data[0],  max);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[0],  max);	  double    a    =    Math.sqrt(data[0]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
102	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[1]);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(data[1]);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[1]);	  double    a    =    Math.sqrt(data[0]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
103	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
104	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE,  max);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE,  max);	  double[]    data    =    getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
105	[BUG]  [BUGGY]  double  a  =  data[0].doubleValue();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  data[0].doubleValue();  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  data[0].doubleValue();	  double    a    =    this.data[0].doubleValue();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
106	[BUG]  [BUGGY]  double  a  =  this.data[1].doubleValue();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  this.data[1].doubleValue();  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  this.data[1].doubleValue();	  double    a    =    this.data[0].doubleValue();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
107	[BUG]  [BUGGY]  double  a  =  this.data[0].doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  this.data[0].doubleValue()  +  1;  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  this.data[0].doubleValue()  +  1;	  double    a    =    this.data[0].doubleValue();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
108	[BUG]  [BUGGY]  double  a  =  Math.abs(max);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.abs(max);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.abs(max);	  double    a    =    Math.abs(a);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
109	[BUG]  [BUGGY]  double  a  =  Math.abs(data[0]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.abs(data[0]);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.abs(data[0]);	  double    a    =    Math.abs(a);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
110	[BUG]  [BUGGY]  double  a  =  Math.abs(d);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.abs(d);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.abs(d);	  double    a    =    Math.abs(a);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
111	[BUG]  [BUGGY]  double  a  =  Math.max(data,  Math.abs(a));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.max(data,  Math.abs(a));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.max(data,  Math.abs(a));	  double    a    =    Math.max(a,    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
112	[BUG]  [BUGGY]  double  a  =  Math.min(data.length,  Math.abs(a));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.min(data.length,  Math.abs(a));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.min(data.length,  Math.abs(a));	  double    a    =    Math.max(a,    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
113	[BUG]  [BUGGY]  double  a  =  Math.max(data[0],  Math.abs(data[1]));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.max(data[0],  Math.abs(data[1]));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.max(data[0],  Math.abs(data[1]));	  double    a    =    Math.max(a,    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
114	[BUG]  [BUGGY]  double  a  =  Math.max(d,  Math.abs(a));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.max(d,  Math.abs(a));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.max(d,  Math.abs(a));	  double    a    =    Math.max(a,    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
115	[BUG]  [BUGGY]  double[]  data  =  getRawData();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRawData();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRawData();	  double[]    data    =    getLinfNorm();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
116	[BUG]  [BUGGY]  double[]  data  =  getRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
117	[BUG]  [BUGGY]  double[]  data  =  getRealVectorFormat().getLInfNorms();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRealVectorFormat().getLInfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVectorFormat().getLInfNorms();	  double[]    data    =    getRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
118	[BUG]  [BUGGY]  Double[]  data  =  getRealVectorFormat().getNorms();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getRealVectorFormat().getNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getRealVectorFormat().getNorms();	  double[]    data    =    getRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  :  data.length)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  i  =  0;  i  :  data.length)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  i  =  0;  i  :  data.length)  {	  for(int    i    :    data.length)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  data.length  -  1)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  i  =  data.length  -  1)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  i  =  data.length  -  1)  {	  for(int    i    :    data.length)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
121	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);	  Double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    true);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
122	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLimitSize(max);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLimitSize(max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLimitSize(max);	  double[]    data    =    getDataRealVectorFormat().getLimitSize();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
123	[BUG]  [BUGGY]  []  data  =  getDataRealVectorFormat(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVectorFormat(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVectorFormat(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  false);	  []    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    true);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
124	[BUG]  [BUGGY]  []  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true,  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true,  max);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true,  max);	  []    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    true);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
125	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormals();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormals();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNormals();	  double[]    data    =    getDataRealVectorFormat().values();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
126	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(null,  max  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector(null,  max  -  1);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(null,  max  -  1);	  double[]    data    =    getDataRealVector(null,    max);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
127	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(null,  max  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector(null,  max  +  1);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(null,  max  +  1);	  double[]    data    =    getDataRealVector(null,    max);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
128	[BUG]  [BUGGY]  []  data  =  getDataRealVector().getLinfNorms();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVector().getLinfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVector().getLinfNorms();	  []    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
129	[BUG]  [BUGGY]  []  data  =  getDataRealVector().getLInfNorm();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVector().getLInfNorm();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVector().getLInfNorm();	  []    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
130	[BUG]  [BUGGY]  double[]  data  =  getRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
131	[BUG]  [BUGGY]  for(double  a  :  data.length,  4)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(double  a  :  data.length,  4)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  data.length,  4)  {	  for(double    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	18	None	replace
132	[BUG]  [BUGGY]  double[]  data  =  getRealVector().getLInfNorms();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRealVector().getLInfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVector().getLInfNorms();	  double[]    data    =    getRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
133	[BUG]  [BUGGY]  double[]  data  =  getRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
134	[BUG]  [BUGGY]  double[]  data  =  getRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
135	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  DEFAULT_NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVectorFormat(DEFAULT_FORMAT);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
136	[BUG]  [BUGGY]  double[]  data  =  getNormFormat();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getNormFormat();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getNormFormat();	  double[]    data    =    getRawDataRealVectorFormat();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
137	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[0]  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(data[0]  -  1);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[0]  -  1);	  double    a    =    Math.sqrt(data[0]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
138	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[0]  -  data[1]);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(data[0]  -  data[1]);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[0]  -  data[1]);	  double    a    =    Math.sqrt(data[0]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
139	[BUG]  [BUGGY]  double[]  data  =  getRealVectorFormat().values();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRealVectorFormat().values();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVectorFormat().values();	  double[]    data    =    getRealVectorFormat();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
140	[BUG]  [BUGGY]  double  a  =  Math.max(data.length,  Math.abs(a));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.max(data.length,  Math.abs(a));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.max(data.length,  Math.abs(a));	  double    a    =    Math.max(a,    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
141	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
142	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLenfNorms();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLenfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLenfNorms();	  double[]    data    =    getDataRealVectorFormat().getLInfNorms();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  data.length  -  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  i  =  data.length  -  1);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  i  =  data.length  -  1);	  for(int    i    :    data.length)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
144	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[0],  data[1]  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(data[0],  data[1]  -  1);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[0],  data[1]  -  1);	  double    a    =    Math.sqrt(data[0],    data[1]);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
145	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);	  Double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
146	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNegatives();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNegatives();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getNegatives();	  Double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
147	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
148	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormSize(max  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormSize(max  -  1);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNormSize(max  -  1);	  double[]    data    =    getDataRealVectorFormat().getNormSize(max);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
149	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1]  -  data[2])+  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1]  -  data[2])+  1);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1]  -  data[2])+  1);	  Math.sqrt(data[0],    data[1]    -    data[2]));    	non-compiled	[CE]  not  a  statement	46	None	replace
150	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  data[3]  *  d);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  data[3]  *  d);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1],  data[2],  data[3]  *  d);	  Math.sqrt(data[0],    data[1],    data[2],    data[3]);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
151	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  data[3]  *  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  data[3]  *  2);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1],  data[2],  data[3]  *  2);	  Math.sqrt(data[0],    data[1],    data[2],    data[3]);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
152	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(data);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(data);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(data);	  double[]    data    =    getDataRealVectorFormat().getNorms(null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
153	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(null,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(null,  null);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(null,  null);	  double[]    data    =    getDataRealVectorFormat().getNorms(null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
154	[BUG]  [BUGGY]  double[]  d  =  getDataInstantiator().getNormals();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  d  =  getDataInstantiator().getNormals();  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  d  =  getDataInstantiator().getNormals();	  double[]    d    =    getDataInstantiator().getNorms();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
155	[BUG]  [BUGGY]  double[]  d  =  getDataInstantiator().getNormalization();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  d  =  getDataInstantiator().getNormalization();  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  d  =  getDataInstantiator().getNormalization();	  double[]    d    =    getDataInstantiator().getNorms();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
156	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getLenfNorms();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector().getLenfNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getLenfNorms();	  double[]    data    =    getDataRealVector().getLInfNorms();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
157	[BUG]  [BUGGY]  double[]  data  =  getLinfNorm().toArray(new  double[size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getLinfNorm().toArray(new  double[size()  ]);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getLinfNorm().toArray(new  double[size()  ]);	  double[]    data    =    getLinfNorm();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
158	[BUG]  [BUGGY]  double  a  =  Math.abs(data.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.abs(data.length);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.abs(data.length);	  double    a    =    Math.abs(a);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
159	[BUG]  [BUGGY]  for(int  max  :  out)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  max  :  out)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  max  :  out)  {	  for(int    a    :    out)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
160	[BUG]  [BUGGY]  double  a  =  Math.floor(data[0],  Math.abs(value));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.floor(data[0],  Math.abs(value));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.floor(data[0],  Math.abs(value));	  double    a    =    Math.floor(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
161	[BUG]  [BUGGY]  double  a  =  Math.log(data[0],  Math.abs(a));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.log(data[0],  Math.abs(a));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.log(data[0],  Math.abs(a));	  double    a    =    Math.floor(data[0],    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
162	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  false);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  false);	  double[]    data    =    getDataRealVectorFormat(DEFAULT_FORMAT,    false);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
163	[BUG]  [BUGGY]  for(double  a  :  out.length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(double  a  :  out.length)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  out.length)  {	  for(int    a    :    out.length)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
164	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
165	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectors();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectors();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectors();	  double[]    data    =    getNorms();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
166	[BUG]  [BUGGY]  for(int  a  :  data.length,  0)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  :  data.length,  0)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  data.length,  0)  {	  for(int    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
167	[BUG]  [BUGGY]  for(int  a  :  data.length,  2)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  :  data.length,  2)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  data.length,  2)  {	  for(int    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
168	[BUG]  [BUGGY]  for(int  a  :  data.length,  1)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  :  data.length,  1)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  data.length,  1)  {	  for(int    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
169	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);	  Double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
170	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVector().getLens();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVector().getLens();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVector().getLens();	  Double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
171	[BUG]  [BUGGY]  double[]  data  =  getData();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getData();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getData();	  double[]    data    =    getNorm();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
172	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
173	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLimitNorm();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLimitNorm();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLimitNorm();	  double[]    data    =    getDataRealVectorFormat().getLimitSize();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
174	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLimitNorms();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLimitNorms();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLimitNorms();	  double[]    data    =    getDataRealVectorFormat().getLimitSize();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
175	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormValues();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormValues();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNormValues();	  double[]    data    =    getDataRealVectorFormat().values();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
176	[BUG]  [BUGGY]  []  data  =  getDataRealVector().getLimits();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  []  data  =  getDataRealVector().getLimits();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVector().getLimits();	  []    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
177	[BUG]  [BUGGY]  for(double  a  :  data.length,  2)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(double  a  :  data.length,  2)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  data.length,  2)  {	  for(double    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	18	None	replace
178	[BUG]  [BUGGY]  for(int  a  :  data.length,  a)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  a  :  data.length,  a)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  data.length,  a)  {	  for(int    a    :    data.length,    max)    {    	non-compiled	[CE]  ')'  expected	31	None	replace
179	[BUG]  [BUGGY]  for(int  max  :  data.length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(int  max  :  data.length)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  max  :  data.length)  {	  for(int    a    :    out.length)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
180	[BUG]  [BUGGY]  double  a  =  Math.sqrt(d[0]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(d[0]);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(d[0]);	  double    a    =    Math.sqrt(data[0]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
181	[BUG]  [BUGGY]  double  a  =  Math.sqrt(d[0],  data[1]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(d[0],  data[1]);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(d[0],  data[1]);	  double    a    =    Math.sqrt(data[0],    data[1]);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
182	[BUG]  [BUGGY]  double[]  d  =  getDataInstantiator().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  d  =  getDataInstantiator().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  d  =  getDataInstantiator().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    d    =    getDataInstantiator().getNorms();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
183	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  DEFAULT_FORMAT);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  DEFAULT_FORMAT);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  DEFAULT_FORMAT);	  double[]    data    =    getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
184	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);	  Double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
185	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(null,  DEFAULT_FORMAT);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(null,  DEFAULT_FORMAT);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(null,  DEFAULT_FORMAT);	  double[]    data    =    getDataRealVectorFormat().getNorms(null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
186	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLInfNorms(DEFAULT_FORMAT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLInfNorms(DEFAULT_FORMAT);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLInfNorms(DEFAULT_FORMAT);	  double[]    data    =    getDataRealVectorFormat().getLInfNorms();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
187	[BUG]  [BUGGY]  double[]  data  =  getNorm().toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getNorm().toString();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getNorm().toString();	  double[]    data    =    getNorm();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
188	[BUG]  [BUGGY]  double[]  data  =  getDataReal();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataReal();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataReal();	  double[]    data    =    getNorm();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
189	[BUG]  [BUGGY]  double[]  data  =  getRawNormal();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRawNormal();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRawNormal();	  double[]    data    =    getRawDataRealVectorFormat();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
190	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  data[5]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  data[5]);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1],  data[2],  data[5]);	  Math.sqrt(data[0],    data[1],    data[2],    data[3]);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
191	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1]  *  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(data[0],  data[1]  *  2);  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1]  *  2);	  Math.sqrt(data[0],    data[1]);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
192	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[0],  data[1].doubleValue());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.sqrt(data[0],  data[1].doubleValue());  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[0],  data[1].doubleValue());	  double    a    =    Math.abs(a);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
193	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);	  Double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
194	[BUG]  [BUGGY]  for(double  d  :  d.length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  for(double  d  :  d.length)  {  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  d  :  d.length)  {	  for(int    d    :    d.length)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
195	[BUG]  [BUGGY]  double[]  data  =  getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getNorms();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
196	[BUG]  [BUGGY]  double[]  data  =  getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getNorms();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
197	[BUG]  [BUGGY]  double[]  data  =  getNorms().toArray(new  double[size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getNorms().toArray(new  double[size()  ]);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getNorms().toArray(new  double[size()  ]);	  double[]    data    =    getNorms();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
198	[BUG]  [BUGGY]  double[]  data  =  getRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);	  double[]    data    =    getRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
199	[BUG]  [BUGGY]  double[]  data  =  getNormalVector();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getNormalVector();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getNormalVector();	  double[]    data    =    getRealVector();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
200	[BUG]  [BUGGY]  double  a  =  Math.max(data[0],  Math.abs(data[0]));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double  a  =  Math.max(data[0],  Math.abs(data[0]));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.max(data[0],  Math.abs(data[0]));	  double    a    =    Math.max(a,    Math.abs(a));    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
201	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getLInfNormSize();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getLInfNormSize();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getLInfNormSize();	  Double[]    data    =    getDataRealVectorFormat().getNormSize();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
202	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getLenientSize();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getLenientSize();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getLenientSize();	  Double[]    data    =    getDataRealVectorFormat().getNormSize();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
203	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getLimits();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getLimits();  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getLimits();	  Double[]    data    =    getDataRealVectorFormat().getNormSize();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
204	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(false,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  double[]  data  =  getDataRealVector(false,  false);  [BUGGY]      for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(false,  false);	  double[]    data    =    getDataRealVector(false);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
205	[BUG]  [BUGGY]  Math.sqrt(d,  data[0],  data[1]  -  data[2]));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;      [BUGGY]  Math.sqrt(d,  data[0],  data[1]  -  data[2]));  [BUGGY]      max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(d,  data[0],  data[1]  -  data[2]));	  Math.sqrt(data[0],    data[1]    -    data[2]));    	non-compiled	[CE]  ';'  expected	46	None	replace
