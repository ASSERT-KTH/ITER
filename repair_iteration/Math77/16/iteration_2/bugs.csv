bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  a  =  Math.max(a,  Math.abs(a));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double  a  =  Math.max(a,  Math.abs(a));  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.max(a,  Math.abs(a));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  double  a  =  Math.floor(data[0],  Math.abs(a));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double  a  =  Math.floor(data[0],  Math.abs(a));  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.floor(data[0],  Math.abs(a));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  double  a  =  Math.abs(a);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double  a  =  Math.abs(a);  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.abs(a);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  double[]  d  =  getDataInstantiator().getNorms();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  d  =  getDataInstantiator().getNorms();  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  d  =  getDataInstantiator().getNorms();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNorms();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNorms();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getNorms();	      double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  double[]  data  =  getRealVectorFormat().getNorms();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getRealVectorFormat().getNorms();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVectorFormat().getNorms();	      double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(null);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(null);	      double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true);	      double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    false);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  Double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true);	      double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    false);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  []  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  []  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  true);	      double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    false);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  false);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  false);	      double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,    false);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  for(int  a  :  this.data)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  for(int  a  :  this.data)  {  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  this.data)  {	  for(double    a    :    this.data)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  for(double  a  :  this.data.length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  for(double  a  :  this.data.length)  {  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  this.data.length)  {	  for(double    a    :    this.data)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  double[]  data  =  getRealVectorFormat();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getRealVectorFormat();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVectorFormat();	      double[]    data    =    getDataRealVectorFormat();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  double[]  data  =  getRawDataRealVectorFormat();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getRawDataRealVectorFormat();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRawDataRealVectorFormat();	      double[]    data    =    getDataRealVectorFormat();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(null,  max);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVector(null,  max);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(null,  max);	      double[]    data    =    getDataRealVector(null);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(null,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVector(null,  false);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(null,  false);	      double[]    data    =    getDataRealVector(null);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  for(double  a  :  data.length,  max)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  for(double  a  :  data.length,  max)  {  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  data.length,  max)  {	  for(double    a    :    data.length)    {    	non-compiled	[CE]  ')'  expected	1	None	replace
19	[BUG]  [BUGGY]  for(int  a  :  d.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  for(int  a  :  d.length)  {  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  d.length)  {	  for(int    a    :    data)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  for(int  a  :  out)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  for(int  a  :  out)  {  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  out)  {	  for(int    a    :    data)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  for(int  d  :  d.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  for(int  d  :  d.length)  {  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  d  :  d.length)  {	  for(double    a    :    d.length)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT);	      double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  max);	      double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(DEFAULT_FORMAT,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);	      double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNormSize();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  Double[]  data  =  getDataRealVectorFormat().getNormSize();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVectorFormat().getNormSize();	      double[]    data    =    getDataRealVectorFormat().getNormSize();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
26	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLInfNorm();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLInfNorm();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLInfNorm();	      double[]    data    =    getDataRealVectorFormat().getNormSize();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormSize(max);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNormSize(max);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNormSize(max);	      double[]    data    =    getDataRealVectorFormat().getNormSize();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  Double[]  data  =  getDataRealVector().getNorms();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  Double[]  data  =  getDataRealVector().getNorms();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Double[]  data  =  getDataRealVector().getNorms();	      double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  []  data  =  getDataRealVector().getNorms();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  []  data  =  getDataRealVector().getNorms();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	[]  data  =  getDataRealVector().getNorms();	      double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  double[]  data  =  getRealVector().getNorms();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getRealVector().getNorms();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVector().getNorms();	      double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  for(int  a  :  data.length,  max)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  for(int  a  :  data.length,  max)  {  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  data.length,  max)  {	  for(int    a    :    data.length)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
32	[BUG]  [BUGGY]  for(int  a  :  this.data.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  for(int  a  :  this.data.length)  {  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  this.data.length)  {	  for(int    a    :    data.length)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  for(int  i  :  data.length)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  for(int  i  :  data.length)  {  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  i  :  data.length)  {	  for(int    a    :    data.length)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  double[]  data  =  getRealVector();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getRealVector();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRealVector();	      double[]    data    =    getDataRealVector();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  double[]  data  =  getRawDataRealVector();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getRawDataRealVector();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getRawDataRealVector();	      double[]    data    =    getDataRealVector();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  double[]  data  =  getLinfNorm();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getLinfNorm();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getLinfNorm();	      double[]    data    =    getDataRealVector();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE,  NON_FITTING_POSITION_AND_SIZE_MESSAGE);	      double[]    data    =    getDataRealVectorFormat(NON_FITTING_POSITION_AND_SIZE_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().values();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat().values();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().values();	      double[]    data    =    getDataRealVectorFormat();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLimitSize();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLimitSize();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLimitSize();	      double[]    data    =    getDataRealVectorFormat().getNormSize();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
40	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);	      double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
41	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLInfNorms();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat().getLInfNorms();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getLInfNorms();	      double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(nonFiting_POSITION_AND_SIZE_MESSAGE);	      double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector(false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVector(false);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector(false);	      double[]    data    =    getDataRealVector(null);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  Math.sqrt(data[0],  data[1]);  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1]);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[0],  data[1]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double  a  =  Math.sqrt(data[0],  data[1]);  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[0],  data[1]);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1]  -  data[2]));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  Math.sqrt(data[0],  data[1]  -  data[2]));  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1]  -  data[2]));	      	non-compiled	[CE]  ';'  expected	4	None	replace
47	[BUG]  [BUGGY]  double  a  =  Math.sqrt(data[0]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double  a  =  Math.sqrt(data[0]);  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  Math.sqrt(data[0]);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getNorms(non_FITTING_POSITION_AND_SIZE_MESSAGE);	      double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);	      double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
50	[BUG]  [BUGGY]  double[]  data  =  getDataRealVector().getLInfNorms();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVector().getLInfNorms();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVector().getLInfNorms();	      double[]    data    =    getDataRealVector().getNorms();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
51	[BUG]  [BUGGY]  for(int  a  :  out.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  for(int  a  :  out.length)  {  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(int  a  :  out.length)  {	  for(int    a    :    data)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  double  a  =  this.data[0].doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double  a  =  this.data[0].doubleValue();  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double  a  =  this.data[0].doubleValue();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  data[3]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  Math.sqrt(data[0],  data[1],  data[2],  data[3]);  [BUGGY]    max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	Math.sqrt(data[0],  data[1],  data[2],  data[3]);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  double[]  data  =  getNorms();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getNorms();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getNorms();	      double[]    data    =    getDataRealVector();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  double[]  data  =  getNorm();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getNorm();  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getNorm();	      double[]    data    =    getDataRealVector();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(NON_FITTING_POSITION_AND_SIZE_MESSAGE);	      double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  getLInfNorm()  {  double  max  =  0;    [BUGGY]  double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]    for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	double[]  data  =  getDataRealVectorFormat().getNorms(nON_FITTING_POSITION_AND_SIZE_MESSAGE);	      double[]    data    =    getDataRealVectorFormat().getNorms();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
