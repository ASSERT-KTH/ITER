bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  +=  Math.max(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
2	[BUG]  [BUGGY]  max  +=  Math.max(a,  Math.abs(max));  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.max(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  +=  Math.min(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
4	[BUG]  [BUGGY]  max  +=  Math.min(a,  Math.abs(max));  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(max,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  +=  Math.min(max,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
6	[BUG]  [BUGGY]  max  +=  Math.min(max,  Math.abs(a));  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(max,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(max,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
7	[BUG]  [BUGGY]  max  +=  Math.max(data,  Math.abs(a));  [CE]  no  suitable  method  found  for  max(double[],double)  [FE]          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(data,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.max(data,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  no  suitable  method  found  for  max(double[],double)	21	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  -=  Math.max(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  -=  Math.max(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
9	[BUG]  [BUGGY]  max  -=  Math.max(a,  Math.abs(max));  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  -=  Math.max(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  -=  Math.max(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
10	[BUG]  [BUGGY]  max  +=  Math.min(MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a));  [CE]  cannot  find  symbol  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE  [FE]              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE	21	None	replace
11	[BUG]  [BUGGY]  max  +=  Math.min(MAX_NEGATIVE_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a));  [CE]  cannot  find  symbol  MAX_NEGATIVE_NON_FITTING_POSITION_AND_SIZE_MESSAGE  [FE]                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(MAX_NEGATIVE_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(MAX_NEGATIVE_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  MAX_NEGATIVE_NON_FITTING_POSITION_AND_SIZE_MESSAGE	21	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(data.length,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  +=  Math.min(data.length,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
13	[BUG]  [BUGGY]  max  +=  Math.min(data.length,  Math.abs(a));  [FE]  AssertionFailedError  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(data.length,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(data.length,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
14	[BUG]  [BUGGY]  max  +=  Math.log(a,  Math.abs(max));  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.log(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.log(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	21	None	replace
15	[BUG]  [BUGGY]  max  +=  Math.sin(a,  Math.abs(max));  [CE]  method  sin  in  class  Math  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.sin(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.sin(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  method  sin  in  class  Math  cannot  be  applied  to  given  types;	21	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.pow(10,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  +=  Math.pow(10,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
17	[BUG]  [BUGGY]  max  +=  Math.pow(10,  Math.abs(a));  [FE]  AssertionFailedError  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.pow(10,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.pow(10,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
18	[BUG]  [BUGGY]  max  +=  Math.ceil(a,  Math.abs(max));  [CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.ceil(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.ceil(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  method  ceil  in  class  Math  cannot  be  applied  to  given  types;	21	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(max,  Math.abs(a  -  1));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  +=  Math.min(max,  Math.abs(a  -  1));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
20	[BUG]  [BUGGY]  max  +=  Math.min(max,  Math.abs(a  -  1));  [FE]  AssertionFailedError  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(max,  Math.abs(a  -  1));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(max,  Math.abs(a  -  1));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
21	[BUG]  [BUGGY]  max  +=  Math.sqrt(a,  Math.abs(max));  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.sqrt(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.sqrt(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	21	None	replace
22	[BUG]  [BUGGY]  max  +=  Math.min(MAX_NEGATIVE_NAME,  Math.abs(a));  [CE]  cannot  find  symbol  MAX_NEGATIVE_NAME  [FE]                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(MAX_NEGATIVE_NAME,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(MAX_NEGATIVE_NAME,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  MAX_NEGATIVE_NAME	21	None	replace
23	[BUG]  [BUGGY]  max  +=  Math.min(Max,  Math.abs(a));  [CE]  cannot  find  symbol  Max  [FE]                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(Max,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(Max,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  Max	21	None	replace
24	[BUG]  [BUGGY]  max  +=  Math.max(a,  Math.abs(MaximumFractionDigits));  [CE]  cannot  find  symbol  MaximumFractionDigits  [FE]                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(a,  Math.abs(MaximumFractionDigits));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.max(a,  Math.abs(MaximumFractionDigits));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  MaximumFractionDigits	21	None	replace
25	[BUG]  [BUGGY]  max  +=  Math.sin(data,  Math.abs(a));  [CE]  method  sin  in  class  Math  cannot  be  applied  to  given  types;  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.sin(data,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.sin(data,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  method  sin  in  class  Math  cannot  be  applied  to  given  types;	21	None	replace
26	[BUG]  [BUGGY]  max  +=  Math.max(Max,  Math.abs(a));  [CE]  cannot  find  symbol  Max  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(Max,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.max(Max,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  Max	21	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  /=  Math.max(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  /=  Math.max(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
28	[BUG]  [BUGGY]  max  /=  Math.max(a,  Math.abs(max));  [FE]  AssertionFailedError  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  /=  Math.max(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  /=  Math.max(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
29	[BUG]  [BUGGY]  max  +=  Math.floor(a,  Math.abs(max));  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.floor(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.floor(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	21	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(0,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  +=  Math.max(0,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
31	[BUG]  [BUGGY]  max  +=  Math.max(0,  Math.abs(a));  [FE]  AssertionFailedError  [FE]                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(0,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.max(0,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
32	[BUG]  [BUGGY]  max  +=  Math.sqrt(data,  Math.abs(a));  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.sqrt(data,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.sqrt(data,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	21	None	replace
33	[BUG]  [BUGGY]  max  +=  Math.remainder(a,  Math.abs(max));  [CE]  cannot  find  symbol  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.remainder(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.remainder(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
34	[BUG]  [BUGGY]  max  +=  Math.min(Math.max(a,  Math.abs(max)));  [CE]  no  suitable  method  found  for  min(double)  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(Math.max(a,  Math.abs(max)));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(Math.max(a,  Math.abs(max)));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  no  suitable  method  found  for  min(double)	21	None	replace
35	[BUG]  [BUGGY]  max  +=  Math.rint(a,  Math.abs(max));  [CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;  [FE]                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.rint(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.rint(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  method  rint  in  class  Math  cannot  be  applied  to  given  types;	21	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(data.length,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  +=  Math.max(data.length,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
37	[BUG]  [BUGGY]  max  +=  Math.max(data.length,  Math.abs(a));  [FE]  AssertionFailedError  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(data.length,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.max(data.length,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
38	[BUG]  [BUGGY]  max  +=  Math.max(Maximum,  Math.abs(a));  [CE]  cannot  find  symbol  Maximum  [FE]                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(Maximum,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.max(Maximum,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  Maximum	21	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  -=  Math.min(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  -=  Math.min(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
40	[BUG]  [BUGGY]  max  -=  Math.min(a,  Math.abs(max));  [FE]  AssertionFailedError  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  -=  Math.min(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  -=  Math.min(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  -=  Math.max(max,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  -=  Math.max(max,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
42	[BUG]  [BUGGY]  max  -=  Math.max(max,  Math.abs(a));  [FE]  AssertionFailedError  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  -=  Math.max(max,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  -=  Math.max(max,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
43	[BUG]  [BUGGY]  max  +=  Math.min(MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a  -  1));  [CE]  cannot  find  symbol  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a  -  1));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a  -  1));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE	21	None	replace
44	[BUG]  [BUGGY]  max  +=  Math.sqrt(a,  Math.abs(a));  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.sqrt(a,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.sqrt(a,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	21	None	replace
45	[BUG]  [BUGGY]  max  +=  Math.min(MAX_NEGATIVE_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a  -  1));  [CE]  cannot  find  symbol  MAX_NEGATIVE_NON_FITTING_POSITION_AND_SIZE_MESSAGE  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(MAX_NEGATIVE_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a  -  1));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(MAX_NEGATIVE_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a  -  1));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  MAX_NEGATIVE_NON_FITTING_POSITION_AND_SIZE_MESSAGE	21	None	replace
46	[BUG]  [BUGGY]  max  +=  Math.min(MAX_NEGATIVE_NAMESPACE,  Math.abs(a));  [CE]  cannot  find  symbol  MAX_NEGATIVE_NAMESPACE  [FE]                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(MAX_NEGATIVE_NAMESPACE,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(MAX_NEGATIVE_NAMESPACE,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  MAX_NEGATIVE_NAMESPACE	21	None	replace
47	[BUG]  [BUGGY]  maximum  +=  Math.max(max,  Math.abs(a));  [CE]  cannot  find  symbol  maximum  [FE]                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  maximum  +=  Math.max(max,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	maximum  +=  Math.max(max,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  maximum	21	None	replace
48	[BUG]  [BUGGY]  max  +=  Math.min(a,  Math.max(max));  [CE]  no  suitable  method  found  for  max(double)  [FE]                                                                            AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(a,  Math.max(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(a,  Math.max(max));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  no  suitable  method  found  for  max(double)	21	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(0.0,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  +=  Math.max(0.0,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
50	[BUG]  [BUGGY]  max  +=  Math.max(0.0,  Math.abs(a));  [FE]  AssertionFailedError  [FE]                                                                              AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(0.0,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.max(0.0,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
51	[BUG]  [BUGGY]  min  +=  Math.max(max,  Math.abs(a));  [CE]  cannot  find  symbol  min  [FE]                                                                                AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  min  +=  Math.max(max,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	min  +=  Math.max(max,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  min	21	None	replace
52	[BUG]  [BUGGY]  max  +=  Math.min(MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a),  Math.abs(max));  [CE]  cannot  find  symbol  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE  [FE]                                                                                  AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a),  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE,  Math.abs(a),  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol  MAX_NON_FITTING_POSITION_AND_SIZE_MESSAGE	21	None	replace
53	[BUG]  [BUGGY]  max  +=  Math.mini(a,  Math.abs(max));  [CE]  cannot  find  symbol  [FE]                                                                                    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.mini(a,  Math.abs(max));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.mini(a,  Math.abs(max));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(1.0,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	max  +=  Math.max(1.0,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
55	[BUG]  [BUGGY]  max  +=  Math.max(1.0,  Math.abs(a));  [FE]  AssertionFailedError  [FE]                                                                                      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.max(1.0,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.max(1.0,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  a  +=  Math.max(max,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	a  +=  Math.max(max,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
57	[BUG]  [BUGGY]  a  +=  Math.max(max,  Math.abs(a));  [FE]  AssertionFailedError  [FE]                                                                                        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  a  +=  Math.max(max,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	a  +=  Math.max(max,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]    [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	  	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
59	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]                                                                                          AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]    [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	  	max  +=  Math.max(max,  Math.abs(a));  	compilable	  [FE]  AssertionFailedError  	21	1	replace
60	[BUG]  [BUGGY]  max  -=  Math.max(data,  Math.abs(a));  [CE]  no  suitable  method  found  for  max(double[],double)  [FE]    AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  -=  Math.max(data,  Math.abs(a));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  -=  Math.max(data,  Math.abs(a));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  no  suitable  method  found  for  max(double[],double)	21	None	replace
61	[BUG]  [BUGGY]  max  +=  Math.min(max,  Math.abs(a  -  data));  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]      AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(max,  Math.abs(a  -  data));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(max,  Math.abs(a  -  data));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	21	None	replace
62	[BUG]  [BUGGY]  max  +=  Math.min(max,  Math.abs(a  /  data));  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        AssertionFailedError  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  for  (double  a  :  data)  {  [BUGGY]  max  +=  Math.min(max,  Math.abs(a  /  data));  [BUGGY]  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	max  +=  Math.min(max,  Math.abs(a  /  data));	max  +=  Math.max(max,  Math.abs(a));  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	21	None	replace
