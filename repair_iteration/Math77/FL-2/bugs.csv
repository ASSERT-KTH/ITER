bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] double sum = 0; [FE] AssertionFailedError [CONTEXT] public double getNorm() { [BUGGY] double sum = 0; [BUGGY] for (double a : data) { sum += a * a; } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getNorm() { [BUGGY] [BUGGY] double sum = 0; for (double a : data) { sum += a * a; } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	
3	[BUG] [BUGGY] for (double a : data) { [FE] AssertionFailedError [CONTEXT] public double getNorm() { double sum = 0; [BUGGY] for (double a : data) { [BUGGY] sum += a * a; } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	700	700	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getNorm() { double sum = 0; [BUGGY] [BUGGY] for (double a : data) { sum += a * a; } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	700	700	1	add	
5	[BUG] [BUGGY] sum += a * a; [FE] AssertionFailedError [CONTEXT] public double getNorm() { double sum = 0; for (double a : data) { [BUGGY] sum += a * a; [BUGGY] } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	701	701	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getNorm() { double sum = 0; for (double a : data) { [BUGGY] [BUGGY] sum += a * a; } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	701	701	1	add	
7	[BUG] [BUGGY] return Math.sqrt(sum); [FE] AssertionFailedError [CONTEXT] public double getNorm() { double sum = 0; for (double a : data) { sum += a * a; } [BUGGY] return Math.sqrt(sum); [BUGGY] } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	703	703	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getNorm() { double sum = 0; for (double a : data) { sum += a * a; } [BUGGY] [BUGGY] return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	703	703	1	add	
9	[BUG] [BUGGY] double sum = 0; [FE] AssertionFailedError [CONTEXT] public double getL1Norm() { [BUGGY] double sum = 0; [BUGGY] for (double a : data) { sum += Math.abs(a); } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	709	709	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getL1Norm() { [BUGGY] [BUGGY] double sum = 0; for (double a : data) { sum += Math.abs(a); } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	709	709	1	add	
11	[BUG] [BUGGY] for (double a : data) { [FE] AssertionFailedError [CONTEXT] public double getL1Norm() { double sum = 0; [BUGGY] for (double a : data) { [BUGGY] sum += Math.abs(a); } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	710	710	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getL1Norm() { double sum = 0; [BUGGY] [BUGGY] for (double a : data) { sum += Math.abs(a); } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	710	710	1	add	
13	[BUG] [BUGGY] sum += Math.abs(a); [FE] AssertionFailedError [CONTEXT] public double getL1Norm() { double sum = 0; for (double a : data) { [BUGGY] sum += Math.abs(a); [BUGGY] } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	711	711	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getL1Norm() { double sum = 0; for (double a : data) { [BUGGY] [BUGGY] sum += Math.abs(a); } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	711	711	1	add	
15	[BUG] [BUGGY] return sum; [FE] AssertionFailedError [CONTEXT] public double getL1Norm() { double sum = 0; for (double a : data) { sum += Math.abs(a); } [BUGGY] return sum; [BUGGY] } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	713	713	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getL1Norm() { double sum = 0; for (double a : data) { sum += Math.abs(a); } [BUGGY] [BUGGY] return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	713	713	1	add	
17	[BUG] [BUGGY] double max = 0; [FE] AssertionFailedError [CONTEXT] public double getLInfNorm() { [BUGGY] double max = 0; [BUGGY] for (double a : data) { max += Math.max(max, Math.abs(a)); } return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	719	719	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getLInfNorm() { [BUGGY] [BUGGY] double max = 0; for (double a : data) { max += Math.max(max, Math.abs(a)); } return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	719	719	1	add	
19	[BUG] [BUGGY] for (double a : data) { [FE] AssertionFailedError [CONTEXT] public double getLInfNorm() { double max = 0; [BUGGY] for (double a : data) { [BUGGY] max += Math.max(max, Math.abs(a)); } return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	720	720	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getLInfNorm() { double max = 0; [BUGGY] [BUGGY] for (double a : data) { max += Math.max(max, Math.abs(a)); } return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	720	720	1	add	
21	[BUG] [BUGGY] max += Math.max(max, Math.abs(a)); [FE] AssertionFailedError [CONTEXT] public double getLInfNorm() { double max = 0; for (double a : data) { [BUGGY] max += Math.max(max, Math.abs(a)); [BUGGY] } return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getLInfNorm() { double max = 0; for (double a : data) { [BUGGY] [BUGGY] max += Math.max(max, Math.abs(a)); } return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	721	721	1	add	
23	[BUG] [BUGGY] return max; [FE] AssertionFailedError [CONTEXT] public double getLInfNorm() { double max = 0; for (double a : data) { max += Math.max(max, Math.abs(a)); } [BUGGY] return max; [BUGGY] } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	723	723	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public double getLInfNorm() { double max = 0; for (double a : data) { max += Math.max(max, Math.abs(a)); } [BUGGY] [BUGGY] return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	723	723	1	add	
25	[BUG] [BUGGY] public ArrayRealVector(double[] d) { [FE] AssertionFailedError [CONTEXT] [BUGGY] public ArrayRealVector(double[] d) { [BUGGY] data = d.clone(); } [CLASS] ArrayRealVector [METHOD] <init> [RETURN_TYPE] ArrayRealVector(double[])  double[] d [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data long serialVersionUID  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.3779644730092272	82	82	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] public ArrayRealVector(double[] d) { data = d.clone(); } [CLASS] ArrayRealVector [METHOD] <init> [RETURN_TYPE] ArrayRealVector(double[])  double[] d [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data long serialVersionUID  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.3779644730092272	82	82	1	add	
27	[BUG] [BUGGY] data = d.clone(); [FE] AssertionFailedError [CONTEXT] public ArrayRealVector(double[] d) { [BUGGY] data = d.clone(); [BUGGY] } [CLASS] ArrayRealVector [METHOD] <init> [RETURN_TYPE] ArrayRealVector(double[])  double[] d [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data long serialVersionUID  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.3779644730092272	83	83	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ArrayRealVector(double[] d) { [BUGGY] [BUGGY] data = d.clone(); } [CLASS] ArrayRealVector [METHOD] <init> [RETURN_TYPE] ArrayRealVector(double[])  double[] d [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data long serialVersionUID  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.3779644730092272	83	83	1	add	
29	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public ArrayRealVector(double[] d) { data = d.clone(); [BUGGY] } [BUGGY]  [CLASS] ArrayRealVector [METHOD] <init> [RETURN_TYPE] ArrayRealVector(double[])  double[] d [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data long serialVersionUID  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.3779644730092272	84	84	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ArrayRealVector(double[] d) { data = d.clone(); [BUGGY] [BUGGY] } [CLASS] ArrayRealVector [METHOD] <init> [RETURN_TYPE] ArrayRealVector(double[])  double[] d [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data long serialVersionUID  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.3779644730092272	84	84	1	add	
31	[BUG] [BUGGY] private static final RealVectorFormat DEFAULT_FORMAT = RealVectorFormat.getInstance(); [FE] AssertionFailedError [CONTEXT] [BUGGY] private static final RealVectorFormat DEFAULT_FORMAT =  RealVectorFormat.getInstance(); [BUGGY] RealVectorFormat.getInstance(); [CLASS] ArrayRealVector  [VARIABLES] 	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.3779644730092272	41	42	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] private static final RealVectorFormat DEFAULT_FORMAT =  RealVectorFormat.getInstance(); RealVectorFormat.getInstance(); [CLASS] ArrayRealVector  [VARIABLES] 	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.3779644730092272	41	42	1	add	
64	[BUG] [BUGGY] data = d.clone(); [FE] AssertionFailedError [CONTEXT] public ArrayRealVector(double[] d) { [BUGGY] data = d.clone(); [BUGGY] } [CLASS] ArrayRealVector [METHOD] <init> [RETURN_TYPE] ArrayRealVector(double[])  double[] d [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data long serialVersionUID  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.2672612419124244	83	83	1	replace	
65	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ArrayRealVector(double[] d) { [BUGGY] [BUGGY] data = d.clone(); } [CLASS] ArrayRealVector [METHOD] <init> [RETURN_TYPE] ArrayRealVector(double[])  double[] d [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data long serialVersionUID  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.2672612419124244	83	83	1	add	
66	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public ArrayRealVector(double[] d) { data = d.clone(); [BUGGY] } [BUGGY]  [CLASS] ArrayRealVector [METHOD] <init> [RETURN_TYPE] ArrayRealVector(double[])  double[] d [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data long serialVersionUID  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.2672612419124244	84	84	1	replace	
67	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ArrayRealVector(double[] d) { data = d.clone(); [BUGGY] [BUGGY] } [CLASS] ArrayRealVector [METHOD] <init> [RETURN_TYPE] ArrayRealVector(double[])  double[] d [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data long serialVersionUID  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.2672612419124244	84	84	1	add	
68	[BUG] [BUGGY] private static final RealVectorFormat DEFAULT_FORMAT = RealVectorFormat.getInstance(); [FE] AssertionFailedError [CONTEXT] [BUGGY] private static final RealVectorFormat DEFAULT_FORMAT =  RealVectorFormat.getInstance(); [BUGGY] RealVectorFormat.getInstance(); [CLASS] ArrayRealVector  [VARIABLES] 	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.2672612419124244	41	42	1	replace	
69	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] private static final RealVectorFormat DEFAULT_FORMAT =  RealVectorFormat.getInstance(); RealVectorFormat.getInstance(); [CLASS] ArrayRealVector  [VARIABLES] 	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.2672612419124244	41	42	1	add	
