bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double[]  data  =(double[])this.data.get(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  cannot  find  symbol  non_FITTING_POSITION_AND_SIZE_MESSAGE  [FE]    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double[]  data  =(double[])this.data.get(non_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    double[]  data  =(double[])this.data.get(non_FITTING_POSITION_AND_SIZE_MESSAGE);		non-compiled	[CE]  cannot  find  symbol  non_FITTING_POSITION_AND_SIZE_MESSAGE	2	None	add
2	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(data[i]);  }  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
3	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.sqrt(data[i]);  }  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.sqrt(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.sqrt(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
4	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.floor(data[i]);  }  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.floor(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.floor(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
5	[BUG]  [BUGGY]    double  v1  =  Math.sqrt(data[0].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double  v1  =  Math.sqrt(data[0].doubleValue());  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    double  v1  =  Math.sqrt(data[0].doubleValue());		non-compiled	[CE]  double  cannot  be  dereferenced	2	None	add
6	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.floor(data[i]);  }  [CE]  ';'  expected  [FE]              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.floor(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.floor(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
7	[BUG]  [BUGGY]    double[]  data  =  getDataRealVector();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double[]  data  =  getDataRealVector();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    double[]  data  =  getDataRealVector();		non-compiled	[CE]  cannot  find  symbol	2	None	add
8	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
9	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
10	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  Math.sqrt(data[i]);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  Math.sqrt(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  Math.sqrt(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
11	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
12	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.rint(data[i]);  }  [CE]  ';'  expected  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.rint(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.rint(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
13	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.rint(data[i]);  }  [CE]  ';'  expected  [FE]                            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.rint(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.rint(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
14	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  return  Math.sqrt(data[i]);  }  [CE]  ';'  expected  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  return  Math.sqrt(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  return  Math.sqrt(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
15	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  return  Math.sqrt(data[i]);  }  [CE]  ';'  expected  [FE]                                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  return  Math.sqrt(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  return  Math.sqrt(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
16	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [CE]  ';'  expected  [FE]                                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
17	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.sqrt(d[i]);  }  [CE]  ';'  expected  [FE]                                    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.sqrt(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.sqrt(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
18	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [CE]  ';'  expected  [FE]                                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
19	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]);  }  [CE]  ';'  expected  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
20	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [CE]  ';'  expected  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
21	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.ceil(data[i]);  }  [CE]  ';'  expected  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.ceil(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.ceil(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double  v1  =  Math.sqrt(data.length);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	    double  v1  =  Math.sqrt(data.length);		compilable	  [FE]  AssertionFailedError  	2	1	add
23	[BUG]  [BUGGY]    double  v1  =  Math.sqrt(data.length);  [FE]  AssertionFailedError  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double  v1  =  Math.sqrt(data.length);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    double  v1  =  Math.sqrt(data.length);		compilable	  [FE]  AssertionFailedError  	2	1	add
24	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]);  }  [CE]  ';'  expected  [FE]                                                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  d.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
25	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  data[i];  }  [CE]  ';'  expected  [FE]                                                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  data[i];  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  data[i];  }		non-compiled	[CE]  ';'  expected	2	None	add
26	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.rint(d[i]);  }  [CE]  ';'  expected  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.rint(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.rint(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
27	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  data[i];  }  [CE]  ';'  expected  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  data[i];  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  data[i];  }		non-compiled	[CE]  ';'  expected	2	None	add
28	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.ceil(data[i]);  }  [CE]  ';'  expected  [FE]                                                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.ceil(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.ceil(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
29	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  i++)  {  out[i]  =  Math.sqrt(d[i]);  }  [CE]  ';'  expected  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  i++)  {  out[i]  =  Math.sqrt(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  i++)  {  out[i]  =  Math.sqrt(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
30	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  i++)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [CE]  ';'  expected  [FE]                                                            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  i++)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  i++)  {  out[i]  =  Math.sqrt(d[i]  *  d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
31	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  System.arraycopy(data,  0,  d,  0,  data[i]);  }  [CE]  ';'  expected  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  System.arraycopy(data,  0,  d,  0,  data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  System.arraycopy(data,  0,  d,  0,  data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
32	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.round(data[i]);  }  [CE]  ';'  expected  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.round(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.round(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
33	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]  *  i);  }  [CE]  ';'  expected  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]  *  i);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  sum  +=  Math.sqrt(data[i]  *  i);  }		non-compiled	[CE]  ';'  expected	2	None	add
34	[BUG]  [BUGGY]    double  v2  =  Math.sqrt(data[0].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double  v2  =  Math.sqrt(data[0].doubleValue());  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    double  v2  =  Math.sqrt(data[0].doubleValue());		non-compiled	[CE]  double  cannot  be  dereferenced	2	None	add
35	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  Math.sqrt(data[i]  *  i);  }  [CE]  ';'  expected  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  Math.sqrt(data[i]  *  i);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  Math.sqrt(data[i]  *  i);  }		non-compiled	[CE]  ';'  expected	2	None	add
36	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.rint(d[i]  *  d[i]);  }  [CE]  ';'  expected  [FE]                                                                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.rint(d[i]  *  d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.rint(d[i]  *  d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
37	[BUG]  [BUGGY]    Double  v1  =  Math.sqrt(data[0].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                                                          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    Double  v1  =  Math.sqrt(data[0].doubleValue());  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    Double  v1  =  Math.sqrt(data[0].doubleValue());		non-compiled	[CE]  double  cannot  be  dereferenced	2	None	add
38	[BUG]  [BUGGY]    double  data  =  getNorm();  [CE]  for-each  not  applicable  to  expression  type  [FE]                                                                            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double  data  =  getNorm();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    double  data  =  getNorm();		non-compiled	[CE]  for-each  not  applicable  to  expression  type	2	None	add
39	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                                                              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  ++i)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  ';'  expected	2	None	add
40	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  data[i]  *  getNorm();  }  [CE]  ';'  expected  [FE]                                                                                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  data[i]  *  getNorm();  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  sum  +=  data[i]  *  getNorm();  }		non-compiled	[CE]  ';'  expected	2	None	add
41	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]).doubleValue();  }  [CE]  ';'  expected  [FE]                                                                                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]).doubleValue();  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.sqrt(d[i]).doubleValue();  }		non-compiled	[CE]  ';'  expected	2	None	add
42	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                                                                                    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  ';'  expected	2	None	add
43	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [CE]  ';'  expected  [FE]                                                                                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]  *  d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
44	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]);  }  [CE]  ';'  expected  [FE]                                                                                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
45	[BUG]  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  DataUtilities.getNorm(data[i]);  }  [CE]  ';'  expected  [FE]                                                                                          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  DataUtilities.getNorm(data[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  DataUtilities.getNorm(data[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
46	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  i++)  {  d[i]  =  Math.sqrt(d[i]);  }  [CE]  ';'  expected  [FE]                                                                                            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  i++)  {  d[i]  =  Math.sqrt(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  i++)  {  d[i]  =  Math.sqrt(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
47	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.floor(d[i]  *  d[i]);  }  [CE]  ';'  expected  [FE]                                                                                              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.floor(d[i]  *  d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  out[i]  =  Math.floor(d[i]  *  d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
48	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]);  }  [CE]  ';'  expected  [FE]                                                                                                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
49	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.rint(d[i]);  }  [CE]  ';'  expected  [FE]                                                                                                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.rint(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  i++)  {  out[i]  =  Math.rint(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
50	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  out[i]  =  Math.rint(d[i]);  }  [CE]  ';'  expected  [FE]                                                                                                    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  out[i]  =  Math.rint(d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0,  data  =  d.length;  i  <  d.length;  ++i)  {  out[i]  =  Math.rint(d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
51	[BUG]  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [CE]  ';'  expected  [FE]                                                                                                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]  *  d[i]);  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	    if(data  ==  null)  {  double[]  d  =  getNorm();  for(int  i  =  0;  i  <  data.length;  ++i)  {  d[i]  =  Math.sqrt(d[i]  *  d[i]);  }		non-compiled	[CE]  ';'  expected	2	None	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(data  ==  null)?  0  :  data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
53	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(data!=  null)?  0  :  data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
55	[BUG]  [BUGGY]  double  sum  =(data!=  null)?  0  :  data.length;  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data!=  null)?  0  :  data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =  1;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =  1;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
57	[BUG]  [BUGGY]  double  sum  =  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =  1;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =  1;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
58	[BUG]  [BUGGY]  double  sum  =(data  >=  null)?  0  :  data.length;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  >=  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  >=  null)?  0  :  data.length;	double  sum  =  0;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	1	None	replace
59	[BUG]  [BUGGY]  double  sum  =(data  <  null)?  0  :  data.length;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  <  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  <  null)?  0  :  data.length;	double  sum  =  0;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	1	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(this.data!=  null)?  0  :  this.data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(this.data!=  null)?  0  :  this.data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
61	[BUG]  [BUGGY]  double  sum  =(this.data!=  null)?  0  :  this.data.length;  [FE]  AssertionFailedError  [FE]              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(this.data!=  null)?  0  :  this.data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(this.data!=  null)?  0  :  this.data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(this.data  ==  null)?  0  :  this.data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(this.data  ==  null)?  0  :  this.data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
63	[BUG]  [BUGGY]  double  sum  =(this.data  ==  null)?  0  :  this.data.length;  [FE]  AssertionFailedError  [FE]                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(this.data  ==  null)?  0  :  this.data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(this.data  ==  null)?  0  :  this.data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
64	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data,  0,  data.length);  [CE]  cannot  find  symbol  DataUtils  [FE]                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data,  0,  data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data,  0,  data.length);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtils	1	None	replace
65	[BUG]  [BUGGY]  double  sum  =(this.data  ==  null)?  0  :  this.data[0].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(this.data  ==  null)?  0  :  this.data[0].doubleValue();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(this.data  ==  null)?  0  :  this.data[0].doubleValue();	double  sum  =  0;  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  Math.sqrt(data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(data  ==  null)?  0  :  Math.sqrt(data.length);	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
67	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  Math.sqrt(data.length);  [FE]  AssertionFailedError  [FE]                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  Math.sqrt(data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  Math.sqrt(data.length);	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null?  0  :  data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(data  ==  null?  0  :  data.length);	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
69	[BUG]  [BUGGY]  double  sum  =(data  ==  null?  0  :  data.length);  [FE]  AssertionFailedError  [FE]                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null?  0  :  data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null?  0  :  data.length);	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
70	[BUG]  [BUGGY]  double  sum  =(data.length  <  2)?  0  :  data[0].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data.length  <  2)?  0  :  data[0].doubleValue();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data.length  <  2)?  0  :  data[0].doubleValue();	double  sum  =  0;  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
71	[BUG]  [BUGGY]  double  sum  =(data.length  <  1)?  0  :  data[0].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data.length  <  1)?  0  :  data[0].doubleValue();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data.length  <  1)?  0  :  data[0].doubleValue();	double  sum  =  0;  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
72	[BUG]  [BUGGY]  double  sum  =(this.data!=  null)?  0  :  this.data[0].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(this.data!=  null)?  0  :  this.data[0].doubleValue();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(this.data!=  null)?  0  :  this.data[0].doubleValue();	double  sum  =  0;  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
73	[BUG]  [BUGGY]  double  sum  =(data!=  null)?  0  :  DataUtils.doubleValue(data,  0,  data.length);  [CE]  cannot  find  symbol  DataUtils  [FE]                                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null)?  0  :  DataUtils.doubleValue(data,  0,  data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data!=  null)?  0  :  DataUtils.doubleValue(data,  0,  data.length);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtils	1	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null)?  0  :  Math.sqrt(data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(data!=  null)?  0  :  Math.sqrt(data.length);	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
75	[BUG]  [BUGGY]  double  sum  =(data!=  null)?  0  :  Math.sqrt(data.length);  [FE]  AssertionFailedError  [FE]                                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null)?  0  :  Math.sqrt(data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data!=  null)?  0  :  Math.sqrt(data.length);	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
76	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtilities.doubleValue(data,  0,  data.length);  [CE]  cannot  find  symbol  DataUtilities  [FE]                                    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtilities.doubleValue(data,  0,  data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  DataUtilities.doubleValue(data,  0,  data.length);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtilities	1	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null?  0  :  data.length)/  2;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(data  ==  null?  0  :  data.length)/  2;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
78	[BUG]  [BUGGY]  double  sum  =(data  ==  null?  0  :  data.length)/  2;  [FE]  AssertionFailedError  [FE]                                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null?  0  :  data.length)/  2;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null?  0  :  data.length)/  2;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data.length  >  0)?  data[0]  :  0;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(data.length  >  0)?  data[0]  :  0;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
80	[BUG]  [BUGGY]  double  sum  =(data.length  >  0)?  data[0]  :  0;  [FE]  AssertionFailedError  [FE]                                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data.length  >  0)?  data[0]  :  0;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data.length  >  0)?  data[0]  :  0;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null?  0  :  data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(data!=  null?  0  :  data.length);	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
82	[BUG]  [BUGGY]  double  sum  =(data!=  null?  0  :  data.length);  [FE]  AssertionFailedError  [FE]                                          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null?  0  :  data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data!=  null?  0  :  data.length);	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
83	[BUG]  [BUGGY]  double  sum  =(data!=  null)?  0  :  DataUtilities.doubleValue(data,  0,  data.length);  [CE]  cannot  find  symbol  DataUtilities  [FE]                                            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null)?  0  :  DataUtilities.doubleValue(data,  0,  data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data!=  null)?  0  :  DataUtilities.doubleValue(data,  0,  data.length);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtilities	1	None	replace
84	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data[0].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                                              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data[0].doubleValue();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  data[0].doubleValue();	double  sum  =  0;  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
85	[BUG]  [BUGGY]  double  sum  =(this.data  ==  null)?  0  :  this.data[0].getNorm();  [CE]  double  cannot  be  dereferenced  [FE]                                                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(this.data  ==  null)?  0  :  this.data[0].getNorm();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(this.data  ==  null)?  0  :  this.data[0].getNorm();	double  sum  =  0;  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
86	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data[0],  data[1]);  [CE]  cannot  find  symbol  DataUtils  [FE]                                                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data[0],  data[1]);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data[0],  data[1]);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtils	1	None	replace
87	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtilities.nextDouble();  [CE]  cannot  find  symbol  DataUtilities  [FE]                                                    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtilities.nextDouble();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  DataUtilities.nextDouble();	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtilities	1	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null?  0  :  data.length)/  2;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(data!=  null?  0  :  data.length)/  2;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
89	[BUG]  [BUGGY]  double  sum  =(data!=  null?  0  :  data.length)/  2;  [FE]  AssertionFailedError  [FE]                                                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null?  0  :  data.length)/  2;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data!=  null?  0  :  data.length)/  2;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
90	[BUG]  [BUGGY]  double  sum  =(this.data!=  null)?  0  :  this.data[0].getNorm();  [CE]  double  cannot  be  dereferenced  [FE]                                                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(this.data!=  null)?  0  :  this.data[0].getNorm();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(this.data!=  null)?  0  :  this.data[0].getNorm();	double  sum  =  0;  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
91	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.parseDouble(data,  0,  data.length);  [CE]  cannot  find  symbol  DataUtils  [FE]                                                          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.parseDouble(data,  0,  data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  DataUtils.parseDouble(data,  0,  data.length);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtils	1	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                                            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null?  0  :  data.length)+  1;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	add	double  sum  =(data  ==  null?  0  :  data.length)+  1;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
93	[BUG]  [BUGGY]  double  sum  =(data  ==  null?  0  :  data.length)+  1;  [FE]  AssertionFailedError  [FE]                                                            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null?  0  :  data.length)+  1;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null?  0  :  data.length)+  1;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  	1	1	replace
94	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.getNorm(data,  0,  data.length);  [CE]  cannot  find  symbol  DataUtils  [FE]                                                              AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.getNorm(data,  0,  data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  DataUtils.getNorm(data,  0,  data.length);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtils	1	None	replace
95	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.getNorm(data);  [CE]  cannot  find  symbol  DataUtils  [FE]                                                                AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.getNorm(data);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  DataUtils.getNorm(data);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtils	1	None	replace
96	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data[0]);  [CE]  cannot  find  symbol  DataUtils  [FE]                                                                  AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data[0]);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data[0]);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtils	1	None	replace
97	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  Math.sqrt(data[0].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                                                                    AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  Math.sqrt(data[0].doubleValue());  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  Math.sqrt(data[0].doubleValue());	double  sum  =  0;  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
98	[BUG]  [BUGGY]  double  sum  =(data!=  null)?  0  :  DataUtils.doubleValue(data[0],  data[1]);  [CE]  cannot  find  symbol  DataUtils  [FE]                                                                      AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data!=  null)?  0  :  DataUtils.doubleValue(data[0],  data[1]);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data!=  null)?  0  :  DataUtils.doubleValue(data[0],  data[1]);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtils	1	None	replace
99	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtilities.getNorm(data);  [CE]  cannot  find  symbol  DataUtilities  [FE]                                                                        AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtilities.getNorm(data);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  DataUtilities.getNorm(data);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtilities	1	None	replace
100	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  Math.sqrt(data[0].getNorm());  [CE]  double  cannot  be  dereferenced  [FE]                                                                          AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  Math.sqrt(data[0].getNorm());  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  Math.sqrt(data[0].getNorm());	double  sum  =  0;  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
101	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data.length);  [CE]  cannot  find  symbol  DataUtils  [FE]                                                                            AssertionFailedError  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data.length);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	1.0	699	699	1	replace	double  sum  =(data  ==  null)?  0  :  DataUtils.doubleValue(data.length);	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtils	1	None	replace
