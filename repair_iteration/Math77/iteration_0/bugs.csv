bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] double sum = 0; [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getNorm() { [BUGGY] double sum = 0; [BUGGY] for (double a : data) { sum += a * a; } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getNorm() { [BUGGY] [BUGGY] double sum = 0; for (double a : data) { sum += a * a; } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	add	
3	[BUG] [BUGGY] for (double a : data) { [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getNorm() { double sum = 0; [BUGGY] for (double a : data) { [BUGGY] sum += a * a; } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getNorm() { double sum = 0; [BUGGY] [BUGGY] for (double a : data) { sum += a * a; } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	add	
5	[BUG] [BUGGY] sum += a * a; [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getNorm() { double sum = 0; for (double a : data) { [BUGGY] sum += a * a; [BUGGY] } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getNorm() { double sum = 0; for (double a : data) { [BUGGY] [BUGGY] sum += a * a; } return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	add	
7	[BUG] [BUGGY] return Math.sqrt(sum); [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getNorm() { double sum = 0; for (double a : data) { sum += a * a; } [BUGGY] return Math.sqrt(sum); [BUGGY] } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getNorm() { double sum = 0; for (double a : data) { sum += a * a; } [BUGGY] [BUGGY] return Math.sqrt(sum); } [CLASS] ArrayRealVector [METHOD] getNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	add	
9	[BUG] [BUGGY] double sum = 0; [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getL1Norm() { [BUGGY] double sum = 0; [BUGGY] for (double a : data) { sum += Math.abs(a); } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getL1Norm() { [BUGGY] [BUGGY] double sum = 0; for (double a : data) { sum += Math.abs(a); } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	add	
11	[BUG] [BUGGY] for (double a : data) { [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getL1Norm() { double sum = 0; [BUGGY] for (double a : data) { [BUGGY] sum += Math.abs(a); } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getL1Norm() { double sum = 0; [BUGGY] [BUGGY] for (double a : data) { sum += Math.abs(a); } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	add	
13	[BUG] [BUGGY] sum += Math.abs(a); [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getL1Norm() { double sum = 0; for (double a : data) { [BUGGY] sum += Math.abs(a); [BUGGY] } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getL1Norm() { double sum = 0; for (double a : data) { [BUGGY] [BUGGY] sum += Math.abs(a); } return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	
15	[BUG] [BUGGY] return sum; [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getL1Norm() { double sum = 0; for (double a : data) { sum += Math.abs(a); } [BUGGY] return sum; [BUGGY] } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getL1Norm() { double sum = 0; for (double a : data) { sum += Math.abs(a); } [BUGGY] [BUGGY] return sum; } [CLASS] ArrayRealVector [METHOD] getL1Norm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	add	
17	[BUG] [BUGGY] double max = 0; [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getLInfNorm() { [BUGGY] double max = 0; [BUGGY] for (double a : data) { max += Math.max(max, Math.abs(a)); } return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getLInfNorm() { [BUGGY] [BUGGY] double max = 0; for (double a : data) { max += Math.max(max, Math.abs(a)); } return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	add	
19	[BUG] [BUGGY] for (double a : data) { [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getLInfNorm() { double max = 0; [BUGGY] for (double a : data) { [BUGGY] max += Math.max(max, Math.abs(a)); } return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError testBasicFunctions [CONTEXT] public double getLInfNorm() { double max = 0; [BUGGY] [BUGGY] for (double a : data) { max += Math.max(max, Math.abs(a)); } return max; } [CLASS] ArrayRealVector [METHOD] getLInfNorm [RETURN_TYPE] double  [VARIABLES] RealVectorFormat DEFAULT_FORMAT String NON_FITTING_POSITION_AND_SIZE_MESSAGE boolean double[] d data out v v1 v2 long serialVersionUID double a max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	add	
