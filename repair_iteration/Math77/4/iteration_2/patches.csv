bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  entries.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  entries.iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  entries.iterator();	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  null;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  null;	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =  iter.entries.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =  iter.entries.iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =  iter.entries.iterator();	  Entry    <    N,    V>    current    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
4	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entry.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =  entry.iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =  entry.iterator();	  Iterator    <    Entry>    iter    =    iter.iterator();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
5	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =  iter.getValue()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =  iter.getValue()  -  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =  iter.getValue()  -  1;	  Entry    <    N,    V>    current    =    iter.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
6	[BUG]  [BUGGY]  double  max  =  iter.getValue()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  max  =  iter.getValue()  -  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  max  =  iter.getValue()  -  1;	  double    max    =    iter.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  Double  max  =  iter.next();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Double  max  =  iter.next();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Double  max  =  iter.next();	  double    max    =    iter.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  Iterator  iter  =  entries.next();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  entries.next();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  iter  =  entries.next();	  Iterator    iter    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
9	[BUG]  [BUGGY]  Iterator  iter  =  entry.next();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  entry.next();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  iter  =  entry.next();	  Iterator    iter    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
10	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  -  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(0,  max  -  1);	  ((    OpenMapEntry)iter.next()).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
11	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  -  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(value  -  1);	  ((    OpenMapEntry)iter.next()).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
12	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  /  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  /  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(max  /  1);	  ((    OpenMapEntry)iter.next()).setValue(max    -    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
13	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(entries  ==  null)?  entries.iterator()  :  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =(entries  ==  null)?  entries.iterator()  :  null;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =(entries  ==  null)?  entries.iterator()  :  null;	  Iterator    <    Entry>    iter    =(entries!=    null)?    entries.iterator()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
14	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(entrys!=  null)?  entries.iterator()  :  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =(entrys!=  null)?  entries.iterator()  :  null;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =(entrys!=  null)?  entries.iterator()  :  null;	  Iterator    <    Entry>    iter    =(entries!=    null)?    entries.iterator()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
15	[BUG]  [BUGGY]  double  value  =  iter.next()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.next()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.next()  *  DEFAULT_ZERO_TOLERANCE;	  double    value    =    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
16	[BUG]  [BUGGY]  double  value  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE  +  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE  +  1;	  double    value    =    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
17	[BUG]  [BUGGY]  double  value  =  iter.next()  +  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.next()  +  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.next()  +  DEFAULT_ZERO_TOLERANCE;	  double    value    =    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
18	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =  entries.get(iter.next()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =  entries.get(iter.next()  -  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =  entries.get(iter.next()  -  1);	  Entry    <    N,    V>    current    =    entries.get(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =  entries.get(iter.next()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =  entries.get(iter.next()  +  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =  entries.get(iter.next()  +  1);	  Entry    <    N,    V>    current    =    entries.get(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  double  value  =  iter.getValue()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.getValue()  +  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.getValue()  +  1;	  double    value    =    iter.next()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
21	[BUG]  [BUGGY]  double  value  =  iter.next()  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.next()  /  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.next()  /  1;	  double    value    =    iter.next()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
22	[BUG]  [BUGGY]  Double  value  =  iter.next();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Double  value  =  iter.next();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Double  value  =  iter.next();	  double    value    =    iter.next()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
23	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  +  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(0,  max  +  1);	  ((    OpenMapEntry)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  -  iter.value());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  -  iter.value());  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(0,  max  -  iter.value());	  ((    OpenMapEntry)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  Iterator  iter  =  entry.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  entry.entries.iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  iter  =  entry.entries.iterator();	  Iterator    iter    =    current.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLInfNorm());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLInfNorm());  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(getLInfNorm());	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
27	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLimit());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLimit());  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(getLimit());	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
28	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm(),  max);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm(),  max);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(getNorm(),  max);	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLocale());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLocale());  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(getLocale());	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =  entry.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =  entry.iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =  entry.iterator();	  Entry    <    N,    V>    current    =    iter.iterator();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
31	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  /  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  /  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).advance()  /  1;	  ((    OpenMapEntry)iter.next()).advance()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  max;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  +  max;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).advance()  +  max;	  ((    OpenMapEntry)iter.next()).advance()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value,  max);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(value,  max);	  ((    OpenMapEntry)iter.next()).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  double  max  =  iter.getValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  max  =  iter.getValue()  +  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  max  =  iter.getValue()  +  1;	  double    max    =    iter.next()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max  +  1));  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(new  Float(max  +  1));	  ((    OpenMapEntry)iter.next()).setValue(new    Float(max));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
36	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Double(max));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Double(max));  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(new  Double(max));	  ((    OpenMapEntry)iter.next()).setValue(new    Float(max));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
37	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max),  max);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max),  max);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(new  Float(max),  max);	  ((    OpenMapEntry)iter.next()).setValue(new    Float(max));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
38	[BUG]  [BUGGY]  iter.setValue(0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  iter.setValue(0);  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	iter.setValue(0);	  iter.setValue(0,    iter.next()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
39	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(max  +  2);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(max  +  2);	  ((    OpenMapEntry)iter.next()).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
40	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(value  +  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(value  +  1);	  ((    OpenMapEntry)iter.next()).setValue(max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
41	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setLInfNorm(max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setLInfNorm(max);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setLInfNorm(max);	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
42	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  +  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).getLInfNorm()  +  1;	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
43	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).getLInfNorm()  -  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).getLInfNorm()  -  1;	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
44	[BUG]  [BUGGY]  double  max  =  iter.next()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  max  =  iter.next()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  max  =  iter.next()  *  DEFAULT_ZERO_TOLERANCE;	  double    max    =    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  double  max  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  max  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE  +  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  max  =  iter.next()  /  DEFAULT_ZERO_TOLERANCE  +  1;	  double    max    =    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  double  max  =  iter.next()  +  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  max  =  iter.next()  +  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  max  =  iter.next()  +  DEFAULT_ZERO_TOLERANCE;	  double    max    =    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =  entries.getValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =  entries.getValue();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =  entries.getValue();	  Entry    <    N,    V>    current    =    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
48	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =  entry.getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =  entry.getValue();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =  entry.getValue();	  Entry    <    N,    V>    current    =    iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
49	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getNorm()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).getNorm()  +  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).getNorm()  +  1;	  ((    OpenMapEntry)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  double  value  =  iter.getValue()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.getValue()  -  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.getValue()  -  1;	  double    value    =    iter.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
51	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(value);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setNorm(value);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
52	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  +  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setNorm(max  +  1);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
53	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  -  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setNorm(max  -  1);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
54	[BUG]  [BUGGY]  double  value  =  iter.next()  /  max;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.next()  /  max;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.next()  /  max;	  double    value    =    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
55	[BUG]  [BUGGY]  double  value  =  iter.next()  -  delta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.next()  -  delta;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.next()  -  delta;	  double    value    =    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
56	[BUG]  [BUGGY]  double  value  =  iter.next()  *  max;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.next()  *  max;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.next()  *  max;	  double    value    =    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
57	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).value()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).value()  +  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).value()  +  1;	  ((    OpenMapEntry)iter.next()).value();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  Iterator  iter  =  entries.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  entries.entrySet().iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  iter  =  entries.entrySet().iterator();	  Iterator    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  Iterator  iter  =  entry.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  entry.entrySet().iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  iter  =  entry.entrySet().iterator();	  Iterator    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.next();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =  entries.next();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =  entries.next();	  Iterator    <    Entry>    iter    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
61	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entry.next();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =  entry.next();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =  entry.next();	  Iterator    <    Entry>    iter    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
62	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value,  max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value,  max);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(this.value,  max);	  ((    OpenMapEntry)iter.next()).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
63	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value  -  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(this.value  -  1);	  ((    OpenMapEntry)iter.next()).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
64	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(this.value  +  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(this.value  +  1);	  ((    OpenMapEntry)iter.next()).setValue(this.value);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
65	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(entries  ==  null?  entries.iterator()  :  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =(entries  ==  null?  entries.iterator()  :  0);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =(entries  ==  null?  entries.iterator()  :  0);	  Iterator    <    Entry>    iter    =(entries!=    null?    entries.iterator()    :    0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
66	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(entrys!=  null?  entries.iterator()  :  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =(entrys!=  null?  entries.iterator()  :  0);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =(entrys!=  null?  entries.iterator()  :  0);	  Iterator    <    Entry>    iter    =(entries!=    null?    entries.iterator()    :    0);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
67	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =(entry.next()  ==  null)?  entry.getValue()  :  entry.getValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =(entry.next()  ==  null)?  entry.getValue()  :  entry.getValue();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =(entry.next()  ==  null)?  entry.getValue()  :  entry.getValue();	  Entry    <    N,    V>    current    =    entry.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
68	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.get(iter.next());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =  entries.get(iter.next());  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =  entries.get(iter.next());	  Iterator    <    Entry>    iter    =    iter.next();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
69	[BUG]  [BUGGY]  double  value  =  iter.next()  -  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.next()  -  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.next()  -  DEFAULT_ZERO_TOLERANCE;	  double    value    =    iter.next()    -    max;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
70	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  new  OpenMapSparseIterator  <  Entry>();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  new  OpenMapSparseIterator  <  Entry>();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =(this.entries!=  null)?  this.entries.iterator()  :  new  OpenMapSparseIterator  <  Entry>();	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
71	[BUG]  [BUGGY]  double  max  =  iter.getValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  max  =  iter.getValue();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  max  =  iter.getValue();	  double    max    =    iter.next()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =(this.entries!=  null)?  this.entries.iterator()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =(this.entries!=  null)?  this.entries.iterator()  :  null;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =(this.entries!=  null)?  this.entries.iterator()  :  null;	  Entry    <    N,    V>    current    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
73	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(new  Float(max),  DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapEntry)iter.next()).setValue(new    Float(max));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
74	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max  +  2));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max  +  2));  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(new  Float(max  +  2));	  ((    OpenMapEntry)iter.next()).setValue(new    Float(max));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
75	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLenient());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getLenient());  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(getLenient());	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
76	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(0,  max  -  2);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(0,  max  -  2);	  ((    OpenMapEntry)iter.next()).setValue(0,    max);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
77	[BUG]  [BUGGY]  Iterator  iter.setValue(0,  iter.next());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter.setValue(0,  iter.next());  [BUGGY]      max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  iter.setValue(0,  iter.next());	  iter.setValue(0,    iter.next()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setLInfNorm(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setLInfNorm(value);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setLInfNorm(value);	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
79	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =  iter.get(iter.next());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =  iter.get(iter.next());  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =  iter.get(iter.next());	  Entry    <    N,    V>    current    =    entries.get(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  Iterator  iter  =  keys.iterator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  keys.iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  iter  =  keys.iterator();	  Iterator    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
81	[BUG]  [BUGGY]  Iterator  iter  =  allEntries.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  allEntries.iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  iter  =  allEntries.iterator();	  Iterator    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
82	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =(entryer.next()  ==  null)?  entries.get(current):  entryer.next();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =(entryer.next()  ==  null)?  entries.get(current):  entryer.next();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =(entryer.next()  ==  null)?  entries.get(current):  entryer.next();	  Entry    <    N,    V>    current    =    entryer.next();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
83	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).assertNorm(max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).assertNorm(max);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).assertNorm(max);	  ((    OpenMapEntry)iter.next()).assertNorm();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
84	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLimit();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).getLimit();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).getLimit();	  ((    OpenMapEntry)iter.next()).getNorm();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
85	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(getNorm()  -  1);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(getNorm()  -  1);	  ((    OpenMapEntry)iter.next()).setValue(getNorm());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
86	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  +  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setNorm(max  +  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setNorm(max  +  DEFAULT_ZERO_TOLERANCE);	  ((    OpenMapEntry)iter.next()).setNorm(max);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
87	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(entrys  ==  null)?  entries.iterator()  :  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =(entrys  ==  null)?  entries.iterator()  :  null;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =(entrys  ==  null)?  entries.iterator()  :  null;	  Iterator    <    Entry>    iter    =(entries!=    null)?    entries.iterator()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
88	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  *  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).advance()  *  1;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).advance()  *  1;	  ((    OpenMapEntry)iter.next()).advance()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
89	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =(this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE);	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
90	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =(this.entries!=  null)?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =(this.entries!=  null)?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
91	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =(entryer.next()  ==  null)?  entries.get(iter.next()):  entryer.value();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =(entryer.next()  ==  null)?  entries.get(iter.next()):  entryer.value();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =(entryer.next()  ==  null)?  entries.get(iter.next()):  entryer.value();	  Entry    <    N,    V>    current    =    entryer.next();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
92	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =(iter.hasNext())?  iter.next()  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =(iter.hasNext())?  iter.next()  :  null;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =(iter.hasNext())?  iter.next()  :  null;	  Entry    <    N,    V>    current    =    iter.iterator();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
93	[BUG]  [BUGGY]  double  value  =  iter.getValue()  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  double  value  =  iter.getValue()  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	double  value  =  iter.getValue()  /  DEFAULT_ZERO_TOLERANCE;	  double    value    =    iter.next()    /    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
94	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max),  iter.value());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).setValue(new  Float(max),  iter.value());  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).setValue(new  Float(max),  iter.value());	  ((    OpenMapEntry)iter.next()).setValue(new    Float(max));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
95	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entryers.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Iterator  <  Entry>  iter  =  entryers.iterator();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Iterator  <  Entry>  iter  =  entryers.iterator();	  Iterator    <    Entry>    iter    =    iter.iterator();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
96	[BUG]  [BUGGY]  Entry  <  N,  V>  current  =(this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  Entry  <  N,  V>  current  =(this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	Entry  <  N,  V>  current  =(this.entries!=  null?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE);	  Entry    <    N,    V>    current    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
97	[BUG]  [BUGGY]  ((  OpenMapEntry)iter.next()).getLenfNorm();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getLInfNorm()  {  double  max  =  0;  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {      [BUGGY]  ((  OpenMapEntry)iter.next()).getLenfNorm();  [BUGGY]      iter.advance();  max  +=  iter.value();  }  return  max;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java	0.7071067811865475	502	502	2	replace	((  OpenMapEntry)iter.next()).getLenfNorm();	  ((    OpenMapEntry)iter.next()).getLInfNorm();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
