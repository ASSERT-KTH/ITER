projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iteratoriter=entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iterator<Entry>iter=entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).advance();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502doublemax=iter.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502iter.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502iter.advance();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502iter.remove();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502iter.setValue(0,iter.next());
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502iter.previous();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502doublevalue=iter.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).setValue(max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Entry<N,V>current=iter.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Entry<N,V>current=entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).getNorm();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).value();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).advance()+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Entry<N,V>current=entries.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Entry<N,V>current=entry.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Entry<N,V>current=entries.get(iter.next());
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502doublemax=iter.next()/DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502doublemax=iter.next()+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502doublemax=iter.next()-1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iteratoriter=this.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iteratoriter=current.entrySet().iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iteratoriter=current.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).setValue(value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).setValue(this.value);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).setValue(0,max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).setValue(getNorm());
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502iter.setValue(0,iter.next()-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502iter.setValue(0,iter.next()+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iterator<Entry>iter=this.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iterator<Entry>iter=iter.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iterator<Entry>iter=(entries!=null)?entries.iterator():null;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Entry<N,V>current=this.entries.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Entry<N,V>current=iter.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502doublevalue=iter.next()/DEFAULT_ZERO_TOLERANCE;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502doublevalue=iter.next()-max;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502doublevalue=iter.next()-1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Entry<N,V>current=iter.next()-1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iterator<Entry>iter=iter.iterator();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iteratoriter=iter.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502doublevalue=iter.next()+1;
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Entry<N,V>current=iter.getValue();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).getLInfNorm();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).setNorm(max);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).setValue(max+1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).setValue(newFloat(max));
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Entry<N,V>current=entryer.next();
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502Iterator<Entry>iter=(entries!=null?entries.iterator():0);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).setValue(max-1);
projects/Math77/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java502((OpenMapEntry)iter.next()).assertNorm();
