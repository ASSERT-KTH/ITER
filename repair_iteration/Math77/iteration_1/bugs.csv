bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.random();  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	sum  +=  Math.random();	sum  +=  Math.abs(a);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	13	2
2	[BUG]  [BUGGY]  sum  +=  Math.random();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.random();  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	sum  +=  Math.random();	sum  +=  Math.abs(a);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	13	2	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.rint(a);  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	sum  +=  Math.rint(a);	sum  +=  Math.abs(a);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	13	2
3	[BUG]  [BUGGY]  sum  +=  Math.rint(a);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.rint(a);  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	sum  +=  Math.rint(a);	sum  +=  Math.abs(a);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	13	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.pow(Math.random(),  a);  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	sum  +=  Math.pow(Math.random(),  a);	sum  +=  Math.abs(a);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	13	2
4	[BUG]  [BUGGY]  sum  +=  Math.pow(Math.random(),  a);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.pow(Math.random(),  a);  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	sum  +=  Math.pow(Math.random(),  a);	sum  +=  Math.abs(a);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	13	2	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	  	sum  +=  Math.abs(a);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	13	2
6	[BUG]  [BUGGY]    [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	  	sum  +=  Math.abs(a);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	13	2	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =  1;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	add	double  sum  =  1;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	1	2
12	[BUG]  [BUGGY]  double  sum  =  1;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =  1;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	double  sum  =  1;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	1	2	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =  1.0;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	add	double  sum  =  1.0;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	1	2
14	[BUG]  [BUGGY]  double  sum  =  1.0;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =  1.0;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	double  sum  =  1.0;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	1	2	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =  2;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	add	double  sum  =  2;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	1	2
15	[BUG]  [BUGGY]  double  sum  =  2;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =  2;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	double  sum  =  2;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	1	2	replace
15	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  sum  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	  	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  sum	1	None	replace
21	[BUG]  [BUGGY]  return  a;  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  a;  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  a;	return  sum;  	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
22	[BUG]  [BUGGY]  return  sum  *(a  -  sum);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  *(a  -  sum);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  sum  *(a  -  sum);	return  sum;  	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
23	[BUG]  [BUGGY]  return  sum  *(a  +  Math.rint(sum));  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  *(a  +  Math.rint(sum));  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  sum  *(a  +  Math.rint(sum));	return  sum;  	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
24	[BUG]  [BUGGY]  return  this.l1Norm;  [CE]  cannot  find  symbol  l1Norm  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  this.l1Norm;  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  this.l1Norm;	return  sum;  	non-compiled	[CE]  cannot  find  symbol  l1Norm	15	None	replace
25	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	  	return  sum;  	non-compiled	[CE]  missing  return  statement	15	None	replace
31	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    double[]  data  =  getDataItemCount();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    double[]  data  =  getDataItemCount();		non-compiled	[CE]  cannot  find  symbol	4	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	add	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	4	2
33	[BUG]  [BUGGY]    double[]  data  =  getDataRef();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	4	2	add
33	[BUG]  [BUGGY]    if(data!=  null)  {  for(double  a  :  data.length)  {  sum  =  Math.sqrt(data.length);  }  [CE]  ';'  expected  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for(double  a  :  data.length)  {  sum  =  Math.sqrt(data.length);  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    if(data!=  null)  {  for(double  a  :  data.length)  {  sum  =  Math.sqrt(data.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
34	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount()  /  2.0;  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    double[]  data  =  getDataItemCount()  /  2.0;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    double[]  data  =  getDataItemCount()  /  2.0;		non-compiled	[CE]  cannot  find  symbol	4	None	add
35	[BUG]  [BUGGY]    if(data!=  null)  {  for(double  a  :  data.length)  {  sum  =  Math.sqrt(data);  }  [CE]  ';'  expected  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for(double  a  :  data.length)  {  sum  =  Math.sqrt(data);  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    if(data!=  null)  {  for(double  a  :  data.length)  {  sum  =  Math.sqrt(data);  }		non-compiled	[CE]  ';'  expected	4	None	add
41	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  getDataItemCount();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  getDataItemCount();		non-compiled	[CE]  cannot  find  symbol	18	None	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	add	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	18	2
43	[BUG]  [BUGGY]    double[]  data  =  getDataRef();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	18	2	add
43	[BUG]  [BUGGY]    double[]  data  =  this.data.getLimit();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  this.data.getLimit();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  this.data.getLimit();		non-compiled	[CE]  cannot  find  symbol	18	None	add
44	[BUG]  [BUGGY]    double[]  data  =  this.data.getLength();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  this.data.getLength();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  this.data.getLength();		non-compiled	[CE]  cannot  find  symbol	18	None	add
45	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount()  /  2.0;  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  getDataItemCount()  /  2.0;  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  getDataItemCount()  /  2.0;		non-compiled	[CE]  cannot  find  symbol	18	None	add
52	[BUG]  [BUGGY]  sum  +=  a  *  NON_FITTING_POSITION;  [CE]  cannot  find  symbol  NON_FITTING_POSITION  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  a  *  NON_FITTING_POSITION;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	sum  +=  a  *  NON_FITTING_POSITION;	sum  +=  a  *  a;  	non-compiled	[CE]  cannot  find  symbol  NON_FITTING_POSITION	5	None	replace
53	[BUG]  [BUGGY]  sum  +=  data  *  a;  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  data  *  a;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	sum  +=  data  *  a;	sum  +=  a  *  a;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	5	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  a  /  a;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	add	sum  +=  a  /  a;	sum  +=  a  *  a;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	5	2
55	[BUG]  [BUGGY]  sum  +=  a  /  a;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  a  /  a;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	sum  +=  a  /  a;	sum  +=  a  *  a;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	5	2	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	add	  	sum  +=  a  *  a;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	5	2
56	[BUG]  [BUGGY]    [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	  	sum  +=  a  *  a;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	5	2	replace
61	[BUG]  [BUGGY]    sum  +=  DataUtilities.doubleValue(data,  a);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  DataUtilities.doubleValue(data,  a);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  DataUtilities.doubleValue(data,  a);		non-compiled	[CE]  cannot  find  symbol  a	8	None	add
62	[BUG]  [BUGGY]    sum  =  Math.sqrt(data[a]);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  =  Math.sqrt(data[a]);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  =  Math.sqrt(data[a]);		non-compiled	[CE]  cannot  find  symbol  a	8	None	add
63	[BUG]  [BUGGY]    sum  +=  DataUtilities.doubleValue(data);  [CE]  cannot  find  symbol  DataUtilities  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  DataUtilities.doubleValue(data);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  DataUtilities.doubleValue(data);		non-compiled	[CE]  cannot  find  symbol  DataUtilities	8	None	add
64	[BUG]  [BUGGY]    sum  =  Math.sqrt(data,  a);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  =  Math.sqrt(data,  a);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  =  Math.sqrt(data,  a);		non-compiled	[CE]  cannot  find  symbol  a	8	None	add
65	[BUG]  [BUGGY]    sum  +=  DataUtilities.getNorm(a);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  DataUtilities.getNorm(a);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  DataUtilities.getNorm(a);		non-compiled	[CE]  cannot  find  symbol  a	8	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.sqrt(a);  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	    sum  +=  Math.sqrt(a);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	14	2
72	[BUG]  [BUGGY]    sum  +=  Math.sqrt(a);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.sqrt(a);  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	    sum  +=  Math.sqrt(a);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	14	2	add
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  -=  Math.random();  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	    sum  -=  Math.random();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	14	2
75	[BUG]  [BUGGY]    sum  -=  Math.random();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  -=  Math.random();  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	    sum  -=  Math.random();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	14	2	add
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  =  Math.random();  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	    sum  =  Math.random();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	14	2
76	[BUG]  [BUGGY]    sum  =  Math.random();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  =  Math.random();  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	    sum  =  Math.random();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	14	2	add
81	[BUG]  [BUGGY]  for(double  a  :  data.length)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  for(double  a  :  data.length)  {  [BUGGY]  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  data.length)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	19	None	replace
82	[BUG]  [BUGGY]  for(double  a  :  0)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  for(double  a  :  0)  {  [BUGGY]  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  0)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	19	None	replace
83	[BUG]  [BUGGY]  for(double  a  :  1)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  for(double  a  :  1)  {  [BUGGY]  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  1)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	19	None	replace
85	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    [BUGGY]  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	  	for  (double  a  :  data)  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
91	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    double[]  data  =  getDataItemCount();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    double[]  data  =  getDataItemCount();		non-compiled	[CE]  cannot  find  symbol	12	None	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	add	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	12	2
93	[BUG]  [BUGGY]    double[]  data  =  getDataRef();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	12	2	add
93	[BUG]  [BUGGY]    double[]  data  =  this.data.get(0);  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    double[]  data  =  this.data.get(0);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    double[]  data  =  this.data.get(0);		non-compiled	[CE]  cannot  find  symbol	12	None	add
94	[BUG]  [BUGGY]    double[]  data  =  getDataRef().toL1();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    double[]  data  =  getDataRef().toL1();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    double[]  data  =  getDataRef().toL1();		non-compiled	[CE]  cannot  find  symbol	12	None	add
95	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount()  /  2.0;  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    double[]  data  =  getDataItemCount()  /  2.0;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    double[]  data  =  getDataItemCount()  /  2.0;		non-compiled	[CE]  cannot  find  symbol	12	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  1;  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	add	double  max  =  1;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	17	2
102	[BUG]  [BUGGY]  double  max  =  1;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  1;  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	double  max  =  1;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	17	2	replace
103	[BUG]  [BUGGY]  double  max  =(data  <  null)?  0  :  data.length;  [CE]  bad  operand  types  for  binary  operator  '<'  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(data  <  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	double  max  =(data  <  null)?  0  :  data.length;	double  max  =  0;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	17	None	replace
104	[BUG]  [BUGGY]  double  max  =  Math.max(data,  0);  [CE]  no  suitable  method  found  for  max(double[],int)  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =  Math.max(data,  0);  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	double  max  =  Math.max(data,  0);	double  max  =  0;  	non-compiled	[CE]  no  suitable  method  found  for  max(double[],int)	17	None	replace
111	[BUG]  [BUGGY]    sum  +=  Math.sqrt(a);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  +=  Math.sqrt(a);  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  +=  Math.sqrt(a);		non-compiled	[CE]  cannot  find  symbol  a	16	None	add
112	[BUG]  [BUGGY]    sum  -=  Math.sqrt(a);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  -=  Math.sqrt(a);  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  -=  Math.sqrt(a);		non-compiled	[CE]  cannot  find  symbol  a	16	None	add
113	[BUG]  [BUGGY]    sum  +=  Math.rint(a);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  +=  Math.rint(a);  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  +=  Math.rint(a);		non-compiled	[CE]  cannot  find  symbol  a	16	None	add
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  +=  Math.random();  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	add	    sum  +=  Math.random();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	16	2
115	[BUG]  [BUGGY]    sum  +=  Math.random();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  +=  Math.random();  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  +=  Math.random();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	16	2	add
115	[BUG]  [BUGGY]    sum  -=  Math.sqrt(data);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  -=  Math.sqrt(data);  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  -=  Math.sqrt(data);		non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	16	None	add
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.sqrt(a);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	add	    sum  +=  Math.sqrt(a);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	6	2
122	[BUG]  [BUGGY]    sum  +=  Math.sqrt(a);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.sqrt(a);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  Math.sqrt(a);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	6	2	add
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  -=  Math.sqrt(a);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	add	    sum  -=  Math.sqrt(a);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	6	2
123	[BUG]  [BUGGY]    sum  -=  Math.sqrt(a);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  -=  Math.sqrt(a);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  -=  Math.sqrt(a);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	6	2	add
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  =  Math.sqrt(a);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	add	    sum  =  Math.sqrt(a);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	6	2
124	[BUG]  [BUGGY]    sum  =  Math.sqrt(a);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  =  Math.sqrt(a);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  =  Math.sqrt(a);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	6	2	add
124	[BUG]  [BUGGY]    sum  -=  Math.sqrt(data);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  -=  Math.sqrt(data);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  -=  Math.sqrt(data);		non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	6	None	add
125	[BUG]  [BUGGY]    sum  +=  Math.sqrt(data);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.sqrt(data);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  Math.sqrt(data);		non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	6	None	add
131	[BUG]  [BUGGY]    double[]  data  =  this.data.getNorm();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double[]  data  =  this.data.getNorm();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double[]  data  =  this.data.getNorm();		non-compiled	[CE]  cannot  find  symbol	2	None	add
132	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double[]  data  =  getDataItemCount();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double[]  data  =  getDataItemCount();		non-compiled	[CE]  cannot  find  symbol	2	None	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	add	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	2	2
134	[BUG]  [BUGGY]    double[]  data  =  getDataRef();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	2	2	add
134	[BUG]  [BUGGY]    double[]  data  =  this.data.getNorm();  if(data!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double[]  data  =  this.data.getNorm();  if(data!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double[]  data  =  this.data.getNorm();  if(data!=  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  cannot  find  symbol	2	None	add
135	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount()  /  2.0;  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double[]  data  =  getDataItemCount()  /  2.0;  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double[]  data  =  getDataItemCount()  /  2.0;		non-compiled	[CE]  cannot  find  symbol	2	None	add
141	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  getDataItemCount();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =  getDataItemCount();		non-compiled	[CE]  cannot  find  symbol	20	None	add
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	add	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	20	2
143	[BUG]  [BUGGY]    double[]  data  =  getDataRef();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	20	2	add
143	[BUG]  [BUGGY]    double[]  data  =  this.data.getLength();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  this.data.getLength();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =  this.data.getLength();		non-compiled	[CE]  cannot  find  symbol	20	None	add
144	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount()  /  2.0;  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  getDataItemCount()  /  2.0;  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =  getDataItemCount()  /  2.0;		non-compiled	[CE]  cannot  find  symbol	20	None	add
145	[BUG]  [BUGGY]    double[]  data  =  getDataRef().values();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  getDataRef().values();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =  getDataRef().values();		non-compiled	[CE]  cannot  find  symbol	20	None	add
151	[BUG]  [BUGGY]  return  Math.sqrt(a);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(a);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(a);	return  Math.sqrt(sum);  	non-compiled	[CE]  cannot  find  symbol  a	7	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.rint(sum);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	add	return  Math.rint(sum);	return  Math.sqrt(sum);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	7	2
153	[BUG]  [BUGGY]  return  Math.rint(sum);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.rint(sum);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.rint(sum);	return  Math.sqrt(sum);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	7	2	replace
153	[BUG]  [BUGGY]  return  Math.sin(a);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sin(a);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sin(a);	return  Math.sqrt(sum);  	non-compiled	[CE]  cannot  find  symbol  a	7	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.random();  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	add	return  Math.random();	return  Math.sqrt(sum);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	7	2
155	[BUG]  [BUGGY]  return  Math.random();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.random();  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.random();	return  Math.sqrt(sum);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	7	2	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]  double  sum  =  1;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	add	double  sum  =  1;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	9	2
162	[BUG]  [BUGGY]  double  sum  =  1;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]  double  sum  =  1;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	double  sum  =  1;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	9	2	replace
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]  double  sum  =(data!=  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	add	double  sum  =(data!=  null)?  0  :  data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	9	2
164	[BUG]  [BUGGY]  double  sum  =(data!=  null)?  0  :  data.length;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]  double  sum  =(data!=  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	double  sum  =(data!=  null)?  0  :  data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	9	2	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	add	double  sum  =(data  ==  null)?  0  :  data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	9	2
165	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data.length;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	double  sum  =(data  ==  null)?  0  :  data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	9	2	replace
165	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  sum  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	  	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  sum	9	None	replace
171	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  getDataItemCount();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double[]  data  =  getDataItemCount();		non-compiled	[CE]  cannot  find  symbol	10	None	add
172	[BUG]  [BUGGY]    double[]  data  =  this.data.getL1();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  this.data.getL1();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double[]  data  =  this.data.getL1();		non-compiled	[CE]  cannot  find  symbol	10	None	add
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	add	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	10	2
174	[BUG]  [BUGGY]    double[]  data  =  getDataRef();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  getDataRef();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double[]  data  =  getDataRef();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	10	2	add
174	[BUG]  [BUGGY]    double[]  data  =  getDataRef().getL1Norm();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  getDataRef().getL1Norm();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double[]  data  =  getDataRef().getL1Norm();		non-compiled	[CE]  cannot  find  symbol	10	None	add
175	[BUG]  [BUGGY]    double[]  data  =  this.data.getL1Norm();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  this.data.getL1Norm();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double[]  data  =  this.data.getL1Norm();		non-compiled	[CE]  cannot  find  symbol	10	None	add
181	[BUG]  [BUGGY]  for(double  a  :  data.length)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  data.length)  {  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	for(double  a  :  data.length)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	3	None	replace
182	[BUG]  [BUGGY]  for(double  a  :  0)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  0)  {  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	for(double  a  :  0)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	3	None	replace
183	[BUG]  [BUGGY]  for(double  a  =  data.length)  {  [CE]  ';'  expected  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]  for(double  a  =  data.length)  {  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	for(double  a  =  data.length)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  ';'  expected	3	None	replace
184	[BUG]  [BUGGY]  for(double  a  :  v)  {  [CE]  cannot  find  symbol  v  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  v)  {  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	for(double  a  :  v)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  cannot  find  symbol  v	3	None	replace
191	[BUG]  [BUGGY]  for(double  a  :  data.length)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  data.length)  {  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	for(double  a  :  data.length)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	11	None	replace
192	[BUG]  [BUGGY]  for(double  a  :  0)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  0)  {  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	for(double  a  :  0)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	11	None	replace
193	[BUG]  [BUGGY]  for(double  a  :  1)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  1)  {  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	for(double  a  :  1)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	11	None	replace
194	[BUG]  [BUGGY]  for(double  a  =  data.length)  {  [CE]  ';'  expected  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]  for(double  a  =  data.length)  {  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	for(double  a  =  data.length)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  ';'  expected	11	None	replace
3	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(-a));  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  +=  Math.pow(Math.exp(-a));  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  +=  Math.pow(Math.exp(-a));		non-compiled	[CE]  cannot  find  symbol  a	16	None	add
4	[BUG]  [BUGGY]    sum  -=  Math.pow(Math.exp(a));  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  -=  Math.pow(Math.exp(a));  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  -=  Math.pow(Math.exp(a));		non-compiled	[CE]  cannot  find  symbol  a	16	None	add
5	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(a));  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  +=  Math.pow(Math.exp(a));  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  +=  Math.pow(Math.exp(a));		non-compiled	[CE]  cannot  find  symbol  a	16	None	add
22	[BUG]  [BUGGY]    double[]  data  =  getDataItem();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  getDataItem();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =  getDataItem();		non-compiled	[CE]  cannot  find  symbol	20	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  this.getData();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	add	    double[]  data  =  this.getData();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	20	2
24	[BUG]  [BUGGY]    double[]  data  =  this.getData();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  this.getData();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =  this.getData();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	20	2	add
24	[BUG]  [BUGGY]    double[]  data  =  getNonField().getDataItemCount();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  getNonField().getDataItemCount();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =  getNonField().getDataItemCount();		non-compiled	[CE]  cannot  find  symbol	20	None	add
25	[BUG]  [BUGGY]    double[]  data  =  getDataItem(getLength());  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  getDataItem(getLength());  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =  getDataItem(getLength());		non-compiled	[CE]  cannot  find  symbol	20	None	add
41	[BUG]  [BUGGY]    sum  +=  Math.max(a  /  getL1Norm());  [CE]  no  suitable  method  found  for  max(double)  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.max(a  /  getL1Norm());  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	    sum  +=  Math.max(a  /  getL1Norm());		non-compiled	[CE]  no  suitable  method  found  for  max(double)	14	None	add
43	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  getL1Norm());  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  getL1Norm());  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	    sum  +=  Math.pow(Math.exp(a)/  getL1Norm());		non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	14	None	add
44	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.max(a  /  getL1Norm()));  [CE]  no  suitable  method  found  for  max(double)  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.pow(Math.max(a  /  getL1Norm()));  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	    sum  +=  Math.pow(Math.max(a  /  getL1Norm()));		non-compiled	[CE]  no  suitable  method  found  for  max(double)	14	None	add
45	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.log(a)/  getL1Norm());  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.pow(Math.log(a)/  getL1Norm());  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	    sum  +=  Math.pow(Math.log(a)/  getL1Norm());		non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	14	None	add
61	[BUG]  [BUGGY]  return  sum  /  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [CE]  bad  operand  types  for  binary  operator  '/'  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  /  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  sum  /  NON_FITTING_POSITION_AND_SIZE_MESSAGE;	return  sum;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	15	None	replace
62	[BUG]  [BUGGY]  [FE]  StackOverflowError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  /  getL1Norm();  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	add	return  sum  /  getL1Norm();	return  sum;  	compilable	  [FE]  StackOverflowError  testBasicFunctions	15	2
63	[BUG]  [BUGGY]  return  sum  /  getL1Norm();  [FE]  StackOverflowError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  /  getL1Norm();  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  sum  /  getL1Norm();	return  sum;  	compilable	  [FE]  StackOverflowError  testBasicFunctions	15	2	replace
63	[BUG]  [BUGGY]  return  sum  /  NON_FITTING_POSITION_AND_SIZE;  [CE]  cannot  find  symbol  NON_FITTING_POSITION_AND_SIZE  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  /  NON_FITTING_POSITION_AND_SIZE;  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  sum  /  NON_FITTING_POSITION_AND_SIZE;	return  sum;  	non-compiled	[CE]  cannot  find  symbol  NON_FITTING_POSITION_AND_SIZE	15	None	replace
64	[BUG]  [BUGGY]  return  sum  /(a  *  getL1Norm());  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  /(a  *  getL1Norm());  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  sum  /(a  *  getL1Norm());	return  sum;  	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(data  ==  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	add	double  max  =(data  ==  null)?  0  :  data.length;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	17	2
82	[BUG]  [BUGGY]  double  max  =(data  ==  null)?  0  :  data.length;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(data  ==  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	double  max  =(data  ==  null)?  0  :  data.length;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	17	2	replace
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(data!=  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	add	double  max  =(data!=  null)?  0  :  data.length;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	17	2
83	[BUG]  [BUGGY]  double  max  =(data!=  null)?  0  :  data.length;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(data!=  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	double  max  =(data!=  null)?  0  :  data.length;	double  max  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	17	2	replace
83	[BUG]  [BUGGY]  double  max  =(data  ==  null)?  0  :  DataUtilities.getLInfNorm(data);  [CE]  cannot  find  symbol  DataUtilities  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(data  ==  null)?  0  :  DataUtilities.getLInfNorm(data);  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	double  max  =(data  ==  null)?  0  :  DataUtilities.getLInfNorm(data);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtilities	17	None	replace
84	[BUG]  [BUGGY]  double  max  =(data  ==  null)?  0  :  DataUtilities.getLenientMaximum(data.length);  [CE]  cannot  find  symbol  DataUtilities  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]  double  max  =(data  ==  null)?  0  :  DataUtilities.getLenientMaximum(data.length);  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	double  max  =(data  ==  null)?  0  :  DataUtilities.getLenientMaximum(data.length);	double  max  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtilities	17	None	replace
102	[BUG]  [BUGGY]  for(double  a  :  getNonVector())  {  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  getNonVector())  {  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	for(double  a  :  getNonVector())  {	for  (double  a  :  data)  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
103	[BUG]  [BUGGY]  for(double  a  :  getNonConstructors())  {  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  getNonConstructors())  {  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	for(double  a  :  getNonConstructors())  {	for  (double  a  :  data)  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  this.data)  {  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	add	for(double  a  :  this.data)  {	for  (double  a  :  data)  {  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	11	2
105	[BUG]  [BUGGY]  for(double  a  :  this.data)  {  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  this.data)  {  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	for(double  a  :  this.data)  {	for  (double  a  :  data)  {  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	11	2	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    Arrays.sort(this.data);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	add	    Arrays.sort(this.data);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	10	2
122	[BUG]  [BUGGY]    Arrays.sort(this.data);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    Arrays.sort(this.data);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    Arrays.sort(this.data);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	10	2	add
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  this.getData();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	add	    double[]  data  =  this.getData();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	10	2
123	[BUG]  [BUGGY]    double[]  data  =  this.getData();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  this.getData();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double[]  data  =  this.getData();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	10	2	add
123	[BUG]  [BUGGY]    double[]  data  =  getNonArray();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  getNonArray();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double[]  data  =  getNonArray();		non-compiled	[CE]  cannot  find  symbol	10	None	add
124	[BUG]  [BUGGY]    double[]  data  =  getDataItem();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  getDataItem();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double[]  data  =  getDataItem();		non-compiled	[CE]  cannot  find  symbol	10	None	add
125	[BUG]  [BUGGY]    double[]  data  =  getNonConstructors();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double[]  data  =  getNonConstructors();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double[]  data  =  getNonConstructors();		non-compiled	[CE]  cannot  find  symbol	10	None	add
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    Arrays.sort(this.data);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	add	    Arrays.sort(this.data);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	2	2
142	[BUG]  [BUGGY]    Arrays.sort(this.data);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    Arrays.sort(this.data);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    Arrays.sort(this.data);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	2	2	add
142	[BUG]  [BUGGY]    Validate.notNull(data);  [CE]  cannot  find  symbol  Validate  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    Validate.notNull(data);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    Validate.notNull(data);		non-compiled	[CE]  cannot  find  symbol  Validate	2	None	add
143	[BUG]  [BUGGY]    double[]  data  =  getNorm();  [CE]  incompatible  types  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double[]  data  =  getNorm();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double[]  data  =  getNorm();		non-compiled	[CE]  incompatible  types	2	None	add
144	[BUG]  [BUGGY]    Validate.isTrue(data!=  null);  [CE]  cannot  find  symbol  Validate  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    Validate.isTrue(data!=  null);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    Validate.isTrue(data!=  null);		non-compiled	[CE]  cannot  find  symbol  Validate	2	None	add
145	[BUG]  [BUGGY]    Validate.isTrue(data  ==  null);  [CE]  cannot  find  symbol  Validate  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    Validate.isTrue(data  ==  null);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    Validate.isTrue(data  ==  null);		non-compiled	[CE]  cannot  find  symbol  Validate	2	None	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  this.data)  {  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	add	for(double  a  :  this.data)  {	for  (double  a  :  data)  {  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	3	2
163	[BUG]  [BUGGY]  for(double  a  :  this.data)  {  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  this.data)  {  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	for(double  a  :  this.data)  {	for  (double  a  :  data)  {  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	3	2	replace
163	[BUG]  [BUGGY]  for(double  a  :  getNorm())  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  getNorm())  {  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	for(double  a  :  getNorm())  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	3	None	replace
164	[BUG]  [BUGGY]  for(double  a  :  sum)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  sum)  {  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	for(double  a  :  sum)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	3	None	replace
181	[BUG]  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtil.doubleValue(data);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtil.doubleValue(data);  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtil.doubleValue(data);  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
182	[BUG]  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  data[d];  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  data[d];  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  data[d];  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
183	[BUG]  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtilities.doubleValue(data);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtilities.doubleValue(data);  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtilities.doubleValue(data);  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
184	[BUG]  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtil.doubleValue(data[0],  data[1]);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtil.doubleValue(data[0],  data[1]);  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtil.doubleValue(data[0],  data[1]);  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
185	[BUG]  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtil.doubleValue(data,  data.length);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtil.doubleValue(data,  data.length);  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtil.doubleValue(data,  data.length);  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
201	[BUG]  [BUGGY]    double[]  data  =  getNonFixedMessage();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  getNonFixedMessage();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  getNonFixedMessage();		non-compiled	[CE]  cannot  find  symbol	18	None	add
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  this.getData();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	add	    double[]  data  =  this.getData();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	18	2
203	[BUG]  [BUGGY]    double[]  data  =  this.getData();  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  this.getData();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  this.getData();		compilable	  [FE]  AssertionFailedError  testBasicFunctions	18	2	add
203	[BUG]  [BUGGY]    double  data  =  getLinfNorm();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double  data  =  getLinfNorm();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double  data  =  getLinfNorm();		non-compiled	[CE]  cannot  find  symbol	18	None	add
204	[BUG]  [BUGGY]    double[]  data  =  getNonFieldValues();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  getNonFieldValues();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  getNonFieldValues();		non-compiled	[CE]  cannot  find  symbol	18	None	add
205	[BUG]  [BUGGY]    double[]  data  =  getDataItem();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  getDataItem();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  getDataItem();		non-compiled	[CE]  cannot  find  symbol	18	None	add
221	[BUG]  [BUGGY]  [FE]  StackOverflowError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  /  getNorm());  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	add	return  Math.sqrt(sum  /  getNorm());	return  Math.sqrt(sum);  	compilable	  [FE]  StackOverflowError  testBasicFunctions	7	2
222	[BUG]  [BUGGY]  return  Math.sqrt(sum  /  getNorm());  [FE]  StackOverflowError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  /  getNorm());  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  /  getNorm());	return  Math.sqrt(sum);  	compilable	  [FE]  StackOverflowError  testBasicFunctions	7	2	replace
222	[BUG]  [BUGGY]  return  Math.sqrt(sum  /(data  *  getNorm()));  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  /(data  *  getNorm()));  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  /(data  *  getNorm()));	return  Math.sqrt(sum);  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	7	None	replace
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  /  10);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	add	return  Math.sqrt(sum  /  10);	return  Math.sqrt(sum);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	7	2
224	[BUG]  [BUGGY]  return  Math.sqrt(sum  /  10);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  /  10);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  /  10);	return  Math.sqrt(sum);  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	7	2	replace
224	[BUG]  [BUGGY]  return  Math.sqrt(sum  /(a  -  data.length));  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  /(a  -  data.length));  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  /(a  -  data.length));	return  Math.sqrt(sum);  	non-compiled	[CE]  cannot  find  symbol  a	7	None	replace
241	[BUG]  [BUGGY]  sum  +=  a  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  a  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	sum  +=  a  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;	sum  +=  a  *  a;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	5	None	replace
242	[BUG]  [BUGGY]  sum  +=  a  *  this.data;  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  a  *  this.data;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	sum  +=  a  *  this.data;	sum  +=  a  *  a;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	5	None	replace
243	[BUG]  [BUGGY]  sum  +=  a  *  NON_FITTING_POSITION_AND_SIZE;  [CE]  cannot  find  symbol  NON_FITTING_POSITION_AND_SIZE  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  a  *  NON_FITTING_POSITION_AND_SIZE;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	sum  +=  a  *  NON_FITTING_POSITION_AND_SIZE;	sum  +=  a  *  a;  	non-compiled	[CE]  cannot  find  symbol  NON_FITTING_POSITION_AND_SIZE	5	None	replace
262	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]  double  sum  =  0L;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	add	double  sum  =  0L;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	9	2
263	[BUG]  [BUGGY]  double  sum  =  0L;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]  double  sum  =  0L;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	double  sum  =  0L;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	9	2	replace
264	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtil.doubleValue(getL1());  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtil.doubleValue(getL1());  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	double  sum  =(data  ==  null)?  0  :  DataUtil.doubleValue(getL1());	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
282	[BUG]  [BUGGY]  sum  +=  Math.max(a,  Math.abs(data));  [CE]  no  suitable  method  found  for  abs(double[])  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.max(a,  Math.abs(data));  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	sum  +=  Math.max(a,  Math.abs(data));	sum  +=  Math.abs(a);  	non-compiled	[CE]  no  suitable  method  found  for  abs(double[])	13	None	replace
283	[BUG]  [BUGGY]  [FE]  StackOverflowError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.abs(a  -  getL1Norm());  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	sum  +=  Math.abs(a  -  getL1Norm());	sum  +=  Math.abs(a);  	compilable	  [FE]  StackOverflowError  testBasicFunctions	13	2
284	[BUG]  [BUGGY]  sum  +=  Math.abs(a  -  getL1Norm());  [FE]  StackOverflowError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.abs(a  -  getL1Norm());  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	sum  +=  Math.abs(a  -  getL1Norm());	sum  +=  Math.abs(a);  	compilable	  [FE]  StackOverflowError  testBasicFunctions	13	2	replace
284	[BUG]  [BUGGY]  sum  +=  Math.abs(a)>  Math.abs(v1);  [CE]  cannot  find  symbol  v1  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.abs(a)>  Math.abs(v1);  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	sum  +=  Math.abs(a)>  Math.abs(v1);	sum  +=  Math.abs(a);  	non-compiled	[CE]  cannot  find  symbol  v1	13	None	replace
301	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);		non-compiled	[CE]  cannot  find  symbol  a	8	None	add
302	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.log(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  Math.pow(Math.log(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  Math.pow(Math.log(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);		non-compiled	[CE]  cannot  find  symbol  a	8	None	add
303	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(-a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  Math.pow(Math.exp(-a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  Math.pow(Math.exp(-a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);		non-compiled	[CE]  cannot  find  symbol  a	8	None	add
304	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE);		non-compiled	[CE]  cannot  find  symbol  a	8	None	add
305	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_SIZE_MESSAGE);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_SIZE_MESSAGE);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_SIZE_MESSAGE);		non-compiled	[CE]  cannot  find  symbol  a	8	None	add
321	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  bad  operand  types  for  binary  operator  '/'  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);		non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	6	None	add
322	[BUG]  [BUGGY]    sum  +=  Math.pow(data,  a);  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.pow(data,  a);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  Math.pow(data,  a);		non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	6	None	add
323	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE);  [CE]  cannot  find  symbol  NON_FITTING_POSITION_AND_SIZE  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE);		non-compiled	[CE]  cannot  find  symbol  NON_FITTING_POSITION_AND_SIZE	6	None	add
324	[BUG]  [BUGGY]    sum  +=  Math.max(a  /  getNorm());  [CE]  no  suitable  method  found  for  max(double)  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.max(a  /  getNorm());  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  Math.max(a  /  getNorm());		non-compiled	[CE]  no  suitable  method  found  for  max(double)	6	None	add
325	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE,  data);  [CE]  bad  operand  types  for  binary  operator  '/'  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE,  data);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  Math.pow(Math.exp(a)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE,  data);		non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	6	None	add
341	[BUG]  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  Math.sqrt(d);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  Math.sqrt(d);  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  Math.sqrt(d);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
342	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    Arrays.sort(this.data);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	add	    Arrays.sort(this.data);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	12	2
343	[BUG]  [BUGGY]    Arrays.sort(this.data);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    Arrays.sort(this.data);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    Arrays.sort(this.data);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	12	2	add
343	[BUG]  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  Math.max(d);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  Math.max(d);  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  Math.max(d);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
344	[BUG]  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtilities.getL1Norm(d);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtilities.getL1Norm(d);  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  DataUtilities.getL1Norm(d);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
345	[BUG]  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  Math.sqrt(D.toString());  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  Math.sqrt(D.toString());  }  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    if(data!=  null)  {  for([]  d  =  getDataItemCount();  d  <  0;)  {  sum  +=  Math.sqrt(D.toString());  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	add	double  sum  =(data  ==  null)?  0  :  data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	1	2
362	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data.length;  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  data.length;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	double  sum  =(data  ==  null)?  0  :  data.length;	double  sum  =  0;  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	1	2	replace
362	[BUG]  [BUGGY]  double  sum  =  0  /(data  ==  null?  data.length  -  1):  0;  [CE]  :  expected  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =  0  /(data  ==  null?  data.length  -  1):  0;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	double  sum  =  0  /(data  ==  null?  data.length  -  1):  0;	double  sum  =  0;  	non-compiled	[CE]  :  expected	1	None	replace
364	[BUG]  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtilities.doubleValue(getNorm());  [CE]  cannot  find  symbol  DataUtilities  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =(data  ==  null)?  0  :  DataUtilities.doubleValue(getNorm());  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	double  sum  =(data  ==  null)?  0  :  DataUtilities.doubleValue(getNorm());	double  sum  =  0;  	non-compiled	[CE]  cannot  find  symbol  DataUtilities	1	None	replace
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  for(double  a  :  this.data)  {  [BUGGY]  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	add	for(double  a  :  this.data)  {	for  (double  a  :  data)  {  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	19	2
383	[BUG]  [BUGGY]  for(double  a  :  this.data)  {  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  for(double  a  :  this.data)  {  [BUGGY]  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  this.data)  {	for  (double  a  :  data)  {  	compilable	  [FE]  AssertionFailedError  testBasicFunctions	19	2	replace
383	[BUG]  [BUGGY]  for(double  a  :  getNonFixedMessage())  {  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  for(double  a  :  getNonFixedMessage())  {  [BUGGY]  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  getNonFixedMessage())  {	for  (double  a  :  data)  {  	non-compiled	[CE]  cannot  find  symbol	19	None	replace
384	[BUG]  [BUGGY]  for(double  a  :  getNonFields())  {  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  for(double  a  :  getNonFields())  {  [BUGGY]  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  getNonFields())  {	for  (double  a  :  data)  {  	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1	[BUG]  [BUGGY]  return  Math.sqrt(sum  /  Math.sqrt(a));  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  /  Math.sqrt(a));  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  /  Math.sqrt(a));	return  Math.sqrt(sum);  	non-compiled	[CE]  cannot  find  symbol  a	7	None	replace
2	[BUG]  [BUGGY]  return  Math.sqrt(sum  /  Math.sqrt(a))?  Math.sqrt(data):  sum;  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  /  Math.sqrt(a))?  Math.sqrt(data):  sum;  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  /  Math.sqrt(a))?  Math.sqrt(data):  sum;	return  Math.sqrt(sum);  	non-compiled	[CE]  cannot  find  symbol  a	7	None	replace
3	[BUG]  [BUGGY]  return  Math.sqrt(sum  /  Math.sqrt(a))?  Math.sqrt(data):  Math.sqrt(sum);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  /  Math.sqrt(a))?  Math.sqrt(data):  Math.sqrt(sum);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  /  Math.sqrt(a))?  Math.sqrt(data):  Math.sqrt(sum);	return  Math.sqrt(sum);  	non-compiled	[CE]  cannot  find  symbol  a	7	None	replace
4	[BUG]  [BUGGY]  return  Math.sqrt(sum  /  Math.sqrt(data));  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]  return  Math.sqrt(sum  /  Math.sqrt(data));  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	return  Math.sqrt(sum  /  Math.sqrt(data));	return  Math.sqrt(sum);  	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	7	None	replace
31	[BUG]  [BUGGY]  return  sum  /(a  *  Math.sqrt(data))  /  2.0;  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  /(a  *  Math.sqrt(data))  /  2.0;  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  sum  /(a  *  Math.sqrt(data))  /  2.0;	return  sum;  	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
32	[BUG]  [BUGGY]  return  sum  /  Math.sqrt(a);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  /  Math.sqrt(a);  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  sum  /  Math.sqrt(a);	return  sum;  	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
33	[BUG]  [BUGGY]  return  sum  /(a  *  Math.sqrt(data)*  getL1Norm()));  [CE]  ';'  expected  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  /(a  *  Math.sqrt(data)*  getL1Norm()));  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  sum  /(a  *  Math.sqrt(data)*  getL1Norm()));	return  sum;  	non-compiled	[CE]  ';'  expected	15	None	replace
34	[BUG]  [BUGGY]  return  sum  /(a  *  Math.pow(Math.standard()));  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]  return  sum  /(a  *  Math.pow(Math.standard()));  [BUGGY]  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	return  sum  /(a  *  Math.pow(Math.standard()));	return  sum;  	non-compiled	[CE]  cannot  find  symbol  a	15	None	replace
61	[BUG]  [BUGGY]    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE;		non-compiled	[CE]  cannot  find  symbol  a	4	None	add
62	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(-data)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  bad  operand  type  double[]  for  unary  operator  '-'  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    sum  +=  Math.pow(Math.exp(-data)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    sum  +=  Math.pow(Math.exp(-data)/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);		non-compiled	[CE]  bad  operand  type  double[]  for  unary  operator  '-'	4	None	add
63	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(-data)*  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  bad  operand  type  double[]  for  unary  operator  '-'  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    sum  +=  Math.pow(Math.exp(-data)*  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    sum  +=  Math.pow(Math.exp(-data)*  NON_FITTING_POSITION_AND_SIZE_MESSAGE);		non-compiled	[CE]  bad  operand  type  double[]  for  unary  operator  '-'	4	None	add
64	[BUG]  [BUGGY]    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  ';'  expected  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);		non-compiled	[CE]  ';'  expected	4	None	add
65	[BUG]  [BUGGY]    sum  +=  Math.pow(Math.exp(-data)*  NON_FITTING_POSITION_AND_SIZE);  [CE]  bad  operand  type  double[]  for  unary  operator  '-'  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]    sum  +=  Math.pow(Math.exp(-data)*  NON_FITTING_POSITION_AND_SIZE);  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	    sum  +=  Math.pow(Math.exp(-data)*  NON_FITTING_POSITION_AND_SIZE);		non-compiled	[CE]  bad  operand  type  double[]  for  unary  operator  '-'	4	None	add
91	[BUG]  [BUGGY]    double  out  =  getDataItemCount();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double  out  =  getDataItemCount();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double  out  =  getDataItemCount();		non-compiled	[CE]  cannot  find  symbol	20	None	add
92	[BUG]  [BUGGY]    double[]  data  =(double[])getDataItemCount();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =(double[])getDataItemCount();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =(double[])getDataItemCount();		non-compiled	[CE]  cannot  find  symbol	20	None	add
93	[BUG]  [BUGGY]    double  out  =  getImplicitReturn();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double  out  =  getImplicitReturn();  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double  out  =  getImplicitReturn();		non-compiled	[CE]  cannot  find  symbol	20	None	add
95	[BUG]  [BUGGY]    double[]  data  =  getDataItem(data);  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]    double[]  data  =  getDataItem(data);  [BUGGY]  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	    double[]  data  =  getDataItem(data);		non-compiled	[CE]  cannot  find  symbol	20	None	add
122	[BUG]  [BUGGY]    sum  +=  DataUtilities.getL1Norm(a);  [CE]  cannot  find  symbol  DataUtilities  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  DataUtilities.getL1Norm(a);  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	    sum  +=  DataUtilities.getL1Norm(a);		non-compiled	[CE]  cannot  find  symbol  DataUtilities	14	None	add
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  -=  Math.sqrt(a);  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	    sum  -=  Math.sqrt(a);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	14	2
124	[BUG]  [BUGGY]    sum  -=  Math.sqrt(a);  [FE]  AssertionFailedError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  -=  Math.sqrt(a);  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	    sum  -=  Math.sqrt(a);		compilable	  [FE]  AssertionFailedError  testBasicFunctions	14	2	add
125	[BUG]  [BUGGY]  [FE]  StackOverflowError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.sqrt((  a  /  getL1Norm())*  data.length);  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	add	    sum  +=  Math.sqrt((  a  /  getL1Norm())*  data.length);		compilable	  [FE]  StackOverflowError  testBasicFunctions	14	2
126	[BUG]  [BUGGY]    sum  +=  Math.sqrt((  a  /  getL1Norm())*  data.length);  [FE]  StackOverflowError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.sqrt((  a  /  getL1Norm())*  data.length);  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	    sum  +=  Math.sqrt((  a  /  getL1Norm())*  data.length);		compilable	  [FE]  StackOverflowError  testBasicFunctions	14	2	add
151	[BUG]  [BUGGY]    double  out  =  getNonConstructors().doubleValue();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    double  out  =  getNonConstructors().doubleValue();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    double  out  =  getNonConstructors().doubleValue();		non-compiled	[CE]  cannot  find  symbol	12	None	add
152	[BUG]  [BUGGY]    sum  +=  Math.sqrt(getL1());  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    sum  +=  Math.sqrt(getL1());  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    sum  +=  Math.sqrt(getL1());		non-compiled	[CE]  cannot  find  symbol	12	None	add
153	[BUG]  [BUGGY]    double  out  =  data.length  *  getL1();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    double  out  =  data.length  *  getL1();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    double  out  =  data.length  *  getL1();		non-compiled	[CE]  cannot  find  symbol	12	None	add
154	[BUG]  [BUGGY]    double  out  =  getL1();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    double  out  =  getL1();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    double  out  =  getL1();		non-compiled	[CE]  cannot  find  symbol	12	None	add
155	[BUG]  [BUGGY]    double  out  =  data.length  *  getL1Message();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]    double  out  =  data.length  *  getL1Message();  [BUGGY]  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	    double  out  =  data.length  *  getL1Message();		non-compiled	[CE]  cannot  find  symbol	12	None	add
182	[BUG]  [BUGGY]    sum  -=  Math.sqrt(data[a]);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  -=  Math.sqrt(data[a]);  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  -=  Math.sqrt(data[a]);		non-compiled	[CE]  cannot  find  symbol  a	16	None	add
183	[BUG]  [BUGGY]    sum  +=  Math.sqrt(data);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  +=  Math.sqrt(data);  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  +=  Math.sqrt(data);		non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	16	None	add
184	[BUG]  [BUGGY]    sum  +=  Math.sqrt(data[a]);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  +=  Math.sqrt(data[a]);  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  +=  Math.sqrt(data[a]);		non-compiled	[CE]  cannot  find  symbol  a	16	None	add
185	[BUG]  [BUGGY]    sum  -=  Math.sqrt(data,  a);  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  [BUGGY]    sum  -=  Math.sqrt(data,  a);  [BUGGY]  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	713	713	2	replace	    sum  -=  Math.sqrt(data,  a);		non-compiled	[CE]  cannot  find  symbol  a	16	None	add
213	[BUG]  [BUGGY]  for(double  a  :  data[a])  {  [CE]  possible  loss  of  precision  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  data[a])  {  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	for(double  a  :  data[a])  {	for  (double  a  :  data)  {  	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
214	[BUG]  [BUGGY]  for(double  a  :  data.length,  a)  {  [CE]  ')'  expected  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  data.length,  a)  {  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	700	700	2	replace	for(double  a  :  data.length,  a)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  ')'  expected	3	None	replace
241	[BUG]  [BUGGY]    double  out  =  data.length  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double  out  =  data.length  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double  out  =  data.length  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;		non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	2	None	add
242	[BUG]  [BUGGY]    double  out  =  getDataItemCount()  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double  out  =  getDataItemCount()  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double  out  =  getDataItemCount()  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;		non-compiled	[CE]  cannot  find  symbol	2	None	add
243	[BUG]  [BUGGY]    double  out  =  DataUtilities.doubleValue(data);  [CE]  cannot  find  symbol  DataUtilities  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double  out  =  DataUtilities.doubleValue(data);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double  out  =  DataUtilities.doubleValue(data);		non-compiled	[CE]  cannot  find  symbol  DataUtilities	2	None	add
244	[BUG]  [BUGGY]    double  out  =  DataUtilities.doubleValue(getNorm());  [CE]  cannot  find  symbol  DataUtilities  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double  out  =  DataUtilities.doubleValue(getNorm());  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double  out  =  DataUtilities.doubleValue(getNorm());		non-compiled	[CE]  cannot  find  symbol  DataUtilities	2	None	add
245	[BUG]  [BUGGY]    double  out  =  DataUtilities.doubleValue(data,  true);  [CE]  cannot  find  symbol  DataUtilities  [CONTEXT]  public  double  getNorm()  {  [BUGGY]    double  out  =  DataUtilities.doubleValue(data,  true);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	    double  out  =  DataUtilities.doubleValue(data,  true);		non-compiled	[CE]  cannot  find  symbol  DataUtilities	2	None	add
301	[BUG]  [BUGGY]    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [CE]  cannot  find  symbol  a  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE;		non-compiled	[CE]  cannot  find  symbol  a	8	None	add
302	[BUG]  [BUGGY]    sum  +=  Math.pow(data[a]  /  NON_FITTING_POSITION_AND_SIZE_MESSAGE]);  [CE]  ')'  expected  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  Math.pow(data[a]  /  NON_FITTING_POSITION_AND_SIZE_MESSAGE]);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  Math.pow(data[a]  /  NON_FITTING_POSITION_AND_SIZE_MESSAGE]);		non-compiled	[CE]  ')'  expected	8	None	add
303	[BUG]  [BUGGY]    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [CE]  ';'  expected  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE);		non-compiled	[CE]  ';'  expected	8	None	add
305	[BUG]  [BUGGY]    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE  *  a);  [CE]  ';'  expected  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  [BUGGY]    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE  *  a);  [BUGGY]  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	703	703	2	replace	    sum  +=  Math.pow(data[a])/  NON_FITTING_POSITION_AND_SIZE_MESSAGE  *  a);		non-compiled	[CE]  ';'  expected	8	None	add
332	[BUG]  [BUGGY]  for(double  a  :  getL1Mean())  {  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  getL1Mean())  {  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	for(double  a  :  getL1Mean())  {	for  (double  a  :  data)  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
334	[BUG]  [BUGGY]  for(double  a  :  getL1Norm())  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  [BUGGY]  for(double  a  :  getL1Norm())  {  [BUGGY]  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	710	710	2	replace	for(double  a  :  getL1Norm())  {	for  (double  a  :  data)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	11	None	replace
364	[BUG]  [BUGGY]  double  sum  =  0  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [CE]  bad  operand  types  for  binary  operator  '*'  [CONTEXT]  public  double  getNorm()  {  [BUGGY]  double  sum  =  0  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [BUGGY]  for  (double  a  :  data)  {  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	699	699	2	replace	double  sum  =  0  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;	double  sum  =  0;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	1	None	replace
421	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount()  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  getDataItemCount()  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  getDataItemCount()  *  NON_FITTING_POSITION_AND_SIZE_MESSAGE;		non-compiled	[CE]  cannot  find  symbol	18	None	add
422	[BUG]  [BUGGY]    double  out  =  getImplicitReturn();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double  out  =  getImplicitReturn();  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double  out  =  getImplicitReturn();		non-compiled	[CE]  cannot  find  symbol	18	None	add
423	[BUG]  [BUGGY]    double[]  data  =  getDataItemCount()  *  NON_FITTING_POSITION_AND_SIZE;  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double[]  data  =  getDataItemCount()  *  NON_FITTING_POSITION_AND_SIZE;  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double[]  data  =  getDataItemCount()  *  NON_FITTING_POSITION_AND_SIZE;		non-compiled	[CE]  cannot  find  symbol	18	None	add
424	[BUG]  [BUGGY]    double  out  =(double[])Math.floor(data,  0,  data.length);  [CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getLInfNorm()  {  [BUGGY]    double  out  =(double[])Math.floor(data,  0,  data.length);  [BUGGY]  double  max  =  0;  for  (double  a  :  data)  {  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	719	719	2	replace	    double  out  =(double[])Math.floor(data,  0,  data.length);		non-compiled	[CE]  method  floor  in  class  Math  cannot  be  applied  to  given  types;	18	None	add
483	[BUG]  [BUGGY]  for(double  a  :  data  ||  a  <  0.0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  for(double  a  :  data  ||  a  <  0.0)  {  [BUGGY]  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  data  ||  a  <  0.0)  {	for  (double  a  :  data)  {  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	19	None	replace
484	[BUG]  [BUGGY]  for(double  a  :  data[a])  {  [CE]  possible  loss  of  precision  [CONTEXT]  public  double  getLInfNorm()  {  double  max  =  0;  [BUGGY]  for(double  a  :  data[a])  {  [BUGGY]  max  +=  Math.max(max,  Math.abs(a));  }  return  max;  }  [CLASS]  ArrayRealVector  [METHOD]  getLInfNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  max  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	720	720	2	replace	for(double  a  :  data[a])  {	for  (double  a  :  data)  {  	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
511	[BUG]  [BUGGY]    double  out  =  getL1();  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double  out  =  getL1();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double  out  =  getL1();		non-compiled	[CE]  cannot  find  symbol	10	None	add
512	[BUG]  [BUGGY]    double  out  =  DataUtilities.doubleValue(getL1());  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double  out  =  DataUtilities.doubleValue(getL1());  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double  out  =  DataUtilities.doubleValue(getL1());		non-compiled	[CE]  cannot  find  symbol	10	None	add
513	[BUG]  [BUGGY]    double  out  =  DataUtilities.doubleValue(getL1(),  false);  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double  out  =  DataUtilities.doubleValue(getL1(),  false);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double  out  =  DataUtilities.doubleValue(getL1(),  false);		non-compiled	[CE]  cannot  find  symbol	10	None	add
514	[BUG]  [BUGGY]    double  out  =  DataUtilities.doubleValue(getL1(),  data);  [CE]  cannot  find  symbol  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double  out  =  DataUtilities.doubleValue(getL1(),  data);  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double  out  =  DataUtilities.doubleValue(getL1(),  data);		non-compiled	[CE]  cannot  find  symbol	10	None	add
515	[BUG]  [BUGGY]  [FE]  StackOverflowError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double  out  =  data[0]  *  getL1Norm();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	add	    double  out  =  data[0]  *  getL1Norm();		compilable	  [FE]  StackOverflowError  testBasicFunctions	10	2
516	[BUG]  [BUGGY]    double  out  =  data[0]  *  getL1Norm();  [FE]  StackOverflowError  testBasicFunctions  [CONTEXT]  public  double  getL1Norm()  {  [BUGGY]    double  out  =  data[0]  *  getL1Norm();  [BUGGY]  double  sum  =  0;  for  (double  a  :  data)  {  sum  +=  Math.abs(a);  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	709	709	2	replace	    double  out  =  data[0]  *  getL1Norm();		compilable	  [FE]  StackOverflowError  testBasicFunctions	10	2	add
543	[BUG]  [BUGGY]  sum  +=  Math.pow(a  /  getL1Norm());  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getL1Norm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]  sum  +=  Math.pow(a  /  getL1Norm());  [BUGGY]  }  return  sum;  }  [CLASS]  ArrayRealVector  [METHOD]  getL1Norm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	711	711	2	replace	sum  +=  Math.pow(a  /  getL1Norm());	sum  +=  Math.abs(a);  	non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	13	None	replace
571	[BUG]  [BUGGY]    sum  +=  DataUtilities.calculateNonConvertingNormalArithmetic(a));  [CE]  ';'  expected  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  DataUtilities.calculateNonConvertingNormalArithmetic(a));  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  DataUtilities.calculateNonConvertingNormalArithmetic(a));		non-compiled	[CE]  ';'  expected	6	None	add
572	[BUG]  [BUGGY]    sum  +=  Math.pow(a  /  getNorm());  [CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  Math.pow(a  /  getNorm());  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  Math.pow(a  /  getNorm());		non-compiled	[CE]  method  pow  in  class  Math  cannot  be  applied  to  given  types;	6	None	add
573	[BUG]  [BUGGY]    sum  +=  DataUtilities.calculateNonConvertingNormalArithmetic(a);  [CE]  cannot  find  symbol  DataUtilities  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  DataUtilities.calculateNonConvertingNormalArithmetic(a);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  DataUtilities.calculateNonConvertingNormalArithmetic(a);		non-compiled	[CE]  cannot  find  symbol  DataUtilities	6	None	add
574	[BUG]  [BUGGY]    sum  +=  DataUtilities.calculateNonConstrainedArithmetic(data);  [CE]  cannot  find  symbol  DataUtilities  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  DataUtilities.calculateNonConstrainedArithmetic(data);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  DataUtilities.calculateNonConstrainedArithmetic(data);		non-compiled	[CE]  cannot  find  symbol  DataUtilities	6	None	add
575	[BUG]  [BUGGY]    sum  +=  DataUtilities.calculateNonConvertingNormalArithmetic(a),  true);  [CE]  ';'  expected  [CONTEXT]  public  double  getNorm()  {  double  sum  =  0;  for  (double  a  :  data)  {  [BUGGY]    sum  +=  DataUtilities.calculateNonConvertingNormalArithmetic(a),  true);  [BUGGY]  sum  +=  a  *  a;  }  return  Math.sqrt(sum);  }  [CLASS]  ArrayRealVector  [METHOD]  getNorm  [RETURN_TYPE]  double  [VARIABLES]  RealVectorFormat  DEFAULT_FORMAT  String  NON_FITTING_POSITION_AND_SIZE_MESSAGE  boolean  double[]  d  data  out  v  v1  v2  long  serialVersionUID  double  a  sum  	projects/Math77/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java	0.7071067811865475	701	701	2	replace	    sum  +=  DataUtilities.calculateNonConvertingNormalArithmetic(a),  true);		non-compiled	[CE]  ';'  expected	6	None	add
