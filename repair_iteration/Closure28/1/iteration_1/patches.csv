bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  cost);  [CE]  cannot  find  symbol  cost  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  cost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  cost);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	4	None	replace
2	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  maxCost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  maxCost);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	4	None	replace
3	[BUG]  [BUGGY]  return  getCost(root,  0,  maxCost,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  maxCost  [FE]                AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  maxCost,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  maxCost,  Integer.MAX_VALUE);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	4	None	replace
4	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                  AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  maxCost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  maxCost);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	4	None	replace
5	[BUG]  [BUGGY]  return  getCost(root,  0,  cost,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  cost  [FE]                    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  cost,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  cost,  Integer.MAX_VALUE);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	4	None	replace
6	[BUG]  [BUGGY]  return  getCost(root,  maxCost,  0,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  maxCost  [FE]                      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  maxCost,  0,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  maxCost,  0,  Integer.MAX_VALUE);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	4	None	replace
7	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  costThreshhold);  [CE]  cannot  find  symbol  costThreshhold  [FE]                        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  costThreshhold);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  costThreshhold);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	4	None	replace
8	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)/  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
9	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
10	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)+  2;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
11	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  timeout  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  2;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
12	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
13	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  timeout  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
14	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)+  0;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
15	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  timeout  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  0;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
16	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
17	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  timeout  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
18	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)+  3;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
19	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  timeout  [FE]              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  3;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
20	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]                AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	7	None	replace
21	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                  AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold);	  return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	7	None	replace
22	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  cost);  [CE]  cannot  find  symbol  cost  [FE]                    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  cost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  cost);	  return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  cost	7	None	replace
23	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  COST_SIZE);  [CE]  cannot  find  symbol  COST_SIZE  [FE]                      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  COST_SIZE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  COST_SIZE);	  return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  COST_SIZE	7	None	replace
24	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost;  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  cost;	  return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  ')'  expected	7	None	replace
25	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  maxCost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  maxCost);	  return    getCost(root,    Integer.MAX_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  maxCost	3	None	replace
26	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	3	None	replace
27	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  totalCost);  [CE]  cannot  find  symbol  totalCost  [FE]              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  totalCost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  totalCost);	  return    getCost(root,    Integer.MAX_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  totalCost	3	None	replace
28	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  maximumCost);  [CE]  cannot  find  symbol  maximumCost  [FE]                AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  maximumCost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  maximumCost);	  return    getCost(root,    Integer.MAX_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  maximumCost	3	None	replace
29	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE  -  1);	  return    getCost(root,    Integer.MIN_VALUE);    	compilable	timeout	2	1	replace
30	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE  -  1);	  return    getCost(root,    Integer.MIN_VALUE);    	compilable	timeout	2	1	replace
31	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  costThreshhold);  [CE]  cannot  find  symbol  costThreshhold  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  costThreshhold);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  costThreshhold);	  return    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	2	None	replace
32	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	2	None	replace
33	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE  +  1);	  return    getCost(root,    Integer.MIN_VALUE);    	compilable	timeout	2	1	replace
34	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  timeout  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE  +  1);	  return    getCost(root,    Integer.MIN_VALUE);    	compilable	timeout	2	1	replace
35	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
36	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;	  	non-compiled	[CE]  not  a  statement	12	None	add
37	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  	non-compiled	[CE]  unreachable  statement	12	None	add
38	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
39	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    int  cost  =  getCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  unreachable  statement	12	None	add
40	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
41	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  unreachable  statement	12	None	add
42	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
43	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  /  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    	compilable	timeout	6	1	replace
44	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  /  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    	compilable	timeout	6	1	replace
45	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  +  2);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    	compilable	timeout	6	1	replace
46	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  timeout  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  +  2);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    	compilable	timeout	6	1	replace
47	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  	non-compiled	[CE]  unreachable  statement	8	None	add
48	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
49	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
50	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
51	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  maxCost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  maxCost);	  	non-compiled	[CE]  cannot  find  symbol  maxCost	8	None	add
52	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
53	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);  [CE]  cannot  find  symbol  cost  [FE]                AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);	  	non-compiled	[CE]  cannot  find  symbol  cost	8	None	add
54	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,  root,  this);	  	non-compiled	[CE]  cannot  find  symbol  compiler	8	None	add
55	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
56	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  	non-compiled	[CE]  unreachable  statement	5	None	add
57	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
58	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
59	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
60	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
61	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
62	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,  root,  this);	  	non-compiled	[CE]  cannot  find  symbol  compiler	5	None	add
63	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    int  cost  =  getCost(root,  Integer.MIN_VALUE);	  	non-compiled	[CE]  unreachable  statement	1	None	add
64	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
65	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
66	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  	non-compiled	[CE]  unreachable  statement	1	None	add
67	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
68	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  	non-compiled	[CE]  cannot  find  symbol  compiler	1	None	add
69	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,  root,  this);	  	non-compiled	[CE]  cannot  find  symbol  compiler	1	None	add
70	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    int  maxCost  =  getMaxCost(root);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
71	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  minCost);  [CE]  cannot  find  symbol  minCost  [FE]                    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  minCost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  minCost);	  return    getCost(root,    Integer.MAX_VALUE,    costThreshhold);    	non-compiled	[CE]  cannot  find  symbol  minCost	10	None	replace
72	[BUG]  [BUGGY]  Return  getCost(root,  Integer.MAX_VALUE,  maxCost);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  Return  getCost(root,  Integer.MAX_VALUE,  maxCost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Return  getCost(root,  Integer.MAX_VALUE,  maxCost);	  return    getCost(root,    Integer.MAX_VALUE,    costThreshhold);    	non-compiled	[CE]  ';'  expected	10	None	replace
73	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  -  2);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    	compilable	timeout	9	1	replace
74	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  2);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    	compilable	timeout	9	1	replace
75	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  *  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    	compilable	timeout	9	1	replace
76	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  timeout  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  *  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    	compilable	timeout	9	1	replace
77	[BUG]  [BUGGY]  int  cost  =  getCost(root);  [CE]  missing  return  statement  [FE]                      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  int  cost  =  getCost(root);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root);	      	non-compiled	[CE]  missing  return  statement	11	None	replace
78	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  [CE]  missing  return  statement  [FE]                        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  int  cost  =  getCost(root.getLastChild());  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());	      	non-compiled	[CE]  missing  return  statement	11	None	replace
79	[BUG]  [BUGGY]  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]                          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  char  last  =  root.getLastChild();  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  last  =  root.getLastChild();	      	non-compiled	[CE]  incompatible  types	11	None	replace
80	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root.getLastChild());  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root.getLastChild());	      	compilable	timeout	11	1	replace
81	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  timeout  [FE]                            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root.getLastChild());  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getLastChild());	      	compilable	timeout	11	1	replace
82	[BUG]  [BUGGY]  return  root.getLastChild().getString();  [CE]  incompatible  types  [FE]                              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  root.getLastChild().getString();  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  root.getLastChild().getString();	      	non-compiled	[CE]  incompatible  types	11	None	replace
83	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root.getLastChild());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  int  maxCost  =  getMaxCost(root.getLastChild());  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root.getLastChild());	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
84	[BUG]  [BUGGY]  char  last  =  root.getLastChild().getString();  [CE]  incompatible  types  [FE]                                  AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  char  last  =  root.getLastChild().getString();  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  last  =  root.getLastChild().getString();	      	non-compiled	[CE]  incompatible  types	11	None	replace
85	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
86	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    	compilable	timeout	13	1	replace
87	[BUG]  [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  root.length,  Integer.MAX_VALUE);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
88	[BUG]  [BUGGY]  return  getCost(root,  0,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	4	None	replace
89	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  Cost  [FE]                AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  Cost	4	None	replace
90	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    	compilable	timeout	9	1	replace
91	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  timeout  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    	compilable	timeout	9	1	replace
92	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  	non-compiled	[CE]  unreachable  statement	8	None	add
93	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	8	None	add
94	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  	non-compiled	[CE]  cannot  find  symbol  compiler	8	None	add
95	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  DEFAULT_IDENTIFIER_COST);  [CE]  cannot  find  symbol  DEFAULT_IDENTIFIER_COST  [FE]                AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  DEFAULT_IDENTIFIER_COST);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  DEFAULT_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_IDENTIFIER_COST	7	None	replace
96	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CACHED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  CACHED_IDENTIFIER_COST  [FE]                  AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CACHED_IDENTIFIER_COST);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  CACHED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  CACHED_IDENTIFIER_COST	7	None	replace
97	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  DEFAULT_SIZE);  [CE]  cannot  find  symbol  DEFAULT_SIZE  [FE]                    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  DEFAULT_SIZE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  DEFAULT_SIZE);	  return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SIZE	7	None	replace
98	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  	non-compiled	[CE]  unreachable  statement	5	None	add
99	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  	non-compiled	[CE]  cannot  find  symbol  compiler	5	None	add
100	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	5	None	add
101	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  unreachable  statement	5	None	add
102	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  unreachable  statement	12	None	add
103	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  	non-compiled	[CE]  cannot  find  symbol  compiler	12	None	add
104	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,  root,  this);	  	non-compiled	[CE]  cannot  find  symbol  compiler	12	None	add
105	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  	non-compiled	[CE]  unreachable  statement	1	None	add
106	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    int  maxCost  =  getCost(root,  Integer.MIN_VALUE);	  	non-compiled	[CE]  unreachable  statement	1	None	add
107	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);	  	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	1	None	add
108	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  cannot  find  symbol  compiler  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());	  	non-compiled	[CE]  cannot  find  symbol  compiler	1	None	add
109	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  cost);  [CE]  cannot  find  symbol  cost  [FE]                      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  NodeUtil.copyCost(root,  cost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  cost);	      	non-compiled	[CE]  cannot  find  symbol  cost	11	None	replace
110	[BUG]  [BUGGY]  return  NodeUtil.getCost(root);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  NodeUtil.getCost(root);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  NodeUtil.getCost(root);	      	non-compiled	[CE]  cannot  find  symbol	11	None	replace
111	[BUG]  [BUGGY]  return  getCost(root.getString());  [CE]  no  suitable  method  found  for  getCost(String)  [FE]                          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root.getString());  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getString());	      	non-compiled	[CE]  no  suitable  method  found  for  getCost(String)	11	None	replace
112	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root);	      	compilable	timeout	11	1	replace
113	[BUG]  [BUGGY]  return  getCost(root);  timeout  [FE]                            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root);	      	compilable	timeout	11	1	replace
114	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    1);    int  cost  =  getCost(root,  Integer.MAX_VALUE);	  	non-compiled	[CE]  unreachable  statement	5	None	add
115	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    Integer  cost  =  getCost(root,  Integer.MIN_VALUE);	  	non-compiled	[CE]  unreachable  statement	1	None	add
116	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  char  last  =  root.getLastChild();  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE);    char  last  =  root.getLastChild();	  	non-compiled	[CE]  incompatible  types	1	None	add
117	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  this.maxCost);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  this.maxCost);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  this.maxCost);	  return    getCost(root,    Integer.MAX_VALUE,    cost);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	replace
118	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MULTIPLE_IDENTIFIER_COST);  [CE]  cannot  find  symbol  MULTIPLE_IDENTIFIER_COST  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MULTIPLE_IDENTIFIER_COST);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  MULTIPLE_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  MULTIPLE_IDENTIFIER_COST	3	None	replace
119	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  ==  0)  {  return  cost;  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  ==  0)  {  return  cost;  }  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost  ==  0)  {  return  cost;  }	      	non-compiled	[CE]  missing  return  statement	11	None	replace
120	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  maxCost)  {  return  cost;  }  [CE]  cannot  find  symbol  maxCost  [FE]                        AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  maxCost)  {  return  cost;  }  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost  >  maxCost)  {  return  cost;  }	      	non-compiled	[CE]  cannot  find  symbol  maxCost	11	None	replace
121	[BUG]  [BUGGY]  return  getCost(root,  1,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]            AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  1,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  1,  Integer.MAX_VALUE);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	4	None	replace
122	[BUG]  [BUGGY]  return  getCost(root,  0,  1,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]              AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  0,  1,  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  1,  Integer.MAX_VALUE);	  return    getCost(root,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	4	None	replace
123	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;	  	non-compiled	[CE]  unreachable  statement	12	None	add
124	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    static  int  getCost(Node  root)  {    [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]    }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  	non-compiled	[CE]  unreachable  statement	12	None	add
