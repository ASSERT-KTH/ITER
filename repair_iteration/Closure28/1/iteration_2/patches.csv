bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	66	None	replace
2	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
3	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	66	None	replace
4	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
5	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
6	[BUG]  [BUGGY]  null  =  getCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unexpected  type  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  null  =  getCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	null  =  getCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  unexpected  type	66	None	replace
7	[BUG]  [BUGGY]  return  getCost(root);  int  maxCost  =  getMaxCost(root);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  int  maxCost  =  getMaxCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    int  maxCost  =  getMaxCost(root);	  timeout    	non-compiled	[CE]  cannot  find  symbol	112	None	add
8	[BUG]  [BUGGY]  return  getCost(root);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	112	None	add
9	[BUG]  [BUGGY]  return  getCost(root);  int  cost  =  getCost(root);  [CE]  unreachable  statement  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  int  cost  =  getCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    int  cost  =  getCost(root);	  timeout    	non-compiled	[CE]  unreachable  statement	112	None	add
10	[BUG]  [BUGGY]  return  getCost(root);  NodeUtil.copyCost(root,  cost);  [CE]  cannot  find  symbol  cost  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  NodeUtil.copyCost(root,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    NodeUtil.copyCost(root,  cost);	  timeout    	non-compiled	[CE]  cannot  find  symbol  cost	112	None	add
11	[BUG]  [BUGGY]  return  getCost(root);  Node  last  =  root.getLastChild();  [CE]  unreachable  statement  [FE]                                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  Node  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    Node  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  unreachable  statement	112	None	add
12	[BUG]  [BUGGY]  return  getCost(root);  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]                                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    char  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  incompatible  types	112	None	add
13	[BUG]  [BUGGY]  return  getCost(root);  NodeTraversal.traverse(compiler,  root,  cost);  [CE]  cannot  find  symbol  compiler  [FE]                                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  NodeTraversal.traverse(compiler,  root,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    NodeTraversal.traverse(compiler,  root,  cost);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	112	None	add
14	[BUG]  [BUGGY]  return  getCost(root);  NodeUtil.copyCost(root);  [CE]  cannot  find  symbol  [FE]                                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  NodeUtil.copyCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    NodeUtil.copyCost(root);	  timeout    	non-compiled	[CE]  cannot  find  symbol	112	None	add
15	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	102	None	replace
16	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  unreachable  statement	102	None	replace
17	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	102	None	replace
18	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	102	None	replace
19	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	102	None	replace
20	[BUG]  [BUGGY]  int  cost  =  getCost(root.getFirstChild());  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getFirstChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getFirstChild());	  int    cost    =    getCost(root.getLastChild());    if(cost    ==    0)    {    return    cost;    }    	non-compiled	[CE]  missing  return  statement	119	None	replace
21	[BUG]  [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost  ==  0)  {  return  cost;  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost  ==  0)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getFirstChild());  if(cost  ==  0)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    ==    0)    {    return    cost;    }    	non-compiled	[CE]  missing  return  statement	119	None	replace
22	[BUG]  [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost!=  0)  {  return  cost;  }  [CE]  missing  return  statement  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost!=  0)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getFirstChild());  if(cost!=  0)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    ==    0)    {    return    cost;    }    	non-compiled	[CE]  missing  return  statement	119	None	replace
23	[BUG]  [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost  >=  0)  {  return  cost;  }  [CE]  missing  return  statement  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost  >=  0)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getFirstChild());  if(cost  >=  0)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    ==    0)    {    return    cost;    }    	non-compiled	[CE]  missing  return  statement	119	None	replace
24	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild(),  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild(),  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild(),  maxCost);	  int    cost    =    getCost(root.getLastChild());    if(cost    ==    0)    {    return    cost;    }    	non-compiled	[CE]  cannot  find  symbol  maxCost	119	None	replace
25	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  cost);  [CE]  cannot  find  symbol  cost  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  cost);	  return    getCost(root,    0,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	32	None	replace
26	[BUG]  [BUGGY]  return  getCost(root,  0,  maxCost,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  maxCost  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  maxCost,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  maxCost,  Integer.MIN_VALUE);	  return    getCost(root,    0,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	32	None	replace
27	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  costThreshhold);  [CE]  cannot  find  symbol  costThreshhold  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  costThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  costThreshhold);	  return    getCost(root,    0,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	32	None	replace
28	[BUG]  [BUGGY]  return  getCost(root,  0,  cost,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  cost  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  cost,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  cost,  Integer.MIN_VALUE);	  return    getCost(root,    0,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	32	None	replace
29	[BUG]  [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  root.length,  Integer.MIN_VALUE);	  return    getCost(root,    0,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  length	32	None	replace
30	[BUG]  [BUGGY]  return  getCost(root,  0,  Long.MIN_VALUE,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,long,int)  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Long.MIN_VALUE,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Long.MIN_VALUE,  Integer.MAX_VALUE);	  return    getCost(root,    0,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,long,int)	32	None	replace
31	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  missing  return  statement	47	None	replace
32	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
33	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  missing  return  statement	47	None	replace
34	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE  -  1);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  missing  return  statement	47	None	replace
35	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
36	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
37	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
38	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
39	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
40	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
41	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
42	[BUG]  [BUGGY]  String  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  incompatible  types	49	None	replace
43	[BUG]  [BUGGY]  String  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  incompatible  types	49	None	replace
44	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  Integer.MAX_VALUE);	  return    getCost(root,    0,    cost,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	5	None	replace
45	[BUG]  [BUGGY]  return  getCost(root,  0,  size,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  size  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  size,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  size,  Integer.MAX_VALUE);	  return    getCost(root,    0,    cost,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  size	5	None	replace
46	[BUG]  [BUGGY]  return  getCost(root,  0,  costThreshhold,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  costThreshhold  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  costThreshhold,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  costThreshhold,  Integer.MAX_VALUE);	  return    getCost(root,    0,    cost,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	5	None	replace
47	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	43	None	add
48	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  /  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  /  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  /  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	43	None	add
49	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  2);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	43	None	add
50	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  /  1);  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  /  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    int  cost  =  getCost(root,  Integer.MAX_VALUE  /  1);	  timeout    	non-compiled	[CE]  unreachable  statement	43	None	add
51	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  /  2);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  /  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  /  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	43	None	add
52	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	43	None	add
53	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  /  2);  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  /  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    int  cost  =  getCost(root,  Integer.MAX_VALUE  /  2);	  timeout    	non-compiled	[CE]  unreachable  statement	43	None	add
54	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  2);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  /  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	43	None	add
55	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1  +  1;	  timeout    	non-compiled	[CE]  not  a  statement	85	None	add
56	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1  +  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol	85	None	add
57	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1  +  1;	  timeout    	non-compiled	[CE]  unreachable  statement	85	None	add
58	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	85	None	add
59	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  Integer.MAX_VALUE)+  1  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  Integer.MAX_VALUE)+  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    Integer.MAX_VALUE)+  1  +  1;	  timeout    	non-compiled	[CE]  not  a  statement	85	None	add
60	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol	85	None	add
61	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1  +  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol	85	None	add
62	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  [CE]  unreachable  statement  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1  +  1;	  timeout    	non-compiled	[CE]  unreachable  statement	85	None	add
63	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)-  2;	  return    getCost(root,    Integer.MAX_VALUE)-    1;    timeout    	compilable	timeout	13	1	replace
64	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  2;  timeout  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)-  2;	  return    getCost(root,    Integer.MAX_VALUE)-    1;    timeout    	compilable	timeout	13	1	replace
65	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)-    1;    timeout    	compilable	timeout	13	1	replace
66	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)-  1;  timeout  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)-    1;    timeout    	compilable	timeout	13	1	replace
67	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE)-  1;  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)-    1;    timeout    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	13	None	replace
68	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)-  1  +  1;	  return    getCost(root,    Integer.MAX_VALUE)-    1;    timeout    	compilable	timeout	13	1	replace
69	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1  +  1;  timeout  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)-  1  +  1;	  return    getCost(root,    Integer.MAX_VALUE)-    1;    timeout    	compilable	timeout	13	1	replace
70	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	37	None	replace
71	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	37	None	replace
72	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE)+  1;  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	37	None	replace
73	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	37	None	replace
74	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	37	None	replace
75	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  2;  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)+  2;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	37	None	replace
76	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE  +  1);  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    int  cost  =  getCost(root,  Integer.MIN_VALUE  +  1);	  timeout    	non-compiled	[CE]  unreachable  statement	33	None	add
77	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	33	None	add
78	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	33	None	add
79	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    NodeUtil.copyCost(root,  Integer.MIN_VALUE  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	33	None	add
80	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	33	None	add
81	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	33	None	add
82	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  +  1,  cost);  [CE]  cannot  find  symbol  cost  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  +  1,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    NodeUtil.copyCost(root,  Integer.MIN_VALUE  +  1,  cost);	  timeout    	non-compiled	[CE]  cannot  find  symbol  cost	33	None	add
83	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	33	None	add
84	[BUG]  [BUGGY]  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	107	None	replace
85	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
86	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
87	[BUG]  [BUGGY]  if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  [CE]  cannot  find  symbol  Token  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  Token	107	None	replace
88	[BUG]  [BUGGY]  if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  }  else  {  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  [CE]  cannot  find  symbol  Token  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  }  else  {  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  }  else  {  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  Token	107	None	replace
89	[BUG]  [BUGGY]  Node  last  =  getCost(root,  Integer.MIN_VALUE);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  last  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  last  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  incompatible  types	107	None	replace
90	[BUG]  [BUGGY]  int  maxCost  =  getMinimumCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMinimumCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMinimumCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
91	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    costThreshhold    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	41	None	replace
92	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    costThreshhold    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
93	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    costThreshhold    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
94	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    costThreshhold    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
95	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    costThreshhold    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
96	[BUG]  [BUGGY]  return  getCost(root,  maxCost,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  maxCost  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  maxCost,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  maxCost,  Integer.MAX_VALUE);	  return    getCost(root,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	121	None	replace
97	[BUG]  [BUGGY]  return  getCost(root,  cost,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  cost  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  cost,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  cost,  Integer.MAX_VALUE);	  return    getCost(root,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	121	None	replace
98	[BUG]  [BUGGY]  return  getCost(root,  1,  Integer.MAX_VALUE,  cost);  [CE]  cannot  find  symbol  cost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  1,  Integer.MAX_VALUE,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  1,  Integer.MAX_VALUE,  cost);	  return    getCost(root,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	121	None	replace
99	[BUG]  [BUGGY]  return  getCost(root,  1,  Integer.MAX_VALUE,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  1,  Integer.MAX_VALUE,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  1,  Integer.MAX_VALUE,  maxCost);	  return    getCost(root,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	121	None	replace
100	[BUG]  [BUGGY]  return  getCost(root,  MAX_VALUE,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  MAX_VALUE,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  MAX_VALUE,  Integer.MAX_VALUE);	  return    getCost(root,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	121	None	replace
101	[BUG]  [BUGGY]  return  getCost(root.getString(),  cost);  [CE]  cannot  find  symbol  cost  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getString(),  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getString(),  cost);	  return    getCost(root.getString());    	non-compiled	[CE]  cannot  find  symbol  cost	111	None	replace
102	[BUG]  [BUGGY]  return  getCost(root.getString(),  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getString(),  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getString(),  maxCost);	  return    getCost(root.getString());    	non-compiled	[CE]  cannot  find  symbol  maxCost	111	None	replace
103	[BUG]  [BUGGY]  return  getCost(root,  root.getString());  [CE]  no  suitable  method  found  for  getCost(Node,String)  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  root.getString());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  root.getString());	  return    getCost(root.getString());    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,String)	111	None	replace
104	[BUG]  [BUGGY]  return  getCost(root,  cost.getString());  [CE]  cannot  find  symbol  cost  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  cost.getString());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  cost.getString());	  return    getCost(root.getString());    	non-compiled	[CE]  cannot  find  symbol  cost	111	None	replace
105	[BUG]  [BUGGY]  return  getCost(root.getLastChild(),  root.getString());  [CE]  no  suitable  method  found  for  getCost(Node,String)  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild(),  root.getString());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getLastChild(),  root.getString());	  return    getCost(root.getString());    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,String)	111	None	replace
106	[BUG]  [BUGGY]  return  getCost(root.getString()  +  1);  [CE]  no  suitable  method  found  for  getCost(String)  [FE]                                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getString()  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getString()  +  1);	  return    getCost(root.getString());    	non-compiled	[CE]  no  suitable  method  found  for  getCost(String)	111	None	replace
107	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	104	None	replace
108	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	104	None	replace
109	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	104	None	replace
110	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	104	None	replace
111	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
112	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	104	None	replace
113	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
114	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
115	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
116	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
117	[BUG]  [BUGGY]  String  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  incompatible  types	60	None	replace
118	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(value,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  value  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(value,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(value,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol  value	60	None	replace
119	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1,  cost);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1,  cost);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
120	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
121	[BUG]  [BUGGY]  Node  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
122	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
123	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  CostThreshhold);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  CostThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  CostThreshhold);	  return    getCost(root,    0,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	4	None	replace
124	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  ESTIMATED_IDENTIFIER_COST);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    0,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	4	None	replace
125	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  COST_SIZE);  [CE]  cannot  find  symbol  COST_SIZE  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  COST_SIZE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  COST_SIZE);	  return    getCost(root,    0,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  COST_SIZE	4	None	replace
126	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  COST_INDEX);  [CE]  cannot  find  symbol  COST_INDEX  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  COST_INDEX);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  COST_INDEX);	  return    getCost(root,    0,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  COST_INDEX	4	None	replace
127	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  COST_TYPE);  [CE]  cannot  find  symbol  COST_TYPE  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  COST_TYPE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  COST_TYPE);	  return    getCost(root,    0,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  COST_TYPE	4	None	replace
128	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	115	None	replace
129	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	115	None	replace
130	[BUG]  [BUGGY]  Node  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  incompatible  types	115	None	replace
131	[BUG]  [BUGGY]  Number  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Number  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Number  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	115	None	replace
132	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	115	None	replace
133	[BUG]  [BUGGY]  String  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  incompatible  types	115	None	replace
134	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  /  2);	  return    getCost(root,    Integer.MAX_VALUE    +    2);    timeout    	compilable	timeout	46	1	replace
135	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  2);  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  /  2);	  return    getCost(root,    Integer.MAX_VALUE    +    2);    timeout    	compilable	timeout	46	1	replace
136	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)/  2;	  return    getCost(root,    Integer.MAX_VALUE    +    2);    timeout    	compilable	timeout	46	1	replace
137	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  2;  timeout  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  2;	  return    getCost(root,    Integer.MAX_VALUE    +    2);    timeout    	compilable	timeout	46	1	replace
138	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);  [CE]  cannot  find  symbol  cost  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  cost	51	None	replace
139	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    maxCost);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
140	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    maxCost);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
141	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);  [CE]  cannot  find  symbol  cost  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  cost	51	None	replace
142	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold);  [CE]  cannot  find  symbol  costThreshhold  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	51	None	replace
143	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  size);  [CE]  cannot  find  symbol  size  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  size);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  size);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  size	51	None	replace
144	[BUG]  [BUGGY]  return  getCost(root,  0,  0,  Integer.MAX_VALUE,  cost);  [CE]  cannot  find  symbol  cost  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  0,  Integer.MAX_VALUE,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  0,  Integer.MAX_VALUE,  cost);	  return    getCost(root,    0,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	122	None	replace
145	[BUG]  [BUGGY]  return  getCost(root,  0,  0,  Integer.MAX_VALUE,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  0,  Integer.MAX_VALUE,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  0,  Integer.MAX_VALUE,  maxCost);	  return    getCost(root,    0,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	122	None	replace
146	[BUG]  [BUGGY]  return  getCost(root,  0,  1,  Integer.MAX_VALUE,  cost);  [CE]  cannot  find  symbol  cost  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  1,  Integer.MAX_VALUE,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  1,  Integer.MAX_VALUE,  cost);	  return    getCost(root,    0,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	122	None	replace
147	[BUG]  [BUGGY]  return  getCost(root,  0,  1,  Integer.MAX_VALUE,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  1,  Integer.MAX_VALUE,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  1,  Integer.MAX_VALUE,  maxCost);	  return    getCost(root,    0,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	122	None	replace
148	[BUG]  [BUGGY]  return  getCost(root,  0,  1,  maxCost,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  maxCost  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  1,  maxCost,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  1,  maxCost,  Integer.MAX_VALUE);	  return    getCost(root,    0,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	122	None	replace
149	[BUG]  [BUGGY]  return  getCost(root,  0,  1,  root.length,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  length  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  1,  root.length,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  1,  root.length,  Integer.MAX_VALUE);	  return    getCost(root,    0,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  length	122	None	replace
150	[BUG]  [BUGGY]  return  getCost(root,  0,  1,  cost,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  cost  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  1,  cost,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  1,  cost,  Integer.MAX_VALUE);	  return    getCost(root,    0,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	122	None	replace
151	[BUG]  [BUGGY]  return  getCost(root,  0,  root.length  -  1,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  length  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  root.length  -  1,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  root.length  -  1,  Integer.MAX_VALUE);	  return    getCost(root,    0,    root.length,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  length	87	None	replace
152	[BUG]  [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  length  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  root.length,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    0,    root.length,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  length	87	None	replace
153	[BUG]  [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MAX_VALUE,  cost);  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MAX_VALUE,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  root.length,  Integer.MAX_VALUE,  cost);	  return    getCost(root,    0,    root.length,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  length	87	None	replace
154	[BUG]  [BUGGY]  return  getCost(root,  0,  root.size(),  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  root.size(),  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  root.size(),  Integer.MAX_VALUE);	  return    getCost(root,    0,    root.length,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
155	[BUG]  [BUGGY]  return  getCost(root,  0,  root.length  -  2,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  length  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  root.length  -  2,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  root.length  -  2,  Integer.MAX_VALUE);	  return    getCost(root,    0,    root.length,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  length	87	None	replace
156	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  maxCost);	  NodeUtil.copyCost(root,    cost);    	non-compiled	[CE]  cannot  find  symbol  maxCost	109	None	replace
157	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  costThreshhold);  [CE]  cannot  find  symbol  costThreshhold  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  costThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  costThreshhold);	  NodeUtil.copyCost(root,    cost);    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	109	None	replace
158	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  ESTIMATED_IDENTIFIER_COST);	  NodeUtil.copyCost(root,    cost);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
159	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  this.maxCost);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  this.maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  this.maxCost);	  NodeUtil.copyCost(root,    cost);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	109	None	replace
160	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  maximumCost);  [CE]  cannot  find  symbol  maximumCost  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  maximumCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  maximumCost);	  NodeUtil.copyCost(root,    cost);    	non-compiled	[CE]  cannot  find  symbol  maximumCost	109	None	replace
161	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  totalCost);  [CE]  cannot  find  symbol  totalCost  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  totalCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  totalCost);	  NodeUtil.copyCost(root,    cost);    	non-compiled	[CE]  cannot  find  symbol  totalCost	109	None	replace
162	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  last);  [CE]  cannot  find  symbol  last  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  last);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  last);	  NodeUtil.copyCost(root,    cost);    	non-compiled	[CE]  cannot  find  symbol  last	109	None	replace
163	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  maxCost,  ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  maxCost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  maxCost,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  maxCost,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  maxCost	20	None	replace
164	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost,  ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  cost  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  cost,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  cost	20	None	replace
165	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  costThreshhold,  ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  costThreshhold  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  costThreshhold,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  costThreshhold,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	20	None	replace
166	[BUG]  [BUGGY]  return  getCost(root,  maxCost,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  maxCost  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  maxCost,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  maxCost,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  maxCost	20	None	replace
167	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  ESTIMATED_IDENTIFIER_COST,  cost);  [CE]  cannot  find  symbol  cost  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  ESTIMATED_IDENTIFIER_COST,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  ESTIMATED_IDENTIFIER_COST,  cost);	  return    getCost(root,    Integer.MAX_VALUE,    ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  cost	20	None	replace
168	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost  -  ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  cost  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost  -  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  cost  -  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  cost	20	None	replace
169	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  ESTIMATED_IDENTIFIER_COST)  {  return  cost;  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  ESTIMATED_IDENTIFIER_COST)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost  >  ESTIMATED_IDENTIFIER_COST)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    >    maxCost)    {    return    cost;    }    	non-compiled	[CE]  missing  return  statement	120	None	replace
170	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  costThreshhold)  {  return  cost;  }  [CE]  cannot  find  symbol  costThreshhold  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  costThreshhold)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost  >  costThreshhold)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    >    maxCost)    {    return    cost;    }    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	120	None	replace
171	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  CostThreshhold)  {  return  cost;  }  [CE]  cannot  find  symbol  CostThreshhold  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  CostThreshhold)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost  >  CostThreshhold)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    >    maxCost)    {    return    cost;    }    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	120	None	replace
172	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  STIMATED_IDENTIFIER_COST)  {  return  cost;  }  [CE]  cannot  find  symbol  STIMATED_IDENTIFIER_COST  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  STIMATED_IDENTIFIER_COST)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost  >  STIMATED_IDENTIFIER_COST)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    >    maxCost)    {    return    cost;    }    	non-compiled	[CE]  cannot  find  symbol  STIMATED_IDENTIFIER_COST	120	None	replace
173	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  last)  {  return  cost;  }  [CE]  cannot  find  symbol  last  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  last)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost  >  last)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    >    maxCost)    {    return    cost;    }    	non-compiled	[CE]  cannot  find  symbol  last	120	None	replace
174	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  1)  {  return  cost;  }  [CE]  missing  return  statement  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  1)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost  >  1)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    >    maxCost)    {    return    cost;    }    	non-compiled	[CE]  missing  return  statement	120	None	replace
175	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	63	None	replace
176	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild(),  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild(),  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild(),  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	63	None	replace
177	[BUG]  [BUGGY]  long  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  long  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	long  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	63	None	replace
178	[BUG]  [BUGGY]  int  cost  =  getCost(root.getString(),  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  getCost(String,int)  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getString(),  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getString(),  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(String,int)	63	None	replace
179	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE  /  1);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE  /  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE  /  1);	  return    getCost(root,    Integer.MAX_VALUE    /    1);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	44	None	replace
180	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  3);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  /  3);	  return    getCost(root,    Integer.MAX_VALUE    /    1);    timeout    	compilable	timeout	44	1	replace
181	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  3);  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  3);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  /  3);	  return    getCost(root,    Integer.MAX_VALUE    /    1);    timeout    	compilable	timeout	44	1	replace
182	[BUG]  [BUGGY]  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	100	None	replace
183	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
184	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
185	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	100	None	replace
186	[BUG]  [BUGGY]  int  maxCost  =  getMinimumCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMinimumCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMinimumCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
187	[BUG]  [BUGGY]  Node  last  =  getCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  last  =  getCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  last  =  getCost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  incompatible  types	100	None	replace
188	[BUG]  [BUGGY]  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	100	None	replace
189	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  2;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  2;	  timeout    	non-compiled	[CE]  not  a  statement	10	None	add
190	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	10	None	add
191	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  2;  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    int  cost  =  getCost(root,  Integer.MAX_VALUE)+  2;	  timeout    	non-compiled	[CE]  unreachable  statement	10	None	add
192	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  2;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  2;	  timeout    	non-compiled	[CE]  cannot  find  symbol	10	None	add
193	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  2;  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  2;	  timeout    	non-compiled	[CE]  unreachable  statement	10	None	add
194	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol	10	None	add
195	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  Integer.MAX_VALUE)+  2;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  Integer.MAX_VALUE)+  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    Integer.MAX_VALUE)+  2;	  timeout    	non-compiled	[CE]  not  a  statement	10	None	add
196	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	10	None	add
197	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MIN_VALUE)+  1;  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MIN_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    int  cost  =  getCost(root,  Integer.MIN_VALUE)+  1;	  timeout    	non-compiled	[CE]  unreachable  statement	16	None	add
198	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MIN_VALUE)+  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MIN_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    NodeUtil.copyCost(root,  Integer.MIN_VALUE)+  1;	  timeout    	non-compiled	[CE]  not  a  statement	16	None	add
199	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	16	None	add
200	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	16	None	add
201	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    int  cost  =  getCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	16	None	add
202	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	16	None	add
203	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	16	None	add
204	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE)+  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol	16	None	add
205	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  missing  return  statement	92	None	replace
206	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  missing  return  statement	92	None	replace
207	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
208	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaximumCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaximumCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaximumCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
209	[BUG]  [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  missing  return  statement	92	None	replace
210	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE  -  1);  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  missing  return  statement	92	None	replace
211	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
212	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
213	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
214	[BUG]  [BUGGY]  Node  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
215	[BUG]  [BUGGY]  return  NodeUtil.getCost(root,  cost);  [CE]  cannot  find  symbol  cost  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  NodeUtil.getCost(root,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  NodeUtil.getCost(root,  cost);	  return    NodeUtil.getCost(root);    	non-compiled	[CE]  cannot  find  symbol  cost	110	None	replace
216	[BUG]  [BUGGY]  return  NodeUtil.getCost(root).intValue();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  NodeUtil.getCost(root).intValue();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  NodeUtil.getCost(root).intValue();	  return    NodeUtil.getCost(root);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
217	[BUG]  [BUGGY]  return  NodeUtil.getCost(root,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  NodeUtil.getCost(root,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  NodeUtil.getCost(root,  maxCost);	  return    NodeUtil.getCost(root);    	non-compiled	[CE]  cannot  find  symbol  maxCost	110	None	replace
218	[BUG]  [BUGGY]  return  NodeUtil.getCost(root,  this.maxCost);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  NodeUtil.getCost(root,  this.maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  NodeUtil.getCost(root,  this.maxCost);	  return    NodeUtil.getCost(root);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	110	None	replace
219	[BUG]  [BUGGY]  return  NodeUtil.getCost(root,  CostThreshhold.MAX_VALUE);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  NodeUtil.getCost(root,  CostThreshhold.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  NodeUtil.getCost(root,  CostThreshhold.MAX_VALUE);	  return    NodeUtil.getCost(root);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	110	None	replace
220	[BUG]  [BUGGY]  return  NodeUtil.getCost(root,  CostThreshhold.MIN_VALUE);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  NodeUtil.getCost(root,  CostThreshhold.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  NodeUtil.getCost(root,  CostThreshhold.MIN_VALUE);	  return    NodeUtil.getCost(root);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	110	None	replace
221	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.OSTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  Cost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.OSTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.OSTIMATED_IDENTIFIER_COST);	  return    getCost(root,    0,    Integer.MAX_VALUE,    Cost.ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  Cost	89	None	replace
222	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  COST.ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  COST  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  COST.ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  COST.ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    0,    Integer.MAX_VALUE,    Cost.ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  COST	89	None	replace
223	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.STIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  Cost  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.STIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.STIMATED_IDENTIFIER_COST);	  return    getCost(root,    0,    Integer.MAX_VALUE,    Cost.ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  Cost	89	None	replace
224	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  Cost  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    0,    Integer.MAX_VALUE,    Cost.ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  Cost	89	None	replace
225	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST  +  1);  [CE]  cannot  find  symbol  Cost  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST  +  1);	  return    getCost(root,    0,    Integer.MAX_VALUE,    Cost.ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  Cost	89	None	replace
226	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	94	None	replace
227	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	94	None	replace
228	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	94	None	replace
229	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	94	None	replace
230	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
231	[BUG]  [BUGGY]  node  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  node  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  node  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	node  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  node	94	None	replace
232	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	94	None	replace
233	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
234	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
235	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
236	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  null);  [CE]  cannot  find  symbol  compiler  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  null);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  null);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
237	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
238	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	54	None	replace
239	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild()  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild()  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild()  +  1);	  int    cost    =    getCost(root.getLastChild());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	78	None	replace
240	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild(),  MAX_COST);  [CE]  cannot  find  symbol  MAX_COST  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild(),  MAX_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild(),  MAX_COST);	  int    cost    =    getCost(root.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  MAX_COST	78	None	replace
241	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild(),  1);  [CE]  missing  return  statement  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild(),  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild(),  1);	  int    cost    =    getCost(root.getLastChild());    	non-compiled	[CE]  missing  return  statement	78	None	replace
242	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild(),  last);  [CE]  cannot  find  symbol  last  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild(),  last);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild(),  last);	  int    cost    =    getCost(root.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  last	78	None	replace
243	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  CostThreshold);  [CE]  cannot  find  symbol  CostThreshold  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  CostThreshold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  CostThreshold);	  return    getCost(root,    Integer.MAX_VALUE,    CostThreshhold);    	non-compiled	[CE]  cannot  find  symbol  CostThreshold	21	None	replace
244	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  CostThreshhold);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  CostThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  CostThreshhold);	  return    getCost(root,    Integer.MAX_VALUE,    CostThreshhold);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	21	None	replace
245	[BUG]  [BUGGY]  return  getCost(root,  Long.MAX_VALUE,  CostThreshold);  [CE]  cannot  find  symbol  CostThreshold  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Long.MAX_VALUE,  CostThreshold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Long.MAX_VALUE,  CostThreshold);	  return    getCost(root,    Integer.MAX_VALUE,    CostThreshhold);    	non-compiled	[CE]  cannot  find  symbol  CostThreshold	21	None	replace
246	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)/  3;	  return    getCost(root,    Integer.MAX_VALUE)+    3;    timeout    	compilable	timeout	19	1	replace
247	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  3;  timeout  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  3;	  return    getCost(root,    Integer.MAX_VALUE)+    3;    timeout    	compilable	timeout	19	1	replace
248	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  4;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)+  4;	  return    getCost(root,    Integer.MAX_VALUE)+    3;    timeout    	compilable	timeout	19	1	replace
249	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  4;  timeout  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  4;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  4;	  return    getCost(root,    Integer.MAX_VALUE)+    3;    timeout    	compilable	timeout	19	1	replace
250	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE)/  1;	  return    getCost(root,    Integer.MIN_VALUE)+    1;    timeout    	compilable	timeout	17	1	replace
251	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)/  1;  timeout  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE)/  1;	  return    getCost(root,    Integer.MIN_VALUE)+    1;    timeout    	compilable	timeout	17	1	replace
252	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE)+  2;	  return    getCost(root,    Integer.MIN_VALUE)+    1;    timeout    	compilable	timeout	17	1	replace
253	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  2;  timeout  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE)+  2;	  return    getCost(root,    Integer.MIN_VALUE)+    1;    timeout    	compilable	timeout	17	1	replace
254	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE)+  0;	  return    getCost(root,    Integer.MIN_VALUE)+    1;    timeout    	compilable	timeout	17	1	replace
255	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  0;  timeout  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE)+  0;	  return    getCost(root,    Integer.MIN_VALUE)+    1;    timeout    	compilable	timeout	17	1	replace
256	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE)+  3;	  return    getCost(root,    Integer.MIN_VALUE)+    1;    timeout    	compilable	timeout	17	1	replace
257	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  3;  timeout  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE)+  3;	  return    getCost(root,    Integer.MIN_VALUE)+    1;    timeout    	compilable	timeout	17	1	replace
258	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  4;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE)+  4;	  return    getCost(root,    Integer.MIN_VALUE)+    1;    timeout    	compilable	timeout	17	1	replace
259	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  4;  timeout  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  4;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE)+  4;	  return    getCost(root,    Integer.MIN_VALUE)+    1;    timeout    	compilable	timeout	17	1	replace
260	[BUG]  [BUGGY]  String  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
261	[BUG]  [BUGGY]  Node  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  incompatible  types	105	None	replace
262	[BUG]  [BUGGY]  String  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
263	[BUG]  [BUGGY]  Number  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Number  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Number  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	105	None	replace
264	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
265	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
266	[BUG]  [BUGGY]  Node  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
267	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
268	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
269	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
270	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  costThreshhold;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  costThreshhold;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  costThreshhold;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
271	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
272	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
273	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
274	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
275	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
276	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  *  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  *  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  *  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	75	None	add
277	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  *  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  *  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  *  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	75	None	add
278	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	75	None	add
279	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  *  1);  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  *  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    int  cost  =  getCost(root,  Integer.MAX_VALUE  *  1);	  timeout    	non-compiled	[CE]  unreachable  statement	75	None	add
280	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  *  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  *  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  *  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	75	None	add
281	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  *  2);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  *  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  *  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	75	None	add
282	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	75	None	add
283	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getMaxCost(root);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getMaxCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    int  maxCost  =  getMaxCost(root);	  timeout    	non-compiled	[CE]  cannot  find  symbol	75	None	add
284	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
285	[BUG]  [BUGGY]  node  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  node  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  node  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	node  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  node	69	None	replace
286	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  nodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  nodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  nodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
287	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  null);  [CE]  cannot  find  symbol  compiler  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  null);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeTraversal.traverse(compiler,  root,  null);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
288	[BUG]  [BUGGY]  nodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  nodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	nodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
289	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  null);  [CE]  cannot  find  symbol  compiler  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  null);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  null);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
290	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  int  maxCost  =  getMaxCost(root.getLastChild());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  int  maxCost  =  getMaxCost(root.getLastChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    int  maxCost  =  getMaxCost(root.getLastChild());	  timeout    	non-compiled	[CE]  cannot  find  symbol	80	None	add
291	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  Node  last  =  root.getLastChild();  [CE]  unreachable  statement  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  Node  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    Node  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  unreachable  statement	80	None	add
292	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  int  cost  =  getCost(root.getLastChild());  [CE]  unreachable  statement  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  int  cost  =  getCost(root.getLastChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    int  cost  =  getCost(root.getLastChild());	  timeout    	non-compiled	[CE]  unreachable  statement	80	None	add
293	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  InlineCostEstimator  <  String>  cost  =  getCost(root.getLastChild());  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  InlineCostEstimator  <  String>  cost  =  getCost(root.getLastChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    InlineCostEstimator  <  String>  cost  =  getCost(root.getLastChild());	  timeout    	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	80	None	add
294	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]                                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    char  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  incompatible  types	80	None	add
295	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  int  cost  =  getCost(root.getFirstChild());  [CE]  unreachable  statement  [FE]                                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  int  cost  =  getCost(root.getFirstChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    int  cost  =  getCost(root.getFirstChild());	  timeout    	non-compiled	[CE]  unreachable  statement	80	None	add
296	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  int  maxCost  =  getMaxCost(root.getFirstChild());  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  int  maxCost  =  getMaxCost(root.getFirstChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    int  maxCost  =  getMaxCost(root.getFirstChild());	  timeout    	non-compiled	[CE]  cannot  find  symbol	80	None	add
297	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  int  maxCost  =  root.getLastChild();  [CE]  incompatible  types  [FE]                                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  int  maxCost  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    int  maxCost  =  root.getLastChild();	  timeout    	non-compiled	[CE]  incompatible  types	80	None	add
298	[BUG]  [BUGGY]  return  getCost(root,  0,  cost,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  cost  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  cost,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  cost,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);	  return    getCost(root,    0,    ESTIMATED_IDENTIFIER_COST,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	88	None	replace
299	[BUG]  [BUGGY]  return  getCost(root,  0,  maxCost,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  maxCost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  maxCost,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  maxCost,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);	  return    getCost(root,    0,    ESTIMATED_IDENTIFIER_COST,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  maxCost	88	None	replace
300	[BUG]  [BUGGY]  return  getCost(root,  0,  costThreshhold,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  costThreshhold  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  costThreshhold,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  costThreshhold,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);	  return    getCost(root,    0,    ESTIMATED_IDENTIFIER_COST,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	88	None	replace
301	[BUG]  [BUGGY]  return  getCost(root,  0,  cost,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  cost  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  cost,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  cost,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    0,    ESTIMATED_IDENTIFIER_COST,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	88	None	replace
302	[BUG]  [BUGGY]  return  getCost(root,  0,  ESTIMATED_IDENTIFIER_COST,  cost,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  cost  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  ESTIMATED_IDENTIFIER_COST,  cost,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  ESTIMATED_IDENTIFIER_COST,  cost,  Integer.MAX_VALUE);	  return    getCost(root,    0,    ESTIMATED_IDENTIFIER_COST,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	88	None	replace
303	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    0,    ESTIMATED_IDENTIFIER_COST,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	88	None	replace
304	[BUG]  [BUGGY]  return  getCost(root,  0,  size,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  size  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  size,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  size,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);	  return    getCost(root,    0,    ESTIMATED_IDENTIFIER_COST,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  size	88	None	replace
305	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
306	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
307	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
308	[BUG]  [BUGGY]  Integer  cost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
309	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  MAX_VALUE);	  return    getCost(root,    0,    Integer.MAX_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	1	None	replace
310	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  totalCost);  [CE]  cannot  find  symbol  totalCost  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  totalCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  totalCost);	  return    getCost(root,    0,    Integer.MAX_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  totalCost	1	None	replace
311	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  minCost);  [CE]  cannot  find  symbol  minCost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  minCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  minCost);	  return    getCost(root,    0,    Integer.MAX_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  minCost	1	None	replace
312	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  *  2);	  return    getCost(root,    Integer.MAX_VALUE    -    2);    timeout    	compilable	timeout	74	1	replace
313	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  2);  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  *  2);	  return    getCost(root,    Integer.MAX_VALUE    -    2);    timeout    	compilable	timeout	74	1	replace
314	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	124	None	replace
315	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  1;  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	124	None	replace
316	[BUG]  [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	124	None	replace
317	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE)+  1;  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	124	None	replace
318	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)-  1;  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	124	None	replace
319	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
320	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  2);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	45	None	add
321	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	45	None	add
322	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	45	None	add
323	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  2);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	45	None	add
324	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  2);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	45	None	add
325	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	45	None	add
326	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  2);  [CE]  unreachable  statement  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    int  cost  =  getCost(root,  Integer.MAX_VALUE  +  2);	  timeout    	non-compiled	[CE]  unreachable  statement	45	None	add
327	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  unreachable  statement  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  timeout    	non-compiled	[CE]  unreachable  statement	45	None	add
328	[BUG]  [BUGGY]  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	93	None	replace
329	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
330	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
331	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	93	None	replace
332	[BUG]  [BUGGY]  int  maxCost  =  getMinimumCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMinimumCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMinimumCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
333	[BUG]  [BUGGY]  Node  last  =  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  last  =  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  last  =  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  incompatible  types	93	None	replace
334	[BUG]  [BUGGY]  Node  last  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  last  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  last  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  incompatible  types	93	None	replace
335	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  /  1  +  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    timeout    	compilable	timeout	91	1	replace
336	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1  +  1);  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  /  1  +  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    timeout    	compilable	timeout	91	1	replace
337	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  *  1  +  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    timeout    	compilable	timeout	91	1	replace
338	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1  +  1);  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  *  1  +  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    timeout    	compilable	timeout	91	1	replace
339	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1,  maxCost);	  return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    timeout    	non-compiled	[CE]  cannot  find  symbol  maxCost	91	None	replace
340	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold  +  1);  [CE]  cannot  find  symbol  costThreshhold  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold  +  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    timeout    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	91	None	replace
341	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  maxCost;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  maxCost;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  maxCost;	  return    getCost(root,    Integer.MAX_VALUE,    cost;    	non-compiled	[CE]  ')'  expected	24	None	replace
342	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost  +  1);  [CE]  cannot  find  symbol  cost  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  cost  +  1);	  return    getCost(root,    Integer.MAX_VALUE,    cost;    	non-compiled	[CE]  cannot  find  symbol  cost	24	None	replace
343	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost  -  1);  [CE]  cannot  find  symbol  cost  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  cost  -  1);	  return    getCost(root,    Integer.MAX_VALUE,    cost;    	non-compiled	[CE]  cannot  find  symbol  cost	24	None	replace
344	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  costThreshhold;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  costThreshhold;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  costThreshhold;	  return    getCost(root,    Integer.MAX_VALUE,    cost;    	non-compiled	[CE]  ')'  expected	24	None	replace
345	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  cost;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  cost;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  cost;	  return    getCost(root,    Integer.MAX_VALUE,    cost;    	non-compiled	[CE]  ')'  expected	24	None	replace
346	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost  -  1;  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost  -  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  cost  -  1;	  return    getCost(root,    Integer.MAX_VALUE,    cost;    	non-compiled	[CE]  ')'  expected	24	None	replace
347	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	103	None	replace
348	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	103	None	replace
349	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	103	None	replace
350	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
351	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	103	None	replace
352	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	103	None	replace
353	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  CostThreshhold);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  CostThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  CostThreshhold);	  return    getCost(root,    0,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	2	None	replace
354	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  COST_SIZE);  [CE]  cannot  find  symbol  COST_SIZE  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  COST_SIZE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  COST_SIZE);	  return    getCost(root,    0,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  COST_SIZE	2	None	replace
355	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  size);  [CE]  cannot  find  symbol  size  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  size);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  size);	  return    getCost(root,    0,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  size	2	None	replace
356	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	101	None	replace
357	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaximumCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaximumCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaximumCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
358	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	101	None	replace
359	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	106	None	replace
360	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  unreachable  statement	106	None	replace
361	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	106	None	replace
362	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root.getLastChild(),  cost);  [CE]  cannot  find  symbol  cost  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root.getLastChild(),  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root.getLastChild(),  cost);	  int    maxCost    =    getMaxCost(root.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  cost	83	None	replace
363	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root.getFirstChild());  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root.getFirstChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root.getFirstChild());	  int    maxCost    =    getMaxCost(root.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
364	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  root.getLastChild());  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  root.getLastChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  root.getLastChild());	  int    maxCost    =    getMaxCost(root.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
365	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root.getLastChild(),  last);  [CE]  cannot  find  symbol  last  [FE]                                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root.getLastChild(),  last);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root.getLastChild(),  last);	  int    maxCost    =    getMaxCost(root.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  last	83	None	replace
366	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  cost.getLastChild());  [CE]  cannot  find  symbol  cost  [FE]                                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  cost.getLastChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  cost.getLastChild());	  int    maxCost    =    getMaxCost(root.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  cost	83	None	replace
367	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root.getLastChild(),  size);  [CE]  cannot  find  symbol  size  [FE]                                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root.getLastChild(),  size);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root.getLastChild(),  size);	  int    maxCost    =    getMaxCost(root.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  size	83	None	replace
368	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)/  0;	  return    getCost(root,    Integer.MAX_VALUE)+    0;    timeout    	compilable	timeout	15	1	replace
369	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  0;  timeout  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  0;	  return    getCost(root,    Integer.MAX_VALUE)+    0;    timeout    	compilable	timeout	15	1	replace
370	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  this.maxCost,  cost);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  this.maxCost,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  this.maxCost,  cost);	  return    getCost(root,    Integer.MAX_VALUE,    this.maxCost);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	117	None	replace
371	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  this.maxCost);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  this.maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  this.maxCost);	  return    getCost(root,    Integer.MAX_VALUE,    this.maxCost);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	117	None	replace
372	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  this.maxCost,  costThreshhold);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  this.maxCost,  costThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  this.maxCost,  costThreshhold);	  return    getCost(root,    Integer.MAX_VALUE,    this.maxCost);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	117	None	replace
373	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  ESTIMATED_IDENTIFIER_COST);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MIN_VALUE,    costThreshhold);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	31	None	replace
374	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE,    costThreshhold);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	31	None	replace
375	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  maximumCost);  [CE]  cannot  find  symbol  maximumCost  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  maximumCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  maximumCost);	  return    getCost(root,    Integer.MIN_VALUE,    costThreshhold);    	non-compiled	[CE]  cannot  find  symbol  maximumCost	31	None	replace
376	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  minCost);  [CE]  cannot  find  symbol  minCost  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  minCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  minCost);	  return    getCost(root,    Integer.MIN_VALUE,    costThreshhold);    	non-compiled	[CE]  cannot  find  symbol  minCost	31	None	replace
377	[BUG]  [BUGGY]  Return  getCost(root,  Integer.MIN_VALUE,  maxCost);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Return  getCost(root,  Integer.MIN_VALUE,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Return  getCost(root,  Integer.MIN_VALUE,  maxCost);	  return    getCost(root,    Integer.MIN_VALUE,    costThreshhold);    	non-compiled	[CE]  ';'  expected	31	None	replace
378	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  4;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)/  4;	  return    getCost(root,    Integer.MAX_VALUE)/    1;    timeout    	compilable	timeout	9	1	replace
379	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  4;  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  4;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  4;	  return    getCost(root,    Integer.MAX_VALUE)/    1;    timeout    	compilable	timeout	9	1	replace
380	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)/  1  +  1;	  return    getCost(root,    Integer.MAX_VALUE)/    1;    timeout    	compilable	timeout	9	1	replace
381	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1  +  1;  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  1  +  1;	  return    getCost(root,    Integer.MAX_VALUE)/    1;    timeout    	compilable	timeout	9	1	replace
382	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  2  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)/  2  +  1;	  return    getCost(root,    Integer.MAX_VALUE)/    1;    timeout    	compilable	timeout	9	1	replace
383	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  2  +  1;  timeout  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  2  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  2  +  1;	  return    getCost(root,    Integer.MAX_VALUE)/    1;    timeout    	compilable	timeout	9	1	replace
384	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  0;	  timeout    	non-compiled	[CE]  not  a  statement	14	None	add
385	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	add
386	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  0;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  0;	  timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	add
387	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  0;  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    int  cost  =  getCost(root,  Integer.MAX_VALUE)+  0;	  timeout    	non-compiled	[CE]  unreachable  statement	14	None	add
388	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	14	None	add
389	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  Integer.MAX_VALUE)+  0;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  Integer.MAX_VALUE)+  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    Integer.MAX_VALUE)+  0;	  timeout    	non-compiled	[CE]  not  a  statement	14	None	add
390	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  0;  [CE]  unreachable  statement  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  0;	  timeout    	non-compiled	[CE]  unreachable  statement	14	None	add
391	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	14	None	add
392	[BUG]  [BUGGY]  Return  getCost(root,  Integer.MAX_VALUE,  cost);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Return  getCost(root,  Integer.MAX_VALUE,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Return  getCost(root,  Integer.MAX_VALUE,  cost);	  Return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  ';'  expected	72	None	replace
393	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE,  maxCost);	  Return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  maxCost	72	None	replace
394	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE,  maxCost);	  Return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  maxCost	72	None	replace
395	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
396	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
397	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	90	None	add
398	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	90	None	add
399	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1  +  1);	  timeout    	non-compiled	[CE]  unreachable  statement	90	None	add
400	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	90	None	add
401	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	90	None	add
402	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	90	None	add
403	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	90	None	add
404	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	90	None	add
405	[BUG]  [BUGGY]  String  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  last  =  root.getLastChild();	  char    last    =    root.getLastChild();    	non-compiled	[CE]  incompatible  types	79	None	replace
406	[BUG]  [BUGGY]  int  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  last  =  root.getLastChild();	  char    last    =    root.getLastChild();    	non-compiled	[CE]  incompatible  types	79	None	replace
407	[BUG]  [BUGGY]  Char  last  =  root.getLastChild();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Char  last  =  root.getLastChild();	  char    last    =    root.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
408	[BUG]  [BUGGY]  String  last  =  root.getFirstChild();  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  last  =  root.getFirstChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  last  =  root.getFirstChild();	  char    last    =    root.getLastChild();    	non-compiled	[CE]  incompatible  types	79	None	replace
409	[BUG]  [BUGGY]  String  last  =  roots.getLastChild();  [CE]  cannot  find  symbol  roots  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  last  =  roots.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  last  =  roots.getLastChild();	  char    last    =    root.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  roots	79	None	replace
410	[BUG]  [BUGGY]  Number  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]                                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Number  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Number  last  =  root.getLastChild();	  char    last    =    root.getLastChild();    	non-compiled	[CE]  incompatible  types	79	None	replace
411	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  MISSING_IDENTIFIER_COST);  [CE]  cannot  find  symbol  MISSING_IDENTIFIER_COST  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  MISSING_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  MISSING_IDENTIFIER_COST);	  return    getCost(root,    Integer.MIN_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  MISSING_IDENTIFIER_COST	22	None	replace
412	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  totalCost);  [CE]  cannot  find  symbol  totalCost  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  totalCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  totalCost);	  return    getCost(root,    Integer.MIN_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  totalCost	22	None	replace
413	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
414	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
415	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
416	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
417	[BUG]  [BUGGY]  String  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  incompatible  types	52	None	replace
418	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
419	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
420	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
421	[BUG]  [BUGGY]  String  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  incompatible  types	59	None	replace
422	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
423	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
424	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(value,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  value  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(value,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(value,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  value	59	None	replace
425	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
426	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
427	[BUG]  [BUGGY]  Integer  cost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
428	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
429	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
430	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
431	[BUG]  [BUGGY]  int  maxCost  =  getMinCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMinCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMinCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
432	[BUG]  [BUGGY]  long  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  long  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	long  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
433	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	68	None	replace
434	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	68	None	replace
435	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	68	None	replace
436	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	68	None	replace
437	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
438	[BUG]  [BUGGY]  node  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  node  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  node  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	node  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  node	68	None	replace
439	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	99	None	replace
440	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	99	None	replace
441	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
442	[BUG]  [BUGGY]  node  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  node  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  node  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	node  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  node	99	None	replace
443	[BUG]  [BUGGY]  nodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  nodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	nodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	99	None	replace
444	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	99	None	replace
445	[BUG]  [BUGGY]  return  getCost(root,  cost,  0,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  cost  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  cost,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  cost,  0,  Integer.MAX_VALUE);	  return    getCost(root,    maxCost,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	6	None	replace
446	[BUG]  [BUGGY]  return  getCost(root,  costThreshhold,  0,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  costThreshhold  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  costThreshhold,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  costThreshhold,  0,  Integer.MAX_VALUE);	  return    getCost(root,    maxCost,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	6	None	replace
447	[BUG]  [BUGGY]  return  getCost(root,  ESTIMATED_IDENTIFIER_COST,  0,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  ESTIMATED_IDENTIFIER_COST,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  ESTIMATED_IDENTIFIER_COST,  0,  Integer.MAX_VALUE);	  return    getCost(root,    maxCost,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	6	None	replace
448	[BUG]  [BUGGY]  return  getCost(root,  CostThreshhold,  0,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  CostThreshhold,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  CostThreshhold,  0,  Integer.MAX_VALUE);	  return    getCost(root,    maxCost,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	6	None	replace
449	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  0,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  0,  Integer.MAX_VALUE);	  return    getCost(root,    maxCost,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	6	None	replace
450	[BUG]  [BUGGY]  return  getCost(root,  Cost.MIN_VALUE,  0,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  Cost  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Cost.MIN_VALUE,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Cost.MIN_VALUE,  0,  Integer.MAX_VALUE);	  return    getCost(root,    maxCost,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  Cost	6	None	replace
451	[BUG]  [BUGGY]  return  getCost(root,  size,  0,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  size  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  size,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  size,  0,  Integer.MAX_VALUE);	  return    getCost(root,    maxCost,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  size	6	None	replace
452	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
453	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
454	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
455	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
456	[BUG]  [BUGGY]  String  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  incompatible  types	64	None	replace
457	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
458	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
459	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE  -  1);  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    int  cost  =  getCost(root,  Integer.MIN_VALUE  -  1);	  timeout    	non-compiled	[CE]  unreachable  statement	29	None	add
460	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	29	None	add
461	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	29	None	add
462	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE  -  1);  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE  -  1);	  timeout    	non-compiled	[CE]  unreachable  statement	29	None	add
463	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1,  cost);  [CE]  cannot  find  symbol  cost  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1,  cost);	  timeout    	non-compiled	[CE]  cannot  find  symbol  cost	29	None	add
464	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	29	None	add
465	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	29	None	add
466	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1,  maxCost);	  timeout    	non-compiled	[CE]  cannot  find  symbol  maxCost	29	None	add
467	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  missing  return  statement	98	None	replace
468	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  missing  return  statement	98	None	replace
469	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  missing  return  statement	98	None	replace
470	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  2);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  2);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  missing  return  statement	98	None	replace
471	[BUG]  [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  missing  return  statement	98	None	replace
472	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	8	None	add
473	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)/  1;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    NodeUtil.copyCost(root,  Integer.MAX_VALUE)/  1;	  timeout    	non-compiled	[CE]  not  a  statement	8	None	add
474	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;	  timeout    	non-compiled	[CE]  unreachable  statement	8	None	add
475	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol	8	None	add
476	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)/  2;  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)/  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    int  cost  =  getCost(root,  Integer.MAX_VALUE)/  2;	  timeout    	non-compiled	[CE]  unreachable  statement	8	None	add
477	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    int  cost  =  getCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	8	None	add
478	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	8	None	add
479	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  2;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  2;	  timeout    	non-compiled	[CE]  cannot  find  symbol	8	None	add
480	[BUG]  [BUGGY]  int  last  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  last  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  last  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    char    last    =    root.getLastChild();    	non-compiled	[CE]  missing  return  statement	116	None	replace
481	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  String  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  String  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  String  last  =  root.getLastChild();	  return    getCost(root,    Integer.MIN_VALUE);    char    last    =    root.getLastChild();    	non-compiled	[CE]  incompatible  types	116	None	replace
482	[BUG]  [BUGGY]  Integer  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  last  =  root.getLastChild();	  return    getCost(root,    Integer.MIN_VALUE);    char    last    =    root.getLastChild();    	non-compiled	[CE]  incompatible  types	116	None	replace
483	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  char  last  =  root.getLastChild();	  return    getCost(root,    Integer.MIN_VALUE);    char    last    =    root.getLastChild();    	non-compiled	[CE]  incompatible  types	116	None	replace
484	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	add
485	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)-  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    NodeUtil.copyCost(root,  Integer.MAX_VALUE)-  1;	  timeout    	non-compiled	[CE]  not  a  statement	12	None	add
486	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;	  timeout    	non-compiled	[CE]  unreachable  statement	12	None	add
487	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	add
488	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    int  cost  =  getCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	12	None	add
489	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	add
490	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	add
491	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	12	None	add
492	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  maximumCost);  [CE]  cannot  find  symbol  maximumCost  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  maximumCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  maximumCost);	  return    getCost(root,    0,    Integer.MAX_VALUE,    costThreshhold);    	non-compiled	[CE]  cannot  find  symbol  maximumCost	7	None	replace
493	[BUG]  [BUGGY]  Return  getCost(root,  0,  Integer.MAX_VALUE,  maxCost);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Return  getCost(root,  0,  Integer.MAX_VALUE,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Return  getCost(root,  0,  Integer.MAX_VALUE,  maxCost);	  return    getCost(root,    0,    Integer.MAX_VALUE,    costThreshhold);    	non-compiled	[CE]  ';'  expected	7	None	replace
494	[BUG]  [BUGGY]  return  getCost(root,  0,  value,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  value,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  value,  Integer.MAX_VALUE);	  return    getCost(root,    0,    maxCost,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  value	3	None	replace
495	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)+  2  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    timeout    	compilable	timeout	86	1	replace
496	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2  +  1;  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  2  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    timeout    	compilable	timeout	86	1	replace
497	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
498	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
499	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
500	[BUG]  [BUGGY]  String  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  incompatible  types	38	None	replace
501	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
502	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
503	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
504	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
505	[BUG]  [BUGGY]  return  root.getFirstChild().getString();  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  root.getFirstChild().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  root.getFirstChild().getString();	  return    root.getLastChild().getString();    	non-compiled	[CE]  incompatible  types	82	None	replace
506	[BUG]  [BUGGY]  String  last  =  root.getLastChild().getString();  [CE]  missing  return  statement  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  last  =  root.getLastChild().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  last  =  root.getLastChild().getString();	  return    root.getLastChild().getString();    	non-compiled	[CE]  missing  return  statement	82	None	replace
507	[BUG]  [BUGGY]  return  root.getLastChild().getString()  +  1;  [CE]  incompatible  types  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  root.getLastChild().getString()  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  root.getLastChild().getString()  +  1;	  return    root.getLastChild().getString();    	non-compiled	[CE]  incompatible  types	82	None	replace
508	[BUG]  [BUGGY]  return  root.getLastChild().getNext().getString();  [CE]  incompatible  types  [FE]                                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  root.getLastChild().getNext().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  root.getLastChild().getNext().getString();	  return    root.getLastChild().getString();    	non-compiled	[CE]  incompatible  types	82	None	replace
509	[BUG]  [BUGGY]  return  root.getLastChild().getCost();  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  root.getLastChild().getCost();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  root.getLastChild().getCost();	  return    root.getLastChild().getString();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
510	[BUG]  [BUGGY]  int  cost  =  root.getLastChild().getString();  [CE]  incompatible  types  [FE]                                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  root.getLastChild().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  root.getLastChild().getString();	  return    root.getLastChild().getString();    	non-compiled	[CE]  incompatible  types	82	None	replace
511	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
512	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
513	[BUG]  [BUGGY]  Integer  cost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
514	[BUG]  [BUGGY]  int  maxCost  =  getMinCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMinCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMinCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
515	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  2);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	73	None	add
516	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  2);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	73	None	add
517	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  2);  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    int  cost  =  getCost(root,  Integer.MAX_VALUE  -  2);	  timeout    	non-compiled	[CE]  unreachable  statement	73	None	add
518	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  2);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	73	None	add
519	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	73	None	add
520	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	73	None	add
521	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	73	None	add
522	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	73	None	add
523	[BUG]  [BUGGY]  return  getCost(root,  cost);  [CE]  cannot  find  symbol  cost  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  cost);	  return    getCost(root);    timeout    	non-compiled	[CE]  cannot  find  symbol  cost	113	None	replace
524	[BUG]  [BUGGY]  return  getCost(root,  costThreshhold);  [CE]  cannot  find  symbol  costThreshhold  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  costThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  costThreshhold);	  return    getCost(root);    timeout    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	113	None	replace
525	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root);	  return    getCost(root);    timeout    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
526	[BUG]  [BUGGY]  return  getCost(root,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  maxCost);	  return    getCost(root);    timeout    	non-compiled	[CE]  cannot  find  symbol  maxCost	113	None	replace
527	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  3;  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    int  cost  =  getCost(root,  Integer.MAX_VALUE)+  3;	  timeout    	non-compiled	[CE]  unreachable  statement	18	None	add
528	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  3;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  3;	  timeout    	non-compiled	[CE]  not  a  statement	18	None	add
529	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	18	None	add
530	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  3;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  3;	  timeout    	non-compiled	[CE]  cannot  find  symbol	18	None	add
531	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	18	None	add
532	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  Integer.MAX_VALUE)+  3;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  Integer.MAX_VALUE)+  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    Integer.MAX_VALUE)+  3;	  timeout    	non-compiled	[CE]  not  a  statement	18	None	add
533	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  3;  [CE]  unreachable  statement  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  3;	  timeout    	non-compiled	[CE]  unreachable  statement	18	None	add
534	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  Node  last  =  root.getLastChild();  [CE]  unreachable  statement  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  Node  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    Node  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  unreachable  statement	18	None	add
535	[BUG]  [BUGGY]  timeout  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getFirstChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root.getFirstChild());	  return    getCost(root.getLastChild());    timeout    	compilable	timeout	81	1	replace
536	[BUG]  [BUGGY]  return  getCost(root.getFirstChild());  timeout  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getFirstChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getFirstChild());	  return    getCost(root.getLastChild());    timeout    	compilable	timeout	81	1	replace
537	[BUG]  [BUGGY]  return  getCost(root.getLastChild(),  cost);  [CE]  cannot  find  symbol  cost  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild(),  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getLastChild(),  cost);	  return    getCost(root.getLastChild());    timeout    	non-compiled	[CE]  cannot  find  symbol  cost	81	None	replace
538	[BUG]  [BUGGY]  return  getCost(root.getLastChild(),  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild(),  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getLastChild(),  maxCost);	  return    getCost(root.getLastChild());    timeout    	non-compiled	[CE]  cannot  find  symbol  maxCost	81	None	replace
539	[BUG]  [BUGGY]  return  getCost(root.getLastChild()  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild()  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getLastChild()  +  1);	  return    getCost(root.getLastChild());    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	81	None	replace
540	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold.MAX_VALUE);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE,    DEFAULT_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	95	None	replace
541	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
542	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
543	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)-  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)-  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)-  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
544	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)/  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)/  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)/  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
545	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  missing  return  statement	56	None	replace
546	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
547	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
548	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  missing  return  statement	56	None	replace
549	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  maxCost);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    cost);    	non-compiled	[CE]  cannot  find  symbol  maxCost	53	None	replace
550	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);  [CE]  cannot  find  symbol  cost  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  cost);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    cost);    	non-compiled	[CE]  cannot  find  symbol  cost	53	None	replace
551	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  costThreshhold);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    cost);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
552	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  /  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE  /  1);	  return    getCost(root,    Integer.MIN_VALUE    -    1);    timeout    	compilable	timeout	30	1	replace
553	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  /  1);  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  /  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE  /  1);	  return    getCost(root,    Integer.MIN_VALUE    -    1);    timeout    	compilable	timeout	30	1	replace
554	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE  -  2);	  return    getCost(root,    Integer.MIN_VALUE    -    1);    timeout    	compilable	timeout	30	1	replace
555	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  2);  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE  -  2);	  return    getCost(root,    Integer.MIN_VALUE    -    1);    timeout    	compilable	timeout	30	1	replace
556	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE  -  1);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE  -  1);	  return    getCost(root,    Integer.MIN_VALUE    -    1);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	30	None	replace
557	[BUG]  [BUGGY]  int  cost  =  getCost(root,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  maxCost);	  int    cost    =    getCost(root);    	non-compiled	[CE]  cannot  find  symbol  maxCost	77	None	replace
558	[BUG]  [BUGGY]  int  cost  =  getCostThreshhold(root);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCostThreshhold(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCostThreshhold(root);	  int    cost    =    getCost(root);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
559	[BUG]  [BUGGY]  int  cost  =  getCost(root,  ESTIMATED_IDENTIFIER_COST);  [CE]  missing  return  statement  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  ESTIMATED_IDENTIFIER_COST);	  int    cost    =    getCost(root);    	non-compiled	[CE]  missing  return  statement	77	None	replace
560	[BUG]  [BUGGY]  int  cost  =  getCost(root.getString());  [CE]  no  suitable  method  found  for  getCost(String)  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getString());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getString());	  int    cost    =    getCost(root);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(String)	77	None	replace
561	[BUG]  [BUGGY]  int  cost  =  getCost(root)+  1;  [CE]  missing  return  statement  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root)+  1;	  int    cost    =    getCost(root);    	non-compiled	[CE]  missing  return  statement	77	None	replace
562	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  cannot  find  symbol  compiler  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  compiler	108	None	replace
563	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  cannot  find  symbol  compiler  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  compiler	108	None	replace
564	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  compiler	108	None	replace
565	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  compiler	108	None	replace
566	[BUG]  [BUGGY]  node  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  cannot  find  symbol  node  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  node  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	node  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  node	108	None	replace
567	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  maxCost,  new  AssertionFailedError());  [CE]  cannot  find  symbol  compiler  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  maxCost,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  maxCost,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  compiler	108	None	replace
568	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE  +  2);	  return    getCost(root,    Integer.MIN_VALUE    +    1);    timeout    	compilable	timeout	34	1	replace
569	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  2);  timeout  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE  +  2);	  return    getCost(root,    Integer.MIN_VALUE    +    1);    timeout    	compilable	timeout	34	1	replace
570	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE  +  1);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE  +  1);	  return    getCost(root,    Integer.MIN_VALUE    +    1);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	34	None	replace
571	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	62	None	replace
572	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	62	None	replace
573	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	62	None	replace
574	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  null);  [CE]  cannot  find  symbol  compiler  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  null);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  null);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	62	None	replace
575	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	62	None	replace
576	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
577	[BUG]  [BUGGY]  Integer  cost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
578	[BUG]  [BUGGY]  int  maxCost  =  getMinCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMinCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMinCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
579	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
580	[BUG]  [BUGGY]  Node  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
581	[BUG]  [BUGGY]  Integer  maxCost  =  getMinCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMinCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMinCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
582	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
583	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  cost);  int  maxCost  =  getMaxCost(root);  [CE]  cannot  find  symbol  cost  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  cost);  int  maxCost  =  getMaxCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  cost);  int  maxCost  =  getMaxCost(root);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root);    	non-compiled	[CE]  cannot  find  symbol  cost	70	None	replace
584	[BUG]  [BUGGY]  String  last  =  root.getFirstChild().getString();  [CE]  missing  return  statement  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  last  =  root.getFirstChild().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  last  =  root.getFirstChild().getString();	  char    last    =    root.getLastChild().getString();    	non-compiled	[CE]  missing  return  statement	84	None	replace
585	[BUG]  [BUGGY]  int  last  =  root.getLastChild().getString();  [CE]  incompatible  types  [FE]                                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  last  =  root.getLastChild().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  last  =  root.getLastChild().getString();	  char    last    =    root.getLastChild().getString();    	non-compiled	[CE]  incompatible  types	84	None	replace
586	[BUG]  [BUGGY]  Char  last  =  root.getLastChild().getString();  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Char  last  =  root.getLastChild().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Char  last  =  root.getLastChild().getString();	  char    last    =    root.getLastChild().getString();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
587	[BUG]  [BUGGY]  String  last  =  root.getLestChild().getString();  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  last  =  root.getLestChild().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  last  =  root.getLestChild().getString();	  char    last    =    root.getLastChild().getString();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
588	[BUG]  [BUGGY]  String  last  =  roots.getLastChild().getString();  [CE]  cannot  find  symbol  roots  [FE]                                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  last  =  roots.getLastChild().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  last  =  roots.getLastChild().getString();	  char    last    =    root.getLastChild().getString();    	non-compiled	[CE]  cannot  find  symbol  roots	84	None	replace
589	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    return    maxCost    +    1;    	compilable	timeout	123	1	replace
590	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    return    maxCost    +    1;    	compilable	timeout	123	1	replace
591	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  2;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    return    maxCost    +    1;    	compilable	timeout	123	1	replace
592	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  2;  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  2;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    return    maxCost    +    1;    	compilable	timeout	123	1	replace
593	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  return  maxCost  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  return  maxCost  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    return    maxCost    +    1;    	compilable	timeout	123	1	replace
594	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  return  maxCost  +  1;  timeout  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  return  maxCost  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  return  maxCost  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    return    maxCost    +    1;    	compilable	timeout	123	1	replace
595	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  -  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  -  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    return    maxCost    +    1;    	compilable	timeout	123	1	replace
596	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  -  1;  timeout  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  -  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  -  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    return    maxCost    +    1;    	compilable	timeout	123	1	replace
597	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    return    maxCost    +    1;    	compilable	timeout	123	1	replace
598	[BUG]  [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;  timeout  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE);  return  maxCost  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    return    maxCost    +    1;    	compilable	timeout	123	1	replace
599	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  COST_SIZE);  [CE]  cannot  find  symbol  COST_SIZE  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  COST_SIZE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  COST_SIZE);	  return    getCost(root,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  COST_SIZE	25	None	replace
600	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  COMMA_SIZE);  [CE]  cannot  find  symbol  COMMA_SIZE  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  COMMA_SIZE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  COMMA_SIZE);	  return    getCost(root,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  COMMA_SIZE	25	None	replace
601	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE  *  1);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE  *  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE  *  1);	  return    getCost(root,    Integer.MAX_VALUE    *    1);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	76	None	replace
602	[BUG]  [BUGGY]  return  getSize(root,  Integer.MAX_VALUE  *  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getSize(root,  Integer.MAX_VALUE  *  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getSize(root,  Integer.MAX_VALUE  *  1);	  return    getCost(root,    Integer.MAX_VALUE    *    1);    timeout    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
603	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST,  cost);  [CE]  cannot  find  symbol  cost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST,  cost);	  return    getCost(root,    Integer.MAX_VALUE,    ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  cost	20	None	replace
604	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST,  maxCost);  [CE]  cannot  find  symbol  maxCost  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST,  maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST,  maxCost);	  return    getCost(root,    Integer.MAX_VALUE,    ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  maxCost	20	None	replace
605	[BUG]  [BUGGY]  return  getCost(root,  Long.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [CE]  no  suitable  method  found  for  getCost(Node,long,int)  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Long.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Long.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,long,int)	20	None	replace
606	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  String  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  String  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  String  last  =  root.getLastChild();	  return    getCost(root,    Integer.MIN_VALUE);    char    last    =    root.getLastChild();    	non-compiled	[CE]  incompatible  types	116	None	replace
607	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root.getLastChild(),  value);  [CE]  cannot  find  symbol  value  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root.getLastChild(),  value);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root.getLastChild(),  value);	  int    maxCost    =    getMaxCost(root.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  value	83	None	replace
608	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost!=  0)  {  return  cost;  }  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost!=  0)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost!=  0)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    ==    0)    {    return    cost;    }    	non-compiled	[CE]  missing  return  statement	119	None	replace
609	[BUG]  [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost  ==  -1)  {  return  cost;  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost  ==  -1)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getFirstChild());  if(cost  ==  -1)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    ==    0)    {    return    cost;    }    	non-compiled	[CE]  missing  return  statement	119	None	replace
610	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  MULTIPLE_IDENTIFIER_COST);  [CE]  cannot  find  symbol  MULTIPLE_IDENTIFIER_COST  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  MULTIPLE_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  MULTIPLE_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    MULTIPLE_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  MULTIPLE_IDENTIFIER_COST	118	None	replace
611	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE  -  1);  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    int  maxCost  =  getCost(root,  Integer.MIN_VALUE  -  1);	  timeout    	non-compiled	[CE]  unreachable  statement	29	None	add
612	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	29	None	add
613	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	29	None	add
614	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
615	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompileSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompileSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompileSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	99	None	replace
616	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  nodeUtil  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  nodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol  nodeUtil	49	None	replace
617	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
618	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
619	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	107	None	replace
620	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  cost  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  cost  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  cost	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  not  a  statement	107	None	replace
621	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  costThresh  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  costThresh  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  costThresh	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  not  a  statement	107	None	replace
622	[BUG]  [BUGGY]  NodeUtil.copyCost(root,  root);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NodeUtil.copyCost(root,  root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NodeUtil.copyCost(root,  root);	  NodeUtil.copyCost(root,    cost);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
623	[BUG]  [BUGGY]  timeout  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.cloneTree());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root.cloneTree());	  return    getCost(root);    timeout    	compilable	timeout	113	1	replace
624	[BUG]  [BUGGY]  return  getCost(root.cloneTree());  timeout  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.cloneTree());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.cloneTree());	  return    getCost(root);    timeout    	compilable	timeout	113	1	replace
625	[BUG]  [BUGGY]  return  getCost(root)+  costThreshhold;  [CE]  cannot  find  symbol  costThreshhold  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root)+  costThreshhold;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root)+  costThreshhold;	  return    getCost(root);    timeout    	non-compiled	[CE]  cannot  find  symbol  costThreshhold	113	None	replace
626	[BUG]  [BUGGY]  timeout  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getNext());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root.getNext());	  return    getCost(root);    timeout    	compilable	timeout	113	1	replace
627	[BUG]  [BUGGY]  return  getCost(root.getNext());  timeout  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getNext());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getNext());	  return    getCost(root);    timeout    	compilable	timeout	113	1	replace
628	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE);  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  unreachable  statement	66	None	replace
629	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	101	None	replace
630	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	101	None	replace
631	[BUG]  [BUGGY]  return  getCost(root,  Long.MAX_VALUE  -  1);  [CE]  no  suitable  method  found  for  getCost(Node,long)  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Long.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Long.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,long)	91	None	replace
632	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
633	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
634	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
635	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
636	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
637	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  cost  +  1;  [CE]  cannot  find  symbol  cost  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  cost  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  cost  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    timeout    	non-compiled	[CE]  cannot  find  symbol  cost	86	None	replace
638	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  4  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)+  4  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    timeout    	compilable	timeout	86	1	replace
639	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  4  +  1;  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  4  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  4  +  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    timeout    	compilable	timeout	86	1	replace
640	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  root.toString());  [CE]  no  suitable  method  found  for  getCost(Node,int,String)  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  root.toString());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  root.toString());	  return    getCost(root,    Integer.MAX_VALUE,    this.maxCost);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,String)	117	None	replace
641	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  0,  this.maxCost);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  0,  this.maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  0,  this.maxCost);	  return    getCost(root,    Integer.MAX_VALUE,    this.maxCost);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	117	None	replace
642	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  root.length);  [CE]  cannot  find  symbol  length  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  root.length);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  root.length);	  return    getCost(root,    Integer.MAX_VALUE,    this.maxCost);    	non-compiled	[CE]  cannot  find  symbol  length	117	None	replace
643	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	8	None	add
644	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	8	None	add
645	[BUG]  [BUGGY]  String  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  incompatible  types	52	None	replace
646	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
647	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  maxCost  -  1);  [CE]  cannot  find  symbol  maxCost  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  maxCost  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  maxCost  -  1);	  Return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  maxCost	72	None	replace
648	[BUG]  [BUGGY]  Return  getCost(root,  Integer.MAX_VALUE,  maxCost  -  1);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Return  getCost(root,  Integer.MAX_VALUE,  maxCost  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Return  getCost(root,  Integer.MAX_VALUE,  maxCost  -  1);	  Return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  ';'  expected	72	None	replace
649	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  maxCost  +  1);  [CE]  cannot  find  symbol  maxCost  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  maxCost  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  maxCost  +  1);	  Return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  maxCost	72	None	replace
650	[BUG]  [BUGGY]  Return  getCost(root,  Integer.MAX_VALUE,  maxCost  +  1);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Return  getCost(root,  Integer.MAX_VALUE,  maxCost  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Return  getCost(root,  Integer.MAX_VALUE,  maxCost  +  1);	  Return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  ';'  expected	72	None	replace
651	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
652	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
653	[BUG]  [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost  >  maxCost)  {  return  cost;  }  [CE]  cannot  find  symbol  maxCost  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost  >  maxCost)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getFirstChild());  if(cost  >  maxCost)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    >    maxCost)    {    return    cost;    }    	non-compiled	[CE]  cannot  find  symbol  maxCost	120	None	replace
654	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  MISSING_IDENTIFIER_COST)  {  return  cost;  }  [CE]  cannot  find  symbol  MISSING_IDENTIFIER_COST  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  MISSING_IDENTIFIER_COST)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost  >  MISSING_IDENTIFIER_COST)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    >    maxCost)    {    return    cost;    }    	non-compiled	[CE]  cannot  find  symbol  MISSING_IDENTIFIER_COST	120	None	replace
655	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
656	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
657	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    cost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
658	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  cannot  find  symbol  compiler  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  compiler	108	None	replace
659	[BUG]  [BUGGY]  InlineCostEstimator  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  InlineCostEstimator  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	InlineCostEstimator  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  incompatible  types	108	None	replace
660	[BUG]  [BUGGY]  node  =  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  cannot  find  symbol  node  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  node  =  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	node  =  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  node	108	None	replace
661	[BUG]  [BUGGY]  NullPointer.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  NullPointer.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	NullPointer.traverse(compiler,  root,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  compiler	108	None	replace
662	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	103	None	replace
663	[BUG]  [BUGGY]  return  getCost(root,  2,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  2,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  2,  Integer.MAX_VALUE);	  return    getCost(root,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	121	None	replace
664	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1  +  1;	  timeout    	non-compiled	[CE]  unreachable  statement	85	None	add
665	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;	  timeout    	non-compiled	[CE]  unreachable  statement	85	None	add
666	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	85	None	add
667	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  DEFAULT_IDENTIFIER_COST);  [CE]  cannot  find  symbol  DEFAULT_IDENTIFIER_COST  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  DEFAULT_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  DEFAULT_IDENTIFIER_COST);	  return    getCost(root,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_IDENTIFIER_COST	25	None	replace
668	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  CostThreshhold.MAX_VALUE);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  CostThreshhold.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  CostThreshhold.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	25	None	replace
669	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  CostThreshhold.DEFAULT);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  CostThreshhold.DEFAULT);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  CostThreshhold.DEFAULT);	  return    getCost(root,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	25	None	replace
670	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  CACHED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  CACHED_IDENTIFIER_COST  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  CACHED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  CACHED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  CACHED_IDENTIFIER_COST	25	None	replace
671	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
672	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  cost);  [CE]  cannot  find  symbol  compiler  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  cost);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
673	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  null);  [CE]  cannot  find  symbol  compiler  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  null);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  null);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
674	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  nodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  nodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  nodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
675	[BUG]  [BUGGY]  node  =  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  node  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  node  =  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	node  =  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  node	69	None	replace
676	[BUG]  [BUGGY]  if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  }  [CE]  cannot  find  symbol  Token  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  }	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  Token	106	None	replace
677	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	106	None	replace
678	[BUG]  [BUGGY]  if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  }  else  {  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  }  [CE]  cannot  find  symbol  Token  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  }  else  {  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(root.getType()  ==  Token.NAME)  {  return  getCost(root,  Integer.MIN_VALUE);  }  else  {  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  }	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  Token	106	None	replace
679	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
680	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	94	None	replace
681	[BUG]  [BUGGY]  return  getCost(root);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	112	None	add
682	[BUG]  [BUGGY]  return  getCost(root);  InlineCostEstimator  <  Node>  cost  =  getCost(root);  [CE]  type  InlineCostEstimator  does  not  take  parameters  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  InlineCostEstimator  <  Node>  cost  =  getCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    InlineCostEstimator  <  Node>  cost  =  getCost(root);	  timeout    	non-compiled	[CE]  type  InlineCostEstimator  does  not  take  parameters	112	None	add
683	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
684	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
685	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
686	[BUG]  [BUGGY]  node  =  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  node  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  node  =  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	node  =  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  node	68	None	replace
687	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  last,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  last,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  last,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	68	None	replace
688	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost  +  1;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  cost  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  cost  +  1;	  return    getCost(root,    Integer.MAX_VALUE,    cost;    	non-compiled	[CE]  ')'  expected	24	None	replace
689	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  ESTIMATED_IDENTIFIER_COST;	  return    getCost(root,    Integer.MAX_VALUE,    cost;    	non-compiled	[CE]  ')'  expected	24	None	replace
690	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	124	None	replace
691	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	124	None	replace
692	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  missing  return  statement	124	None	replace
693	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)-  1;  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  unreachable  statement	124	None	replace
694	[BUG]  [BUGGY]  long  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  long  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	long  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
695	[BUG]  [BUGGY]  Integer  costThreshhold  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
696	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	62	None	replace
697	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  cost);  [CE]  cannot  find  symbol  compiler  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  cost);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	62	None	replace
698	[BUG]  [BUGGY]  Preconditions.checkState(root.getType()  ==  Token.NAME);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  Token  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Preconditions.checkState(root.getType()  ==  Token.NAME);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Preconditions.checkState(root.getType()  ==  Token.NAME);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  Token	62	None	replace
699	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
700	[BUG]  [BUGGY]  Node  cost  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  cost  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  cost  =  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  incompatible  types	67	None	replace
701	[BUG]  [BUGGY]  timeout  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  root.getLastChild().getCharno();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  root.getLastChild().getCharno();	  return    root.getLastChild().getString();    	compilable	timeout	82	1	replace
702	[BUG]  [BUGGY]  return  root.getLastChild().getCharno();  timeout  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  root.getLastChild().getCharno();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  root.getLastChild().getCharno();	  return    root.getLastChild().getString();    	compilable	timeout	82	1	replace
703	[BUG]  [BUGGY]  return  root.getLastChild().getCost(root);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  root.getLastChild().getCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  root.getLastChild().getCost(root);	  return    root.getLastChild().getString();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
704	[BUG]  [BUGGY]  return  root.getLastChild().getQualifiedName();  [CE]  incompatible  types  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  root.getLastChild().getQualifiedName();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  root.getLastChild().getQualifiedName();	  return    root.getLastChild().getString();    	non-compiled	[CE]  incompatible  types	82	None	replace
705	[BUG]  [BUGGY]  Node  last  =  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(last,  Integer.MAX_VALUE  -  1);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  last  =  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(last,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  last  =  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(last,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  incompatible  types	93	None	replace
706	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  2);  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  2);	  timeout    	non-compiled	[CE]  unreachable  statement	73	None	add
707	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  timeout    	non-compiled	[CE]  unreachable  statement	73	None	add
708	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	73	None	add
709	[BUG]  [BUGGY]  char  last  =  root.getLastChild();  return  getCost(last,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  last  =  root.getLastChild();  return  getCost(last,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  last  =  root.getLastChild();  return  getCost(last,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root);    	non-compiled	[CE]  incompatible  types	70	None	replace
710	[BUG]  [BUGGY]  char  last  =  root.getLastChild();  int  maxCost  =  getMaxCost(root);  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  last  =  root.getLastChild();  int  maxCost  =  getMaxCost(root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  last  =  root.getLastChild();  int  maxCost  =  getMaxCost(root);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root);    	non-compiled	[CE]  incompatible  types	70	None	replace
711	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  3;  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  3;	  timeout    	non-compiled	[CE]  unreachable  statement	18	None	add
712	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	18	None	add
713	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	18	None	add
714	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	18	None	add
715	[BUG]  [BUGGY]  long  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  long  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	long  cost  =  getCost(root,  Integer.MIN_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
716	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	102	None	replace
717	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	102	None	replace
718	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)-  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
719	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  missing  return  statement	92	None	replace
720	[BUG]  [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(maxCost,  Integer.MAX_VALUE  -  1);  [CE]  no  suitable  method  found  for  getCost(int,int)  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(maxCost,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  -  1);  int  maxCost  =  getCost(maxCost,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(int,int)	92	None	replace
721	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
722	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST  -  1);  [CE]  cannot  find  symbol  Cost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST  -  1);	  return    getCost(root,    0,    Integer.MAX_VALUE,    Cost.ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  Cost	89	None	replace
723	[BUG]  [BUGGY]  return  getCost(root,  0,  null,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,<null>,int)  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  null,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  null,  Integer.MAX_VALUE);	  return    getCost(root,    0,    cost,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,<null>,int)	5	None	replace
724	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  0;  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  0;	  timeout    	non-compiled	[CE]  unreachable  statement	14	None	add
725	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	14	None	add
726	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  timeout    	non-compiled	[CE]  unreachable  statement	14	None	add
727	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	add
728	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	14	None	add
729	[BUG]  [BUGGY]  return  getCost(root,  0,  ESTIMATED_IDENTIFIER_COST,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  ESTIMATED_IDENTIFIER_COST,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  ESTIMATED_IDENTIFIER_COST,  Integer.MIN_VALUE);	  return    getCost(root,    0,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	32	None	replace
730	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  Integer.MIN_VALUE);	  return    getCost(root,    0,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	32	None	replace
731	[BUG]  [BUGGY]  return  NodeUtil.getCost(root,  ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  NodeUtil.getCost(root,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  NodeUtil.getCost(root,  ESTIMATED_IDENTIFIER_COST);	  return    NodeUtil.getCost(root);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
732	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
733	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	115	None	replace
734	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
735	[BUG]  [BUGGY]  char  last  =  root.getLastChild().getCost();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  last  =  root.getLastChild().getCost();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  last  =  root.getLastChild().getCost();	  char    last    =    root.getLastChild().getString();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
736	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE  +  1);  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    int  maxCost  =  getCost(root,  Integer.MIN_VALUE  +  1);	  timeout    	non-compiled	[CE]  unreachable  statement	33	None	add
737	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	33	None	add
738	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    int  cost  =  getCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	33	None	add
739	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  *  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MIN_VALUE  *  1);	  return    getCost(root,    Integer.MIN_VALUE    -    1);    timeout    	compilable	timeout	30	1	replace
740	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  *  1);  timeout  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  *  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE  *  1);	  return    getCost(root,    Integer.MIN_VALUE    -    1);    timeout    	compilable	timeout	30	1	replace
741	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
742	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
743	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
744	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    NodeUtil.copyCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
745	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
746	[BUG]  [BUGGY]  Integer  costThreshhold  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
747	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
748	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
749	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE);  int  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  unreachable  statement	63	None	replace
750	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MIN_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
751	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  nodeUtil  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  nodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol  nodeUtil	60	None	replace
752	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
753	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  0,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  0,  Integer.MAX_VALUE);	  return    getCost(root,    maxCost,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	6	None	replace
754	[BUG]  [BUGGY]  return  getCost(root,  last,  0,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  last  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  last,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  last,  0,  Integer.MAX_VALUE);	  return    getCost(root,    maxCost,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  last	6	None	replace
755	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  /  1);  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  /  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  /  1);	  timeout    	non-compiled	[CE]  unreachable  statement	43	None	add
756	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  /  2);  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  /  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  /  2);	  timeout    	non-compiled	[CE]  unreachable  statement	43	None	add
757	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	43	None	add
758	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  /  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    /    1);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	43	None	add
759	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold.DEFAULT_IDENTIFIER_COST);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold.DEFAULT_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold.DEFAULT_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    DEFAULT_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	95	None	replace
760	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold.MIN_VALUE);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  CostThreshhold.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE,    DEFAULT_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	95	None	replace
761	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  value);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  value);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  value);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  value	51	None	replace
762	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  this.cost);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  this.cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  this.cost);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    maxCost);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	51	None	replace
763	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  CostThreshhold.MAX_VALUE);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  CostThreshhold.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  CostThreshhold.MAX_VALUE);	  return    getCost(root,    0,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	4	None	replace
764	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  DEFAULT_IDENTIFIER_COST);  [CE]  cannot  find  symbol  DEFAULT_IDENTIFIER_COST  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  DEFAULT_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  DEFAULT_IDENTIFIER_COST);	  return    getCost(root,    0,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_IDENTIFIER_COST	4	None	replace
765	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  CostThreshhold.DEFAULT);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MIN_VALUE,  CostThreshhold.DEFAULT);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MIN_VALUE,  CostThreshhold.DEFAULT);	  return    getCost(root,    0,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	4	None	replace
766	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  1);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  1);	  return    getCost(root,    Integer.MAX_VALUE,    DEFAULT_SIZE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	97	None	replace
767	[BUG]  [BUGGY]  int  cost  =  getCost(root,  cost);  [CE]  variable  cost  might  not  have  been  initialized  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  cost);	  int    cost    =    getCost(root);    	non-compiled	[CE]  variable  cost  might  not  have  been  initialized	77	None	replace
768	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  2;  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	104	None	replace
769	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
770	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  *  1);  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  *  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  *  1);	  timeout    	non-compiled	[CE]  unreachable  statement	75	None	add
771	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	75	None	add
772	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  *  2);  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  *  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    *    1);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  *  2);	  timeout    	non-compiled	[CE]  unreachable  statement	75	None	add
773	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1  +  1);	  timeout    	non-compiled	[CE]  unreachable  statement	90	None	add
774	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	90	None	add
775	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	90	None	add
776	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)-  0;	  return    getCost(root,    Integer.MAX_VALUE)-    1;    timeout    	compilable	timeout	13	1	replace
777	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  0;  timeout  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)-  0;	  return    getCost(root,    Integer.MAX_VALUE)-    1;    timeout    	compilable	timeout	13	1	replace
778	[BUG]  [BUGGY]  Node  last  =  root.getLastChild();  [CE]  missing  return  statement  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  last  =  root.getLastChild();	  char    last    =    root.getLastChild();    	non-compiled	[CE]  missing  return  statement	79	None	replace
779	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  4);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE  *  4);	  return    getCost(root,    Integer.MAX_VALUE    *    1);    timeout    	compilable	timeout	76	1	replace
780	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  4);  timeout  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  *  4);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  *  4);	  return    getCost(root,    Integer.MAX_VALUE    *    1);    timeout    	compilable	timeout	76	1	replace
781	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE)+  1;	  timeout    	non-compiled	[CE]  unreachable  statement	10	None	add
782	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  return  getCost(root,  Integer.MAX_VALUE)+  2;  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  return  getCost(root,  Integer.MAX_VALUE)+  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    return  getCost(root,  Integer.MAX_VALUE)+  2;	  timeout    	non-compiled	[CE]  unreachable  statement	10	None	add
783	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    int  maxCost  =  getCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	16	None	add
784	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	16	None	add
785	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MAX_VALUE  +  1);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE,    MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	26	None	replace
786	[BUG]  [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  length  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  root.length,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    0,    root.length,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  length	87	None	replace
787	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
788	[BUG]  [BUGGY]  Integer  costThreshhold  =  getMaxCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshhold  =  getMaxCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshhold  =  getMaxCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
789	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
790	[BUG]  [BUGGY]  return  getCost(root.getString(),  MAX_COST);  [CE]  cannot  find  symbol  MAX_COST  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getString(),  MAX_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getString(),  MAX_COST);	  return    getCost(root.getString());    	non-compiled	[CE]  cannot  find  symbol  MAX_COST	111	None	replace
791	[BUG]  [BUGGY]  return  getCost(root.getString(),  Cost.ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  Cost  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getString(),  Cost.ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getString(),  Cost.ESTIMATED_IDENTIFIER_COST);	  return    getCost(root.getString());    	non-compiled	[CE]  cannot  find  symbol  Cost	111	None	replace
792	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  timeout    	non-compiled	[CE]  unreachable  statement	45	None	add
793	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  2);  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  2);	  timeout    	non-compiled	[CE]  unreachable  statement	45	None	add
794	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	45	None	add
795	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	45	None	add
796	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  DEFAULT_IDENTIFIER_COST);  [CE]  cannot  find  symbol  DEFAULT_IDENTIFIER_COST  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  DEFAULT_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  DEFAULT_IDENTIFIER_COST);	  return    getCost(root,    0,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_IDENTIFIER_COST	2	None	replace
797	[BUG]  [BUGGY]  return  getCost(root,  Long.MAX_VALUE,  CostThreshhold);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Long.MAX_VALUE,  CostThreshhold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Long.MAX_VALUE,  CostThreshhold);	  return    getCost(root,    Integer.MAX_VALUE,    CostThreshhold);    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	21	None	replace
798	[BUG]  [BUGGY]  return  getCost(root.getLastChild()  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild()  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getLastChild()  -  1);	  return    getCost(root.getLastChild());    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	81	None	replace
799	[BUG]  [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
800	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
801	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	105	None	replace
802	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
803	[BUG]  [BUGGY]  Node  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Node  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Node  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
804	[BUG]  [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	105	None	replace
805	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root);  Integer  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
806	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  missing  return  statement	98	None	replace
807	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  missing  return  statement	98	None	replace
808	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  int  maxCost  =  getCost(root.getLastChild());  [CE]  unreachable  statement  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  int  maxCost  =  getCost(root.getLastChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    int  maxCost  =  getCost(root.getLastChild());	  timeout    	non-compiled	[CE]  unreachable  statement	80	None	add
809	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    NodeTraversal.traverse(compiler,  root,  this);	  timeout    	non-compiled	[CE]  cannot  find  symbol  compiler	80	None	add
810	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  Costs.ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  Costs  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  Costs.ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  Costs.ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    maximumCost);    	non-compiled	[CE]  cannot  find  symbol  Costs	28	None	replace
811	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	12	None	add
812	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)-  1;  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE)-  1;	  timeout    	non-compiled	[CE]  unreachable  statement	12	None	add
813	[BUG]  [BUGGY]  return  getCost(root,  0,  MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    0,    ESTIMATED_IDENTIFIER_COST,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	88	None	replace
814	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1,  cost  +  1);  [CE]  cannot  find  symbol  cost  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1,  cost  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1,  cost  +  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1    +    1);    timeout    	non-compiled	[CE]  cannot  find  symbol  cost	91	None	replace
815	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE);  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
816	[BUG]  [BUGGY]  char  last  =  root.getLastChild();  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  last  =  root.getLastChild();  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  last  =  root.getLastChild();  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  incompatible  types	67	None	replace
817	[BUG]  [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  MAX_COST)  {  return  cost;  }  [CE]  cannot  find  symbol  MAX_COST  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getLastChild());  if(cost  >  MAX_COST)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getLastChild());  if(cost  >  MAX_COST)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    >    maxCost)    {    return    cost;    }    	non-compiled	[CE]  cannot  find  symbol  MAX_COST	120	None	replace
818	[BUG]  [BUGGY]  return  getCost(root);  if(!continueProcessing)  {  int  maxCost  =  getMaxCost(root);  if(maxCost  >  maxCost)  {  return  maxCost;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  if(!continueProcessing)  {  int  maxCost  =  getMaxCost(root);  if(maxCost  >  maxCost)  {  return  maxCost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    if(!continueProcessing)  {  int  maxCost  =  getMaxCost(root);  if(maxCost  >  maxCost)  {  return  maxCost;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	112	None	add
819	[BUG]  [BUGGY]  return  getCost(root);  if(!continueProcessing)  {  int  cost  =  getCost(root);  if(cost  >  maxCost)  {  return  cost;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  if(!continueProcessing)  {  int  cost  =  getCost(root);  if(cost  >  maxCost)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    if(!continueProcessing)  {  int  cost  =  getCost(root);  if(cost  >  maxCost)  {  return  cost;  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	112	None	add
820	[BUG]  [BUGGY]  return  getCost(root);  if(!continueProcessing)  {  return  getCost(root);  }  [CE]  cannot  find  symbol  continueProcessing  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root);  if(!continueProcessing)  {  return  getCost(root);  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root);    if(!continueProcessing)  {  return  getCost(root);  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  continueProcessing	112	None	add
821	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE)/  1;  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE)/  1;	  return    getCost(root,    Integer.MAX_VALUE)/    1;    timeout    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	9	None	replace
822	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  this.maxCost);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  this.maxCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  this.maxCost);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    cost);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	53	None	replace
823	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  totalCost);  [CE]  cannot  find  symbol  totalCost  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  totalCost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  totalCost);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    cost);    	non-compiled	[CE]  cannot  find  symbol  totalCost	53	None	replace
824	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  return  getCost(root,  Integer.MAX_VALUE)+  0;  [CE]  unreachable  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  0;  return  getCost(root,  Integer.MAX_VALUE)+  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    0;    return  getCost(root,  Integer.MAX_VALUE)+  0;	  timeout    	non-compiled	[CE]  unreachable  statement	14	None	add
825	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  2;  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  2;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  2;	  timeout    	non-compiled	[CE]  unreachable  statement	8	None	add
826	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  return  getCost(root,  Integer.MAX_VALUE)/  1;  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  return  getCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    return  getCost(root,  Integer.MAX_VALUE)/  1;	  timeout    	non-compiled	[CE]  unreachable  statement	8	None	add
827	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  1;  [CE]  unreachable  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)/    1;    int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  1;	  timeout    	non-compiled	[CE]  unreachable  statement	8	None	add
828	[BUG]  [BUGGY]  int  cost  =  getMost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getMost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getMost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
829	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    char  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  incompatible  types	12	None	add
830	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  Integer.MAX_VALUE)-  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  1;  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)-    1;    Integer.MAX_VALUE)-  1;	  timeout    	non-compiled	[CE]  not  a  statement	12	None	add
831	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  root);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  root);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1,  root);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1,    maxCost);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
832	[BUG]  [BUGGY]  char  cost  =  getCost(root.getLastChild());  [CE]  possible  loss  of  precision  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  cost  =  getCost(root.getLastChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  cost  =  getCost(root.getLastChild());	  int    cost    =    getCost(root.getLastChild());    if(cost    ==    0)    {    return    cost;    }    	non-compiled	[CE]  possible  loss  of  precision	119	None	replace
833	[BUG]  [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost  ==  1)  {  return  cost;  }  [CE]  missing  return  statement  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root.getFirstChild());  if(cost  ==  1)  {  return  cost;  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root.getFirstChild());  if(cost  ==  1)  {  return  cost;  }	  int    cost    =    getCost(root.getLastChild());    if(cost    ==    0)    {    return    cost;    }    	non-compiled	[CE]  missing  return  statement	119	None	replace
834	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  2;  char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    2;    char  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  incompatible  types	10	None	add
835	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  MULTIPLE_IDENTIFIER_COST);  [CE]  cannot  find  symbol  MULTIPLE_IDENTIFIER_COST  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  MULTIPLE_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  MULTIPLE_IDENTIFIER_COST);	  return    getCost(root,    0,    Integer.MAX_VALUE,    cost);    	non-compiled	[CE]  cannot  find  symbol  MULTIPLE_IDENTIFIER_COST	1	None	replace
836	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  }	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
837	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  CostTraversal.traverse(compiler,  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  CostTraversal.traverse(compiler,  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  CostTraversal.traverse(compiler,	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
838	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
839	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  Integer  cost  =  getCost(root,  Integer.MAX_VALUE);  }	  return    getCost(root,    Integer.MIN_VALUE);    Integer    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
840	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  size);  [CE]  cannot  find  symbol  size  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  size);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  size);	  return    getCost(root,    Integer.MAX_VALUE,    totalCost);    	non-compiled	[CE]  cannot  find  symbol  size	27	None	replace
841	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  return  getCost(root,  Integer.MIN_VALUE)+  1;  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  return  getCost(root,  Integer.MIN_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    return  getCost(root,  Integer.MIN_VALUE)+  1;	  timeout    	non-compiled	[CE]  unreachable  statement	16	None	add
842	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MIN_VALUE)+  1;  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MIN_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    int  maxCost  =  getCost(root,  Integer.MIN_VALUE)+  1;	  timeout    	non-compiled	[CE]  unreachable  statement	16	None	add
843	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE)+  1;  char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE)+    1;    char  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  incompatible  types	16	None	add
844	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
845	[BUG]  [BUGGY]  char  cost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  cost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  cost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    cost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  possible  loss  of  precision	114	None	replace
846	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MISSING_IDENTIFIER_COST);  [CE]  cannot  find  symbol  MISSING_IDENTIFIER_COST  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MISSING_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  MISSING_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    CACHED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  MISSING_IDENTIFIER_COST	96	None	replace
847	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  3;  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	104	None	replace
848	[BUG]  [BUGGY]  char  last  =  root.getLastChild();  return  getCost(last,  Integer.MIN_VALUE);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  last  =  root.getLastChild();  return  getCost(last,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  last  =  root.getLastChild();  return  getCost(last,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root);    	non-compiled	[CE]  incompatible  types	70	None	replace
849	[BUG]  [BUGGY]  char  last  =  root.getLastChild();  int  maxCost  =  getMaxCost(root,  last);  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  last  =  root.getLastChild();  int  maxCost  =  getMaxCost(root,  last);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  last  =  root.getLastChild();  int  maxCost  =  getMaxCost(root,  last);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root);    	non-compiled	[CE]  incompatible  types	70	None	replace
850	[BUG]  [BUGGY]  return  getCost(root,  0,  this.maxCost,  Integer.MAX_VALUE);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  this.maxCost,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  this.maxCost,  Integer.MAX_VALUE);	  return    getCost(root,    0,    cost,    Integer.MAX_VALUE);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	5	None	replace
851	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  compiler  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
852	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  cost);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  cost  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  cost);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  cost);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  cost	69	None	replace
853	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  cost);  [CE]  cannot  find  symbol  compiler  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  cost);	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  compiler	69	None	replace
854	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  MAX_VALUE,  ESTIMATED_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	20	None	replace
855	[BUG]  [BUGGY]  char  last  =  root.getLastChild();  int  maxCost  =  getCost(last,  Integer.MIN_VALUE);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  last  =  root.getLastChild();  int  maxCost  =  getCost(last,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  last  =  root.getLastChild();  int  maxCost  =  getCost(last,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  incompatible  types	106	None	replace
856	[BUG]  [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	106	None	replace
857	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  }	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
858	[BUG]  [BUGGY]  int  maxCost  =  getMost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
859	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  }  else  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  }  else  {  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MAX_VALUE  -  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  }  else  {	  return    getCost(root,    Integer.MAX_VALUE    -    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
860	[BUG]  [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
861	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
862	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  1;  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE)/  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  unreachable  statement	124	None	replace
863	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  cost  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  cost  =  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(NodeUtil.isExpressionNode(root))  {  return  getCost(root,  Integer.MIN_VALUE);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MIN_VALUE);  }  else  {  cost  =	  return    getCost(root,    Integer.MIN_VALUE);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
864	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  Integer.MAX_VALUE  -  2);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  Integer.MAX_VALUE  -  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    Integer.MAX_VALUE  -  2);	  timeout    	non-compiled	[CE]  not  a  statement	73	None	add
865	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  -  2);  char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    -    2);    char  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  incompatible  types	73	None	add
866	[BUG]  [BUGGY]  return  root.getLastChild().getFirstChild().getString();  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  root.getLastChild().getFirstChild().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  root.getLastChild().getFirstChild().getString();	  return    root.getLastChild().getString();    	non-compiled	[CE]  incompatible  types	82	None	replace
867	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)-  3;	  return    getCost(root,    Integer.MAX_VALUE)+    3;    timeout    	compilable	timeout	19	1	replace
868	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  3;  timeout  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)-  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)-  3;	  return    getCost(root,    Integer.MAX_VALUE)+    3;    timeout    	compilable	timeout	19	1	replace
869	[BUG]  [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	101	None	replace
870	[BUG]  [BUGGY]  long  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  long  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	long  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
871	[BUG]  [BUGGY]  String  last  =  Root.getLastChild().getString();  [CE]  cannot  find  symbol  Root  [FE]                                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  last  =  Root.getLastChild().getString();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  last  =  Root.getLastChild().getString();	  char    last    =    root.getLastChild().getString();    	non-compiled	[CE]  cannot  find  symbol  Root	84	None	replace
872	[BUG]  [BUGGY]  String  last  =  Root.getLastChild();  [CE]  cannot  find  symbol  Root  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  String  last  =  Root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	String  last  =  Root.getLastChild();	  char    last    =    root.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  Root	79	None	replace
873	[BUG]  [BUGGY]  File  last  =  root.getLastChild();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  File  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	File  last  =  root.getLastChild();	  char    last    =    root.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
874	[BUG]  [BUGGY]  int  maxCost  =  getMost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
875	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST)+  1;  [CE]  cannot  find  symbol  Cost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  Cost.ESTIMATED_IDENTIFIER_COST)+  1;	  return    getCost(root,    0,    Integer.MAX_VALUE,    Cost.ESTIMATED_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  Cost	89	None	replace
876	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1,  cost);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  cost  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1,  cost);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  +  1,  cost);  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  cost	99	None	replace
877	[BUG]  [BUGGY]  if(!continueProcessing)  {  return  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  }  [CE]  cannot  find  symbol  continueProcessing  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  if(!continueProcessing)  {  return  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  }  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	if(!continueProcessing)  {  return  getCost(root,  Integer.MIN_VALUE);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  }	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  continueProcessing	108	None	replace
878	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  cost);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [CE]  cannot  find  symbol  cost  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  cost);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  cost);  NodeTraversal.traverse(compiler,  root,  new  AssertionFailedError());	  return    getCost(root,    Integer.MIN_VALUE);    NodeTraversal.traverse(compiler,    root,    new    AssertionFailedError());    	non-compiled	[CE]  cannot  find  symbol  cost	108	None	replace
879	[BUG]  [BUGGY]  int  cost  =  getCost(root,  last);  [CE]  cannot  find  symbol  last  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  last);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  last);	  int    cost    =    getCost(root);    	non-compiled	[CE]  cannot  find  symbol  last	77	None	replace
880	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MAX_IDENTIFIER_COST);  [CE]  cannot  find  symbol  MAX_IDENTIFIER_COST  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  MAX_IDENTIFIER_COST);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  MAX_IDENTIFIER_COST);	  return    getCost(root,    Integer.MAX_VALUE,    DEFAULT_IDENTIFIER_COST);    	non-compiled	[CE]  cannot  find  symbol  MAX_IDENTIFIER_COST	95	None	replace
881	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  2);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  2);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  2);	  Return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	72	None	replace
882	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  3);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]                            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  3);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  3);	  Return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	72	None	replace
883	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  4);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  4);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  4);	  Return    getCost(root,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	72	None	replace
884	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  cost;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  cost;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  cost;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
885	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
886	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  cost;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  cost;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE);  NodeUtil.copyCost(root,  Integer.MAX_VALUE)+  cost;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
887	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)/  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  1;  NodeUtil.copyCost(root,  Integer.MAX_VALUE)/  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeUtil.copyCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
888	[BUG]  [BUGGY]  return  getCost(root,  null,  0,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,<null>,int,int)  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  null,  0,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  null,  0,  Integer.MAX_VALUE);	  return    getCost(root,    maxCost,    0,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,<null>,int,int)	6	None	replace
889	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    char  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  incompatible  types	29	None	add
890	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    int  cost  =  getCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	29	None	add
891	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  -  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    -    1);    int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	29	None	add
892	[BUG]  [BUGGY]  return  getCost(root.getString(),  CostThreshhold.DEFAULT);  [CE]  cannot  find  symbol  CostThreshhold  [FE]                              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getString(),  CostThreshhold.DEFAULT);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getString(),  CostThreshhold.DEFAULT);	  return    getCost(root.getString());    	non-compiled	[CE]  cannot  find  symbol  CostThreshhold	111	None	replace
893	[BUG]  [BUGGY]  return  getCost(root.getString(),  last);  [CE]  cannot  find  symbol  last  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getString(),  last);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root.getString(),  last);	  return    getCost(root.getString());    	non-compiled	[CE]  cannot  find  symbol  last	111	None	replace
894	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getMost(root,  Integer.MAX_VALUE)+  1  +  1;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1  +  1;  int  maxCost  =  getMost(root,  Integer.MAX_VALUE)+  1  +  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    1    +    1;    int  maxCost  =  getMost(root,  Integer.MAX_VALUE)+  1  +  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol	85	None	add
895	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  1;  int  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    costThreshhold    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  unreachable  statement	41	None	replace
896	[BUG]  [BUGGY]  int  maxCost  =  getMost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    int    maxCost    =    getCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
897	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE);  Integer  costThreshhold  =  getCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  unreachable  statement	105	None	replace
898	[BUG]  [BUGGY]  Integer  costThreshold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  costThreshold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  costThreshold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    Integer    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	105	None	replace
899	[BUG]  [BUGGY]  return  getCost(root,  1,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int)  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  1,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  1,  Integer.MIN_VALUE);	  return    getCost(root,    0,    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int)	32	None	replace
900	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  int  maxCost  =  getCost(root.getFirstChild());  [CE]  unreachable  statement  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  int  maxCost  =  getCost(root.getFirstChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    int  maxCost  =  getCost(root.getFirstChild());	  timeout    	non-compiled	[CE]  unreachable  statement	80	None	add
901	[BUG]  [BUGGY]  return  getCost(root.getLastChild());  return  getCost(root.getLastChild());  [CE]  unreachable  statement  [FE]                                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root.getLastChild());  return  getCost(root.getLastChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root.getLastChild());    return  getCost(root.getLastChild());	  timeout    	non-compiled	[CE]  unreachable  statement	80	None	add
902	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  2  +  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root,  Integer.MAX_VALUE)/  2  +  0;	  return    getCost(root,    Integer.MAX_VALUE)+    0;    timeout    	compilable	timeout	15	1	replace
903	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  2  +  0;  timeout  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)/  2  +  0;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)/  2  +  0;	  return    getCost(root,    Integer.MAX_VALUE)+    0;    timeout    	compilable	timeout	15	1	replace
904	[BUG]  [BUGGY]  char  cost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  cost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  cost  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  possible  loss  of  precision	63	None	replace
905	[BUG]  [BUGGY]  int  cost  =  getMost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getMost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getMost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    cost    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
906	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  DEFAULT_SIZE);  [CE]  cannot  find  symbol  DEFAULT_SIZE  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE,  DEFAULT_SIZE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MIN_VALUE,  DEFAULT_SIZE);	  return    getCost(root,    Integer.MIN_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SIZE	25	None	replace
907	[BUG]  [BUGGY]  long  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  long  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	long  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
908	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
909	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  unreachable  statement	102	None	replace
910	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  costs);  [CE]  cannot  find  symbol  costs  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  costs);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  costs);	  return    getCost(root,    0,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  costs	2	None	replace
911	[BUG]  [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  COST_INDEX);  [CE]  cannot  find  symbol  COST_INDEX  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  Integer.MAX_VALUE,  COST_INDEX);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  Integer.MAX_VALUE,  COST_INDEX);	  return    getCost(root,    0,    Integer.MAX_VALUE,    maxCost);    	non-compiled	[CE]  cannot  find  symbol  COST_INDEX	2	None	replace
912	[BUG]  [BUGGY]  return  getCost(root,  0,  this.maxCost,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  this.maxCost,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  this.maxCost,  ESTIMATED_IDENTIFIER_COST,  Integer.MAX_VALUE);	  return    getCost(root,    0,    ESTIMATED_IDENTIFIER_COST,    Integer.MAX_VALUE);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	88	None	replace
913	[BUG]  [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
914	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
915	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE,  cost);  [CE]  cannot  find  symbol  cost  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE,  cost);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE,  cost);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  cost	59	None	replace
916	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
917	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  1;  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)/  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
918	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE)-  1;	  return    getCost(root,    Integer.MAX_VALUE)+    1;    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE)+    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
919	[BUG]  [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MAX_VALUE)+  1;  [CE]  cannot  find  symbol  length  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  root.length,  Integer.MAX_VALUE)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  root.length,  Integer.MAX_VALUE)+  1;	  return    getCost(root,    0,    root.length,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  length	87	None	replace
920	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)/  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
921	[BUG]  [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  cost  =  getCost(root,  Integer.MAX_VALUE)+  1;  Integer  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE)+    1;    Integer    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
922	[BUG]  [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
923	[BUG]  [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE  -  1);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
924	[BUG]  [BUGGY]  int  maxCost  =  getMaxCost(root,  last.getLastChild());  [CE]  cannot  find  symbol  last  [FE]                                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMaxCost(root,  last.getLastChild());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMaxCost(root,  last.getLastChild());	  int    maxCost    =    getMaxCost(root.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  last	83	None	replace
925	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  ESTIMATED_IDENTIFIER_COST;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [CE]  cannot  find  symbol  compiler  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  ESTIMATED_IDENTIFIER_COST;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE)+  ESTIMATED_IDENTIFIER_COST;  NodeTraversal.traverse(compiler,  root,  new  CompiledSizeEstimator());	  return    getCost(root,    Integer.MAX_VALUE)+    1;    NodeTraversal.traverse(compiler,    root,    new    CompiledSizeEstimator());    	non-compiled	[CE]  cannot  find  symbol  compiler	103	None	replace
926	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  costs);  [CE]  cannot  find  symbol  costs  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  costs);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  costs);	  return    getCost(root,    Integer.MAX_VALUE,    maximumCost);    	non-compiled	[CE]  cannot  find  symbol  costs	28	None	replace
927	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshholdSize);  [CE]  cannot  find  symbol  CostThreshholdSize  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshholdSize);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  CostThreshholdSize);	  return    getCost(root,    Integer.MAX_VALUE,    maximumCost);    	non-compiled	[CE]  cannot  find  symbol  CostThreshholdSize	28	None	replace
928	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  return  getCost(root,  Integer.MAX_VALUE)+  3;  [CE]  unreachable  statement  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  return  getCost(root,  Integer.MAX_VALUE)+  3;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    return  getCost(root,  Integer.MAX_VALUE)+  3;	  timeout    	non-compiled	[CE]  unreachable  statement	18	None	add
929	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE)+  3;  char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE)+    3;    char  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  incompatible  types	18	None	add
930	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  +  1);  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    int    maxCost    =    getMaxCost(root,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
931	[BUG]  [BUGGY]  return  getCost(root,  0,  1,  null,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,<null>,int)  [FE]                  AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  1,  null,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  1,  null,  Integer.MAX_VALUE);	  return    getCost(root,    0,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,<null>,int)	122	None	replace
932	[BUG]  [BUGGY]  return  getCost(root,  0,  2,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCost(Node,int,int,int)  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  2,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  2,  Integer.MAX_VALUE);	  return    getCost(root,    0,    1,    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCost(Node,int,int,int)	122	None	replace
933	[BUG]  [BUGGY]  char  last  =  root.getLastChild();  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  char  last  =  root.getLastChild();  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	char  last  =  root.getLastChild();  int  maxCost  =  getMaxCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    maxCost    =    getMaxCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  incompatible  types	65	None	replace
934	[BUG]  [BUGGY]  return  getCost(root,  0,  this.cost,  Integer.MAX_VALUE);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  this.cost,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  this.cost,  Integer.MAX_VALUE);	  return    getCost(root,    0,    maxCost,    Integer.MAX_VALUE);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	3	None	replace
935	[BUG]  [BUGGY]  return  getCost(root,  0,  length,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  0,  length,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  0,  length,  Integer.MAX_VALUE);	  return    getCost(root,    0,    maxCost,    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
936	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  2);  int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MAX_VALUE    +    2);    int  maxCost  =  getMaxCost(root,  Integer.MAX_VALUE);	  timeout    	non-compiled	[CE]  cannot  find  symbol	45	None	add
937	[BUG]  [BUGGY]  int  maxCost  =  getMost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  int  maxCost  =  getMost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	int  maxCost  =  getMost(root,  Integer.MAX_VALUE  +  1);  InlineCostEstimator  <  Node>  cost  =  getCost(root,  Integer.MAX_VALUE  +  1);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    InlineCostEstimator    <    Node>    cost    =    getCost(root,    Integer.MAX_VALUE    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
938	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  char  last  =  root.getLastChild();  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  char  last  =  root.getLastChild();  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    char  last  =  root.getLastChild();	  timeout    	non-compiled	[CE]  incompatible  types	33	None	add
939	[BUG]  [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [CE]  unreachable  statement  [FE]                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MIN_VALUE  +  1);  int  maxCost  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return    getCost(root,    Integer.MIN_VALUE    +    1);    int  maxCost  =  getCost(root,  Integer.MIN_VALUE);	  timeout    	non-compiled	[CE]  unreachable  statement	33	None	add
940	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshold);  [CE]  cannot  find  symbol  CostThreshold  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE,  CostThreshold);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE,  CostThreshold);	  return    getCost(root,    Integer.MAX_VALUE,    CostThreshhold);    	non-compiled	[CE]  cannot  find  symbol  CostThreshold	21	None	replace
941	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  +  1);  NodeUtil.copyCost(root,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
942	[BUG]  [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(value,  Integer.MAX_VALUE  -  1);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(value,  Integer.MAX_VALUE  -  1);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	Integer  cost  =  getCost(root,  Integer.MAX_VALUE  -  1);  NodeUtil.copyCost(value,  Integer.MAX_VALUE  -  1);	  return    getCost(root,    Integer.MAX_VALUE    -    1);    NodeUtil.copyCost(root,    Integer.MAX_VALUE    -    1);    	non-compiled	[CE]  cannot  find  symbol  value	49	None	replace
943	[BUG]  [BUGGY]  timeout  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	add	return  getCost(root)+  1;	  return    getCost(root);    timeout    	compilable	timeout	113	1	replace
944	[BUG]  [BUGGY]  return  getCost(root)+  1;  timeout  [FE]                                AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root)+  1;  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root)+  1;	  return    getCost(root);    timeout    	compilable	timeout	113	1	replace
945	[BUG]  [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1,  cost);  NodeTraversal.traverse(compiler,  root,  this);  [CE]  cannot  find  symbol  cost  [FE]                      AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  return  getCost(root,  Integer.MAX_VALUE  +  1,  cost);  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	return  getCost(root,  Integer.MAX_VALUE  +  1,  cost);  NodeTraversal.traverse(compiler,  root,  this);	  return    getCost(root,    Integer.MAX_VALUE    +    1);    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  cannot  find  symbol  cost	62	None	replace
946	[BUG]  [BUGGY]  long  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      static  int  getCost(Node  root)  {      [BUGGY]  long  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  InlineCostEstimator  CompiledSizeEstimator  [METHOD]  getCost  [RETURN_TYPE]  int  Node  root  [VARIABLES]  char  last  boolean  continueProcessing  String  ESTIMATED_IDENTIFIER  int  ESTIMATED_IDENTIFIER_COST  cost  costThreshhold  maxCost  Node  root  	projects/Closure28/src/com/google/javascript/jscomp/InlineCostEstimator.java	0.7071067811865475	39	39	2	replace	long  costThreshhold  =  getCost(root,  Integer.MIN_VALUE);	  return    getCost(root,    Integer.MIN_VALUE);    int    costThreshhold    =    getCost(root,    Integer.MIN_VALUE);    	non-compiled	[CE]  missing  return  statement	66	None	replace
