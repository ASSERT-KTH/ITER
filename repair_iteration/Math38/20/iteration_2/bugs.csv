bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  t.printStackTrace();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	add	        t.printStackTrace();    t.printStackTrace();	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	14	1	add
2	[BUG]  [BUGGY]      t.printStackTrace();  t.printStackTrace();  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  t.printStackTrace();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        t.printStackTrace();    t.printStackTrace();	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	14	1	add
3	[BUG]  [BUGGY]      t.printStackTrace();  t.printStackTrace();  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +   ") ";  [CE]  unreachable  statement  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  t.printStackTrace();  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +   ") ";  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        t.printStackTrace();    t.printStackTrace();  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +   ") ";	  	non-compiled	[CE]  unreachable  statement	14	None	add
4	[BUG]  [BUGGY]      t.printStackTrace();  t.printStackTrace();  return  e.getMethodName()  + "  at  line   "  +  e.getLineNumber()  +   ") ";  [CE]  unreachable  statement  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  t.printStackTrace();  return  e.getMethodName()  + "  at  line   "  +  e.getLineNumber()  +   ") ";  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        t.printStackTrace();    t.printStackTrace();  return  e.getMethodName()  + "  at  line   "  +  e.getLineNumber()  +   ") ";	  	non-compiled	[CE]  unreachable  statement	14	None	add
5	[BUG]  [BUGGY]  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	9	None	replace
6	[BUG]  [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  n.getLongValue()  + ") ";  [CE]  int  cannot  be  dereferenced  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  n.getLongValue()  + ") ";  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  e.getMethodName()  + "  (at  line   "  +  n.getLongValue()  + ") ";	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLongValue()    +   ")   ";    	non-compiled	[CE]  int  cannot  be  dereferenced	20	None	replace
7	[BUG]  [BUGGY]  return  t.getMethodName()  + "  (at  line   "  +  e.getLongValue()  +   ") ";  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  t.getMethodName()  + "  (at  line   "  +  e.getLongValue()  +   ") ";  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  t.getMethodName()  + "  (at  line   "  +  e.getLongValue()  +   ") ";	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLongValue()    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
8	[BUG]  [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  t.getLongValue()  + ") ";  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  t.getLongValue()  + ") ";  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  e.getMethodName()  + "  (at  line   "  +  t.getLongValue()  + ") ";	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLongValue()    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
9	[BUG]  [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  t.getLineNumber()  +   ") ";  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  t.getLineNumber()  +   ") ";  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  e.getMethodName()  + "  (at  line   "  +  t.getLineNumber()  +   ") ";	  return    t.getMethodName()    +   "    (at    line       "    +    e.getLineNumber()    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
10	[BUG]  [BUGGY]  return  t.getMethodName()  + "  (at  line   "  +  n.getLineNumber()  +   ") ";  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  t.getMethodName()  + "  (at  line   "  +  n.getLineNumber()  +   ") ";  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  t.getMethodName()  + "  (at  line   "  +  n.getLineNumber()  +   ") ";	  return    t.getMethodName()    +   "    (at    line       "    +    e.getLineNumber()    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
11	[BUG]  [BUGGY]  final  int  lineNumber  =  elements.length();  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  elements.length();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  elements.length();	      final    int    lineNumber    =    e.length();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
12	[BUG]  [BUGGY]  final  int  lineNumber  =  e.length()  +  1;  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  e.length()  +  1;  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  e.length()  +  1;	      final    int    lineNumber    =    e.length();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
13	[BUG]  [BUGGY]  final  int  lineNumber  =  elements[n].length();  [CE]  cannot  find  symbol  [FE]                  BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  elements[n].length();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  elements[n].length();	      final    int    lineNumber    =    e.length();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
14	[BUG]  [BUGGY]  t.setLineNumber(n);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  t.setLineNumber(n);  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	t.setLineNumber(n);	      e.setLineNumber(n);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
15	[BUG]  [BUGGY]  n.setLineNumber(e);  [CE]  int  cannot  be  dereferenced  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  n.setLineNumber(e);  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	n.setLineNumber(e);	      e.setLineNumber(n);    	non-compiled	[CE]  int  cannot  be  dereferenced	4	None	replace
16	[BUG]  [BUGGY]  e.setLineNumber(n  +  1);  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  e.setLineNumber(n  +  1);  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	e.setLineNumber(n  +  1);	      e.setLineNumber(n);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
17	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	add	        if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	12	1	add
18	[BUG]  [BUGGY]      if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	12	1	add
19	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	add	        if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	12	1	add
20	[BUG]  [BUGGY]      if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	12	1	add
21	[BUG]  [BUGGY]  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    elements[n];    if(lineNumber    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	10	None	replace
22	[BUG]  [BUGGY]  if(e  ==  null)  {  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e  ==  null)  {  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e  ==  null)  {  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    elements[n];    if(lineNumber    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  return  t.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) ";  [CE]  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  t.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) ";  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  t.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) ";	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLineNumber()    +    1)   ";    	non-compiled	[CE]  	7	None	replace
24	[BUG]  [BUGGY]  t.printStackTrace(e,  n);  [CE]  no  suitable  method  found  for  printStackTrace(StackTraceElement,int)  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  t.printStackTrace(e,  n);  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	t.printStackTrace(e,  n);	      t.printStackTrace(e);    	non-compiled	[CE]  no  suitable  method  found  for  printStackTrace(StackTraceElement,int)	17	None	replace
25	[BUG]  [BUGGY]  t.printStackTrace(e,  null);  [CE]  no  suitable  method  found  for  printStackTrace(StackTraceElement,<null>)  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  t.printStackTrace(e,  null);  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	t.printStackTrace(e,  null);	      t.printStackTrace(e);    	non-compiled	[CE]  no  suitable  method  found  for  printStackTrace(StackTraceElement,<null>)	17	None	replace
26	[BUG]  [BUGGY]  if(e!=  null)  {  t.printStackTrace();  }  [CE]  missing  return  statement  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  t.printStackTrace();  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  t.printStackTrace();  }	      t.printStackTrace();    	non-compiled	[CE]  missing  return  statement	15	None	replace
27	[BUG]  [BUGGY]  if(e!=  null)  {  t.printStackTrace();  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  t.printStackTrace();  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  t.printStackTrace();  }  else  {  throw  new  PathIsExploredException( " ");  }	      t.printStackTrace();    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	15	None	replace
28	[BUG]  [BUGGY]  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  RuntimeException( " ");  }  [CE]  missing  return  statement  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  RuntimeException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  RuntimeException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	19	None	replace
29	[BUG]  [BUGGY]  if(e  ==  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e  ==  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  RuntimeException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e  ==  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  RuntimeException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
30	[BUG]  [BUGGY]  While(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  While(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	While(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	13	None	replace
31	[BUG]  [BUGGY]  While(e!=  null  &&  e.hasLineNumber())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  While(e!=  null  &&  e.hasLineNumber())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	While(e!=  null  &&  e.hasLineNumber())  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	13	None	replace
32	[BUG]  [BUGGY]  While(e!=  null)  {  if(e.getLineNumber()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  While(e!=  null)  {  if(e.getLineNumber()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	While(e!=  null)  {  if(e.getLineNumber()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	13	None	replace
33	[BUG]  [BUGGY]  While(e!=  null  &&  e.hasLineNumber())  {  throw  new  PathIsExploredException( " ");  }  [CE]  [FE]          IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  While(e!=  null  &&  e.hasLineNumber())  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	While(e!=  null  &&  e.hasLineNumber())  {  throw  new  PathIsExploredException( " ");  }	      if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	13	None	replace
34	[BUG]  [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) ", ";  [CE]  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) ", ";  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) ", ";	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLineNumber()    +    1)   "   ";    	non-compiled	[CE]  	16	None	replace
35	[BUG]  [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) " ",  n);  [CE]  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) " ",  n);  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) " ",  n);	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLineNumber()    +    1)   "   ";    	non-compiled	[CE]  	16	None	replace
36	[BUG]  [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) " ",  n;  [CE]  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) " ",  n;  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) " ",  n;	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLineNumber()    +    1)   "   ";    	non-compiled	[CE]  	16	None	replace
37	[BUG]  [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) ",  isMinimize;  [CE]  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) ",  isMinimize;  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) ",  isMinimize;	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLineNumber()    +    1)   "   ";    	non-compiled	[CE]  	16	None	replace
38	[BUG]  [BUGGY]      final  int  lineNumber  =  e.getLineNumber();  final  int  lineNumber  =  e.getLineNumber();  [CE]  variable  lineNumber  is  already  defined  in  method  caller(int)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      final  int  lineNumber  =  e.getLineNumber();  final  int  lineNumber  =  e.getLineNumber();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        final    int    lineNumber    =    e.getLineNumber();    final  int  lineNumber  =  e.getLineNumber();	  	non-compiled	[CE]  variable  lineNumber  is  already  defined  in  method  caller(int)	1	None	add
39	[BUG]  [BUGGY]      final  int  lineNumber  =  e.getLineNumber();  Final  int  lineNumber  =  e.getLineNumber();  [CE]  not  a  statement  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      final  int  lineNumber  =  e.getLineNumber();  Final  int  lineNumber  =  e.getLineNumber();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        final    int    lineNumber    =    e.getLineNumber();    Final  int  lineNumber  =  e.getLineNumber();	  	non-compiled	[CE]  not  a  statement	1	None	add
40	[BUG]  [BUGGY]      final  int  lineNumber  =  e.getLineNumber();  final  int  lineNumber  =  e.getLineNumber());  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      final  int  lineNumber  =  e.getLineNumber();  final  int  lineNumber  =  e.getLineNumber());  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        final    int    lineNumber    =    e.getLineNumber();    final  int  lineNumber  =  e.getLineNumber());	  	non-compiled	[CE]  ';'  expected	1	None	add
41	[BUG]  [BUGGY]  final  int  n  =  elements[0];  [CE]  variable  n  is  already  defined  in  method  caller(int)  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  n  =  elements[0];  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  n  =  elements[0];	      final    int    n    =    elements[n];    	non-compiled	[CE]  variable  n  is  already  defined  in  method  caller(int)	6	None	replace
42	[BUG]  [BUGGY]  final  int  n  =  elements[n].length;  [CE]  variable  n  is  already  defined  in  method  caller(int)  [FE]                  BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  n  =  elements[n].length;  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  n  =  elements[n].length;	      final    int    n    =    elements[n];    	non-compiled	[CE]  variable  n  is  already  defined  in  method  caller(int)	6	None	replace
43	[BUG]  [BUGGY]  final  int  n  =  elements[n].length();  [CE]  variable  n  is  already  defined  in  method  caller(int)  [FE]                    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  n  =  elements[n].length();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  n  =  elements[n].length();	      final    int    n    =    elements[n];    	non-compiled	[CE]  variable  n  is  already  defined  in  method  caller(int)	6	None	replace
44	[BUG]  [BUGGY]  final  int  lineNumber  =  elements.getColumnNumber();  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  elements.getColumnNumber();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  elements.getColumnNumber();	      final    int    lineNumber    =    e.getColumnNumber();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
45	[BUG]  [BUGGY]  final  int  lineNumber  =  elements[n].getColumnNumber();  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  elements[n].getColumnNumber();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  elements[n].getColumnNumber();	      final    int    lineNumber    =    e.getColumnNumber();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
46	[BUG]  [BUGGY]  final  int  lineNumber  =  e.getLineNumber()  +  1;  [CE]  missing  return  statement  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  e.getLineNumber()  +  1;  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  e.getLineNumber()  +  1;	      final    int    lineNumber    =    e.getLineNumber();    	non-compiled	[CE]  missing  return  statement	2	None	replace
47	[BUG]  [BUGGY]  final  int  lineNumber  =  elements[n];  [CE]  incompatible  types  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  elements[n];  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  elements[n];	      final    int    lineNumber    =    e.getLineNumber();    	non-compiled	[CE]  incompatible  types	2	None	replace
48	[BUG]  [BUGGY]  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  return  t.toString();  }  [CE]  missing  return  statement  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  return  t.toString();  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  return  t.toString();  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    return    t.toString();    }    	non-compiled	[CE]  missing  return  statement	18	None	replace
49	[BUG]  [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  return  t.toString();  }  [CE]  illegal  start  of  expression  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  return  t.toString();  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  return  t.toString();  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    return    t.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
50	[BUG]  [BUGGY]  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    PathIsExploredException(   "   ");    }    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	11	None	replace
51	[BUG]  [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }  [CE]  illegal  start  of  expression  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  final  int  lineNumber  =  elements[n];  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    PathIsExploredException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  final  int  n  =  elements[1];  [CE]  variable  n  is  already  defined  in  method  caller(int)  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  n  =  elements[1];  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  n  =  elements[1];	      final    int    n    =    elements[n];    	non-compiled	[CE]  variable  n  is  already  defined  in  method  caller(int)	6	None	replace
53	[BUG]  [BUGGY]  final  int  n  =  elements[n  +  1];  [CE]  variable  n  is  already  defined  in  method  caller(int)  [FE]                  BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  n  =  elements[n  +  1];  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  n  =  elements[n  +  1];	      final    int    n    =    elements[n];    	non-compiled	[CE]  variable  n  is  already  defined  in  method  caller(int)	6	None	replace
54	[BUG]  [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLength();  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }  [CE]  illegal  start  of  expression  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLength();  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  final  int  lineNumber  =  e.getLength();  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    PathIsExploredException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]      final  int  lineNumber  =  e.getLineNumber();  static  final  int  lineNumber  =  e.getLineNumber();  [CE]  illegal  start  of  expression  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      final  int  lineNumber  =  e.getLineNumber();  static  final  int  lineNumber  =  e.getLineNumber();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        final    int    lineNumber    =    e.getLineNumber();    static  final  int  lineNumber  =  e.getLineNumber();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
56	[BUG]  [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLength();  if(lineNumber  ==  0)  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLength();  if(lineNumber  ==  0)  {  throw  new  RuntimeException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  final  int  lineNumber  =  e.getLength();  if(lineNumber  ==  0)  {  throw  new  RuntimeException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
57	[BUG]  [BUGGY]  final  int  lineNumber  =  e.getLength();  [CE]  cannot  find  symbol  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  e.getLength();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  e.getLength();	      final    int    lineNumber    =    e.getLineNumber();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
58	[BUG]  [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLength();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLength();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  final  int  lineNumber  =  e.getLength();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
59	[BUG]  [BUGGY]      t.printStackTrace();  ((  PathIsExploredException)e).printStackTrace();  [CE]  inconvertible  types  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  ((  PathIsExploredException)e).printStackTrace();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        t.printStackTrace();    ((  PathIsExploredException)e).printStackTrace();	  	non-compiled	[CE]  inconvertible  types	14	None	add
60	[BUG]  [BUGGY]      t.printStackTrace();  ((  PathIsExploredException)e).printStackTrace();  t.printStackTrace();  [CE]  inconvertible  types  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  ((  PathIsExploredException)e).printStackTrace();  t.printStackTrace();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        t.printStackTrace();    ((  PathIsExploredException)e).printStackTrace();  t.printStackTrace();	  	non-compiled	[CE]  inconvertible  types	14	None	add
61	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  t.printStackTrace();  System.arraycopy(e,  0,  elements,  0,  n);  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	add	        t.printStackTrace();    t.printStackTrace();  System.arraycopy(e,  0,  elements,  0,  n);	  	compilable	  [FE]  ArrayStoreException  	14	1	add
62	[BUG]  [BUGGY]      t.printStackTrace();  t.printStackTrace();  System.arraycopy(e,  0,  elements,  0,  n);  [FE]  ArrayStoreException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  t.printStackTrace();  System.arraycopy(e,  0,  elements,  0,  n);  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        t.printStackTrace();    t.printStackTrace();  System.arraycopy(e,  0,  elements,  0,  n);	  	compilable	  [FE]  ArrayStoreException  	14	1	add
63	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  ((  PathIsExploredException)t).printStackTrace();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	add	        t.printStackTrace();    ((  PathIsExploredException)t).printStackTrace();	  	compilable	  [FE]  ClassCastException  	14	1	add
64	[BUG]  [BUGGY]      t.printStackTrace();  ((  PathIsExploredException)t).printStackTrace();  [FE]  ClassCastException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  ((  PathIsExploredException)t).printStackTrace();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        t.printStackTrace();    ((  PathIsExploredException)t).printStackTrace();	  	compilable	  [FE]  ClassCastException  	14	1	add
65	[BUG]  [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  2) ";  [CE]  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  2) ";  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  2) ";	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLineNumber()    +    1)   ";    	non-compiled	[CE]  	7	None	replace
66	[BUG]  [BUGGY]  if(e  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	13	None	replace
67	[BUG]  [BUGGY]  safeName(e.getLineNumber())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  safeName(e.getLineNumber())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	safeName(e.getLineNumber())  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	13	None	replace
68	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	      if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
69	[BUG]  [BUGGY]  final  int  lineNumber  =  e.lineNumber();  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  e.lineNumber();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  e.lineNumber();	      final    int    lineNumber    =    e.length();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
70	[BUG]  [BUGGY]  final  int  lineNumber  =  element.length();  [CE]  cannot  find  symbol  element  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  element.length();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  element.length();	      final    int    lineNumber    =    e.length();    	non-compiled	[CE]  cannot  find  symbol  element	5	None	replace
71	[BUG]  [BUGGY]  final  int  lineNumber  =  e.columnNumber();  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  final  int  lineNumber  =  e.columnNumber();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	final  int  lineNumber  =  e.columnNumber();	      final    int    lineNumber    =    e.getColumnNumber();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
72	[BUG]  [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  >=  0)  {  return  t.toString();  }  [CE]  illegal  start  of  expression  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  >=  0)  {  return  t.toString();  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  >=  0)  {  return  t.toString();  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    return    t.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
73	[BUG]  [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  elements[n].length();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  elements[n].length();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  final  int  lineNumber  =  elements[n].length();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    elements[n];    if(lineNumber    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
74	[BUG]  [BUGGY]      t.printStackTrace();  n.printStackTrace();  [CE]  int  cannot  be  dereferenced  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  n.printStackTrace();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        t.printStackTrace();    n.printStackTrace();	  	non-compiled	[CE]  int  cannot  be  dereferenced	14	None	add
75	[BUG]  [BUGGY]      t.printStackTrace();  t.printStackTrace();  }  [CE]  illegal  start  of  type  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  t.printStackTrace();  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        t.printStackTrace();    t.printStackTrace();  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
76	[BUG]  [BUGGY]      t.printStackTrace();  T.printStackTrace();  [CE]  cannot  find  symbol  T  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]      t.printStackTrace();  T.printStackTrace();  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	        t.printStackTrace();    T.printStackTrace();	  	non-compiled	[CE]  cannot  find  symbol  T	14	None	add
77	[BUG]  [BUGGY]  if(e  ==  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e  ==  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e  ==  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  t.setLineNumber(e);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  t.setLineNumber(e);  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	t.setLineNumber(e);	      e.setLineNumber(n);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
80	[BUG]  [BUGGY]  e.setLineNumber(t.getLineNumber());  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  e.setLineNumber(t.getLineNumber());  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	e.setLineNumber(t.getLineNumber());	      e.setLineNumber(n);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
81	[BUG]  [BUGGY]  return  e.getMethodName()  + ",  at  line   "  +  e.getLineNumber()  +  1) ";  [CE]  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  e.getMethodName()  + ",  at  line   "  +  e.getLineNumber()  +  1) ";  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  e.getMethodName()  + ",  at  line   "  +  e.getLineNumber()  +  1) ";	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLineNumber()    +    1)   ";    	non-compiled	[CE]  	7	None	replace
82	[BUG]  [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) " ",  t);  [CE]  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) " ",  t);  [BUGGY]    }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	return  e.getMethodName()  + "  (at  line   "  +  e.getLineNumber()  +  1) " ",  t);	  return    e.getMethodName()    +   "    (at    line       "    +    e.getLineNumber()    +    1)   "   ";    	non-compiled	[CE]  	16	None	replace
83	[BUG]  [BUGGY]  t.printStackTrace(e,  NEGATING_THOUSAND);  [CE]  cannot  find  symbol  NEGATING_THOUSAND  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  t.printStackTrace(e,  NEGATING_THOUSAND);  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	t.printStackTrace(e,  NEGATING_THOUSAND);	      t.printStackTrace(e);    	non-compiled	[CE]  cannot  find  symbol  NEGATING_THOUSAND	17	None	replace
84	[BUG]  [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  elements.getLineNumber();  if(lineNumber  ==  0)  {  return  t.toString();  }  [CE]  illegal  start  of  expression  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  elements.getLineNumber();  if(lineNumber  ==  0)  {  return  t.toString();  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  final  int  lineNumber  =  elements.getLineNumber();  if(lineNumber  ==  0)  {  return  t.toString();  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    return    t.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
85	[BUG]  [BUGGY]  if(e  ==  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }  [CE]  illegal  start  of  expression  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e  ==  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e  ==  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  ==  0)  {  throw  new  PathIsExploredException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    PathIsExploredException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  >=  0)  {  throw  new  PathIsExploredException( " ");  }  [CE]  illegal  start  of  expression  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  >=  0)  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  final  int  lineNumber  =  e.getLineNumber();  if(lineNumber  >=  0)  {  throw  new  PathIsExploredException( " ");  }	      if(e!=    null)    {    final    int    lineNumber    =    e.getLineNumber();    if(lineNumber    ==    0)    {    throw    new    PathIsExploredException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  tryFallThrough(e.getLineNumber())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  tryFallThrough(e.getLineNumber())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	tryFallThrough(e.getLineNumber())  {  throw  new  IllegalArgumentException( " ");  }	      if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	13	None	replace
88	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]      IllegalArgumentException    [CONTEXT]    private  static  String  caller(int  n)  {  final  Throwable  t  =  new  Throwable();  final  StackTraceElement[]  elements  =  t.getStackTrace();  final  StackTraceElement  e  =  elements[n];    [BUGGY]  if(e!=  null)  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]    return  e.getMethodName()  +     "  (at  line     "  +  e.getLineNumber()  +     ")   ";  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  caller  [RETURN_TYPE]  String  int  n  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  ds  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  StackTraceElement[]  elements  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  Throwable  t  StackTraceElement  e  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	if(e!=  null)  {  throw  new  PathIsExploredException( " ");  }	      if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	13	None	replace
