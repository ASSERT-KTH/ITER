projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656jpt=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nfxm));
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(!isMinimize){thrownewPathIsExploredException("");}else{stepb=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nfxm));thrownewPathIsExploredException("");}
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656jpt=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nfxm));thrownewPathIsExploredException();
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(!isMinimize){thrownewPathIsExploredException("");}else{stepb=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nfxm));thrownewPathIsExp
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(!isMinimize){thrownewPathIsExploredException("");}else{stepb=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nfxm));thrownewPathIsExploredException
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(ipt>n){
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(ipt>0){
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(jpt>n){
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(jpt<0){
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656BOBYQAOptimizer$PathIsExploredException=isMinimize?lowerBound:upperBound;
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656BOBYQAOptimizer$PathIsExploredException=isMinimize?upperBound:lowerDifference.getEntry(nfxm));
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656BOBYQAOptimizer$PathIsExploredException=isMinimize?upperBound:upperBound;
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656BOBYQAOptimizer$PathIsExploredException=isMinimize?upperBound:lowerDifference.getEntry(nfxm)+stepb;
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656BOBYQAOptimizer$PathIsExploredException=isMinimize?lowerBound:lowerBound;
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(ipt==n){
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(ipt>=n){
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(jpt>0){
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656if(ipt<n){
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656n=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nfxm));
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656n=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nfxm));thrownewPathIsExploredException();
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656n=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nfxm));stepb=Math.max(-TWO*initialTrustRegionRadius,upperBound);
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656n=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nfxm));stepb=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nf
projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java1656n=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(nfxm));stepb=Math.max(-TWO*initialTrustRegionRadius,lowerDifference.getEntry(
