bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  ipt;  jpt  =  jpt  +  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	        jpt    =    jpt    +    ipt;    jpt  =  jpt  +  ipt;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
2	[BUG]  [BUGGY]      jpt  =  jpt  +  ipt;  jpt  =  jpt  +  ipt;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  ipt;  jpt  =  jpt  +  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    +    ipt;    jpt  =  jpt  +  ipt;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
3	[BUG]  [BUGGY]      jpt  =  jpt  +  ipt;  int  jpt  =  jpt  +  ipt;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  ipt;  int  jpt  =  jpt  +  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    +    ipt;    int  jpt  =  jpt  +  ipt;	  	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	17	None	add
4	[BUG]  [BUGGY]      jpt  =  jpt  +  ipt;  final  int  jpt  =  jpt  +  ipt;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  ipt;  final  int  jpt  =  jpt  +  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    +    ipt;    final  int  jpt  =  jpt  +  ipt;	  	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	17	None	add
5	[BUG]  [BUGGY]      jpt  =  jpt  +  ipt;  Jpt  =  jpt  +  ipt;  [CE]  cannot  find  symbol  Jpt  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  ipt;  Jpt  =  jpt  +  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    +    ipt;    Jpt  =  jpt  +  ipt;	  	non-compiled	[CE]  cannot  find  symbol  Jpt	17	None	add
6	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	replace
7	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	replace
8	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  n1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [CE]  cannot  find  symbol  n1  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  n1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,  n1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  cannot  find  symbol  n1	4	None	replace
9	[BUG]  [BUGGY]  interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [CE]  cannot  find  symbol  tmp2  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  cannot  find  symbol  tmp2	4	None	replace
10	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	6	1	add
11	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	6	1	add
12	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  	non-compiled	[CE]  ';'  expected	6	None	add
13	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  InterpolationPoints.getEntry(jpt,  jptMinus1));  [CE]  cannot  find  symbol  InterpolationPoints  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  InterpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  InterpolationPoints.getEntry(jpt,  jptMinus1));	  	non-compiled	[CE]  cannot  find  symbol  InterpolationPoints	6	None	add
14	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  n1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  cannot  find  symbol  n1  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  n1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,  n1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	non-compiled	[CE]  cannot  find  symbol  n1	27	None	replace
15	[BUG]  [BUGGY]  interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  cannot  find  symbol  tmp2  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	non-compiled	[CE]  cannot  find  symbol  tmp2	27	None	replace
16	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  n));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  n));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  OutOfRangeException  	27	1	replace
17	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  n));  [FE]  OutOfRangeException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  n));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  n));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  OutOfRangeException  	27	1	replace
18	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  nfm;  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  nfm;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  nfm;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    1    :    bMatrix;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
19	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  bMatrix  =(bMatrix  ==  null)?  1  :  bMatrix;  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  bMatrix  =(bMatrix  ==  null)?  1  :  bMatrix;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  bMatrix  =(bMatrix  ==  null)?  1  :  bMatrix;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    1    :    bMatrix;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
20	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jfm  =(bMatrix  ==  null)?  1  :  bMatrix;  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jfm  =(bMatrix  ==  null)?  1  :  bMatrix;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  jfm  =(bMatrix  ==  null)?  1  :  bMatrix;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    1    :    bMatrix;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
21	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(jpt,    iptMinus1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	2	1	replace
22	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(jpt,    iptMinus1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	2	1	replace
23	[BUG]  [BUGGY]  final  int  jptMinus1  =  jpt;  [CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  jptMinus1  =  jpt;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  jptMinus1  =  jpt;	      	non-compiled	[CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])	9	None	replace
24	[BUG]  [BUGGY]  final  int  jptMinus1  =  jptMinus1;  [CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  jptMinus1  =  jptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  jptMinus1  =  jptMinus1;	      	non-compiled	[CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])	9	None	replace
25	[BUG]  [BUGGY]  jptMinus1  =  jptMinus1;  [CE]  cannot  assign  a  value  to  final  variable  jptMinus1  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jptMinus1  =  jptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jptMinus1  =  jptMinus1;	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  jptMinus1	9	None	replace
26	[BUG]  [BUGGY]  final  int  jptMinus1  =  jptMinus;  [CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  jptMinus1  =  jptMinus;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  jptMinus1  =  jptMinus;	      	non-compiled	[CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])	9	None	replace
27	[BUG]  [BUGGY]  nfm  =  Math.min(iptMinus1,  jptMinus1);  [CE]  cannot  assign  a  value  to  final  variable  nfm  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  nfm  =  Math.min(iptMinus1,  jptMinus1);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	nfm  =  Math.min(iptMinus1,  jptMinus1);	      nfm    =    Math.min(iptMinus1,    upperBound);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  nfm	33	None	replace
28	[BUG]  [BUGGY]  nfm  =  Math.min(iptMinus1,  n);  [CE]  cannot  assign  a  value  to  final  variable  nfm  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  nfm  =  Math.min(iptMinus1,  n);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	nfm  =  Math.min(iptMinus1,  n);	      nfm    =    Math.min(iptMinus1,    upperBound);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  nfm	33	None	replace
29	[BUG]  [BUGGY]  nfm  =  Math.min(iptMinus1,  lowerBound);  [CE]  cannot  assign  a  value  to  final  variable  nfm  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  nfm  =  Math.min(iptMinus1,  lowerBound);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	nfm  =  Math.min(iptMinus1,  lowerBound);	      nfm    =    Math.min(iptMinus1,    upperBound);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  nfm	33	None	replace
30	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  ipt;  jpt  =  jpt  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	        jpt    =    jpt    -    ipt;    jpt  =  jpt  -  ipt;	  	compilable	  [FE]  OutOfRangeException  	11	1	add
31	[BUG]  [BUGGY]      jpt  =  jpt  -  ipt;  jpt  =  jpt  -  ipt;  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  ipt;  jpt  =  jpt  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    ipt;    jpt  =  jpt  -  ipt;	  	compilable	  [FE]  OutOfRangeException  	11	1	add
32	[BUG]  [BUGGY]      jpt  =  jpt  -  ipt;  int  jpt  =  jpt  -  ipt;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  ipt;  int  jpt  =  jpt  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    ipt;    int  jpt  =  jpt  -  ipt;	  	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	11	None	add
33	[BUG]  [BUGGY]      jpt  =  jpt  -  ipt;  jpt  =  jpt  -  ipt);  [CE]  ';'  expected  [FE]        OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  ipt;  jpt  =  jpt  -  ipt);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    ipt;    jpt  =  jpt  -  ipt);	  	non-compiled	[CE]  ';'  expected	11	None	add
34	[BUG]  [BUGGY]      jpt  =  jpt  -  ipt;  Jpt  =  jpt  -  ipt;  [CE]  cannot  find  symbol  Jpt  [FE]          OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  ipt;  Jpt  =  jpt  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    ipt;    Jpt  =  jpt  -  ipt;	  	non-compiled	[CE]  cannot  find  symbol  Jpt	11	None	add
35	[BUG]  [BUGGY]  final  int  iptMinus1  =  ipt;  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  ipt;	      final    int    iptMinus1    =    jpt;    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	10	None	replace
36	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt  +  1;  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt  +  1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt  +  1;	      final    int    iptMinus1    =    jpt;    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	10	None	replace
37	[BUG]  [BUGGY]  final  int  iptMinus1  =  n;  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  n;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  n;	      final    int    iptMinus1    =    jpt;    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	10	None	replace
38	[BUG]  [BUGGY]      final  int  jptMinus1  =  jptMinus2;  [CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      final  int  jptMinus1  =  jptMinus2;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        final  int  jptMinus1  =  jptMinus2;	  	non-compiled	[CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])	8	None	add
39	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	29	1	add
40	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	29	1	add
41	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  	non-compiled	[CE]  ';'  expected	29	None	add
42	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  InterpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  cannot  find  symbol  InterpolationPoints  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  InterpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  InterpolationPoints.getEntry(jpt,  iptMinus1));	  	non-compiled	[CE]  cannot  find  symbol  InterpolationPoints	29	None	add
43	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(jpt,    iptMinus1,    interpolationPoints.getEntry(ipt,    iptMinus1));    interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
44	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,    iptMinus1,    interpolationPoints.getEntry(ipt,    iptMinus1));    interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
45	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  InterpolationPoints  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  InterpolationPoints  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,    iptMinus1,    interpolationPoints.getEntry(ipt,    iptMinus1));    InterpolationPoints  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  	non-compiled	[CE]  ';'  expected	1	None	add
46	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus2));  [CE]  cannot  find  symbol  iptMinus2  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus2));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,    iptMinus1,    interpolationPoints.getEntry(ipt,    iptMinus1));    interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus2));	  	non-compiled	[CE]  cannot  find  symbol  iptMinus2	1	None	add
47	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt  -  jpt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  ipt  -  jpt;	      jpt    =    jpt    -    ipt;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	12	1	replace
48	[BUG]  [BUGGY]  jpt  =  ipt  -  jpt;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt  -  jpt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  ipt  -  jpt;	      jpt    =    jpt    -    ipt;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	12	1	replace
49	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  jpt  -  n;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  jpt  -  n;	      jpt    =    jpt    -    ipt;    	compilable	  [FE]  OutOfRangeException  	12	1	replace
50	[BUG]  [BUGGY]  jpt  =  jpt  -  n;  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  jpt  -  n;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  jpt  -  n;	      jpt    =    jpt    -    ipt;    	compilable	  [FE]  OutOfRangeException  	12	1	replace
51	[BUG]  [BUGGY]  jpt  =  jpt  +  tmp2;  [CE]  cannot  find  symbol  tmp2  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  jpt  +  tmp2;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  jpt  +  tmp2;	      jpt    =    jpt    +    iptMinus1;    	non-compiled	[CE]  cannot  find  symbol  tmp2	16	None	replace
52	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  jpt  +  tmp1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  jpt  +  tmp1;	      jpt    =    jpt    +    iptMinus1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	replace
53	[BUG]  [BUGGY]  jpt  =  jpt  +  tmp1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  jpt  +  tmp1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  jpt  +  tmp1;	      jpt    =    jpt    +    iptMinus1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	replace
54	[BUG]  [BUGGY]  jpt  =  jpt  +  iptMinus2;  [CE]  cannot  find  symbol  iptMinus2  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  jpt  +  iptMinus2;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  jpt  +  iptMinus2;	      jpt    =    jpt    +    iptMinus1;    	non-compiled	[CE]  cannot  find  symbol  iptMinus2	16	None	replace
55	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(ipt,    nfm,    iptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	24	None	replace
56	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  nfm));  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  nfm));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,  nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  nfm));	  interpolationPoints.setEntry(ipt,    nfm,    iptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	24	None	replace
57	[BUG]  [BUGGY]  interpolationPoints.setEntry(jptMinus,  nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  nfm));  [CE]  cannot  find  symbol  jptMinus  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jptMinus,  nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  nfm));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jptMinus,  nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  nfm));	  interpolationPoints.setEntry(ipt,    nfm,    iptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  cannot  find  symbol  jptMinus	24	None	replace
58	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,  nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(ipt,    nfm,    iptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	24	None	replace
59	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.intValue()  +  1;  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.intValue()  +  1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.intValue()  +  1;	      final    int    iptMinus1    =    jpt.intValue();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	31	None	replace
60	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.doubleValue();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.doubleValue();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.doubleValue();	      final    int    iptMinus1    =    jpt.intValue();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	31	None	replace
61	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.length();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.length();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.length();	      final    int    iptMinus1    =    jpt.intValue();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	31	None	replace
62	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  ==  null  :  bMatrix;  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  ==  null  :  bMatrix;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  ==  null  :  bMatrix;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    bMatrix    {    null    :    bMatrix;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
63	[BUG]  [BUGGY]  nfm  =(bMatrix  ==  null)?  bMatrix  {  null  :  bMatrix;  [CE]  :  expected  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  nfm  =(bMatrix  ==  null)?  bMatrix  {  null  :  bMatrix;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	nfm  =(bMatrix  ==  null)?  bMatrix  {  null  :  bMatrix;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    bMatrix    {    null    :    bMatrix;    	non-compiled	[CE]  :  expected	21	None	replace
64	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	        jpt    =    jpt    -    iptMinus1;    jpt  =  jpt  -  iptMinus1;	  	compilable	  [FE]  OutOfRangeException  	13	1	add
65	[BUG]  [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMinus1;  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    iptMinus1;    jpt  =  jpt  -  iptMinus1;	  	compilable	  [FE]  OutOfRangeException  	13	1	add
66	[BUG]  [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMinus1);  [CE]  ';'  expected  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMinus1);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    iptMinus1;    jpt  =  jpt  -  iptMinus1);	  	non-compiled	[CE]  ';'  expected	13	None	add
67	[BUG]  [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMaxus1;  [CE]  cannot  find  symbol  iptMaxus1  [FE]        OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMaxus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    iptMinus1;    jpt  =  jpt  -  iptMaxus1;	  	non-compiled	[CE]  cannot  find  symbol  iptMaxus1	13	None	add
68	[BUG]  [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMinus1.;  [CE]  <identifier>  expected  [FE]          OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMinus1.;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    iptMinus1;    jpt  =  jpt  -  iptMinus1.;	  	non-compiled	[CE]  <identifier>  expected	13	None	add
69	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQOptimizer(ipt);  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQOptimizer(ipt);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQOptimizer(ipt);	      BOBYQAOptimizer$PathIsExploredException    nfm    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
70	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpm  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpm  =  new  BOBYQOptimizer();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  jpm  =  new  BOBYQOptimizer();	      BOBYQAOptimizer$PathIsExploredException    nfm    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
71	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jfm  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]                  BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jfm  =  new  BOBYQOptimizer();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  jfm  =  new  BOBYQOptimizer();	      BOBYQAOptimizer$PathIsExploredException    nfm    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
72	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    tmp2,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	25	1	replace
73	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    tmp2,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	25	1	replace
74	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus2,  interpolationPoints.getEntry(ipt,  iptMinus1));  [CE]  cannot  find  symbol  jptMinus2  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus2,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  jptMinus2,  interpolationPoints.getEntry(ipt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    tmp2,    interpolationPoints.getEntry(ipt,    iptMinus1));    	non-compiled	[CE]  cannot  find  symbol  jptMinus2	25	None	replace
75	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jpt1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [CE]  cannot  find  symbol  jpt1  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jpt1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  jpt1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    tmp2,    interpolationPoints.getEntry(ipt,    iptMinus1));    	non-compiled	[CE]  cannot  find  symbol  jpt1	25	None	replace
76	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQAOptimizer(ipt);  [CE]  cannot  find  symbol  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQAOptimizer(ipt);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQAOptimizer(ipt);	      BOBYQAOptimizer$PathIsExploredException    nfm    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
77	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jfm  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jfm  =  new  BOBYQAOptimizer();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  jfm  =  new  BOBYQAOptimizer();	      BOBYQAOptimizer$PathIsExploredException    nfm    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
78	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.getUpperBound();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.getUpperBound();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.getUpperBound();	      final    int    iptMinus1    =    jpt.getLowerBound();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	32	None	replace
79	[BUG]  [BUGGY]  final  int  iptMinus1  =  upperBound.getLowerBound();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  upperBound.getLowerBound();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  upperBound.getLowerBound();	      final    int    iptMinus1    =    jpt.getLowerBound();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	32	None	replace
80	[BUG]  [BUGGY]  final  double  iptMinus1  =  jpt.getLowerBound();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  double  iptMinus1  =  jpt.getLowerBound();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  double  iptMinus1  =  jpt.getLowerBound();	      final    int    iptMinus1    =    jpt.getLowerBound();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	32	None	replace
81	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix.intValue();  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix.intValue();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix.intValue();	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    1    :    bMatrix.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
82	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix.subtract(jptMinus1,  jptMinus1);  [CE]  cannot  find  symbol  [FE]                  BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix.subtract(jptMinus1,  jptMinus1);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix.subtract(jptMinus1,  jptMinus1);	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    1    :    bMatrix.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
83	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	26	1	add
84	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	26	1	add
85	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	26	1	add
86	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	26	1	add
87	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    InterpolationPoints  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  	non-compiled	[CE]  ';'  expected	26	None	add
88	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  ';'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  	non-compiled	[CE]  ';'  expected	26	None	add
89	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
90	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
91	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    InterpolationPoints  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  	non-compiled	[CE]  ';'  expected	3	None	add
92	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
93	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
94	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus2));  [CE]  cannot  find  symbol  jptMinus2  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus2));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus2));	  	non-compiled	[CE]  cannot  find  symbol  jptMinus2	3	None	add
95	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  ipt1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [CE]  cannot  find  symbol  ipt1  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  ipt1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  ipt1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  interpolationPoints.setEntry(ipt,    n1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	non-compiled	[CE]  cannot  find  symbol  ipt1	5	None	replace
96	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  interpolationPoints.setEntry(ipt,    n1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	5	1	replace
97	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  interpolationPoints.setEntry(ipt,    n1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	5	1	replace
98	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  n1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [CE]  cannot  find  symbol  n1  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  n1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  n1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(ipt,    n1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	non-compiled	[CE]  cannot  find  symbol  n1	5	None	replace
99	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	replace
100	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	replace
101	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  n));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  n));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  OutOfRangeException  	30	1	replace
102	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  n));  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  n));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  n));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  OutOfRangeException  	30	1	replace
103	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(nfm,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(nfm,  iptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	replace
104	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(nfm,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(nfm,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(nfm,  iptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	replace
105	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  nfm));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  nfm));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    	compilable	  [FE]  OutOfRangeException  	7	1	replace
106	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  nfm));  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  nfm));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  nfm));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    	compilable	  [FE]  OutOfRangeException  	7	1	replace
107	[BUG]  [BUGGY]  interpolationPoints.setEntry(tmp2,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [CE]  cannot  find  symbol  tmp2  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(tmp2,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(tmp2,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    	non-compiled	[CE]  cannot  find  symbol  tmp2	7	None	replace
108	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  iptMinus1;  jpt  =  jpt  +  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	        jpt    =    jpt    +    iptMinus1;    jpt  =  jpt  +  iptMinus1;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	add
109	[BUG]  [BUGGY]      jpt  =  jpt  +  iptMinus1;  jpt  =  jpt  +  iptMinus1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  iptMinus1;  jpt  =  jpt  +  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    +    iptMinus1;    jpt  =  jpt  +  iptMinus1;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	add
110	[BUG]  [BUGGY]      jpt  =  jpt  +  iptMinus1;  jpt  =  jpt  +  iptMinus1);  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  iptMinus1;  jpt  =  jpt  +  iptMinus1);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    +    iptMinus1;    jpt  =  jpt  +  iptMinus1);	  	non-compiled	[CE]  ';'  expected	15	None	add
111	[BUG]  [BUGGY]      jpt  =  jpt  +  iptMinus1;  jpt  =  jpt  +  iptMinus1.;  [CE]  <identifier>  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  iptMinus1;  jpt  =  jpt  +  iptMinus1.;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    +    iptMinus1;    jpt  =  jpt  +  iptMinus1.;	  	non-compiled	[CE]  <identifier>  expected	15	None	add
112	[BUG]  [BUGGY]      jpt  =  jpt  +  iptMinus1;  jpt  =  jpt  +  iptMaxus1;  [CE]  cannot  find  symbol  iptMaxus1  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  iptMinus1;  jpt  =  jpt  +  iptMaxus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    +    iptMinus1;    jpt  =  jpt  +  iptMaxus1;	  	non-compiled	[CE]  cannot  find  symbol  iptMaxus1	15	None	add
113	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  iptMinus1  -  jptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  iptMinus1  -  jptMinus1;	      jpt    =    jpt    -    iptMinus1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	14	1	replace
114	[BUG]  [BUGGY]  jpt  =  iptMinus1  -  jptMinus1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  iptMinus1  -  jptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  iptMinus1  -  jptMinus1;	      jpt    =    jpt    -    iptMinus1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	14	1	replace
115	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt  -  jptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  ipt  -  jptMinus1;	      jpt    =    jpt    -    iptMinus1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	14	1	replace
116	[BUG]  [BUGGY]  jpt  =  ipt  -  jptMinus1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt  -  jptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  ipt  -  jptMinus1;	      jpt    =    jpt    -    iptMinus1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	14	1	replace
117	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.getLength()  +  1;  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.getLength()  +  1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.getLength()  +  1;	      final    int    iptMinus1    =    jpt.getLength();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	34	None	replace
118	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.getIndex();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.getIndex();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.getIndex();	      final    int    iptMinus1    =    jpt.getLength();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	34	None	replace
119	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.getImmediateParent();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.getImmediateParent();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.getImmediateParent();	      final    int    iptMinus1    =    jpt.getLength();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	34	None	replace
120	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  {  null  :  bMatrix  +  1;  [CE]  :  expected  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  {  null  :  bMatrix  +  1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  {  null  :  bMatrix  +  1;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    bMatrix    {    null    :    bMatrix;    	non-compiled	[CE]  :  expected	21	None	replace
121	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  <  null  :  bMatrix;  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  <  null  :  bMatrix;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  <  null  :  bMatrix;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    bMatrix    {    null    :    bMatrix;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
122	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix!=  null  :  bMatrix;  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix!=  null  :  bMatrix;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix!=  null  :  bMatrix;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    bMatrix    {    null    :    bMatrix;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
123	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus2));  [CE]  cannot  find  symbol  iptMinus2  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus2));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus2));	  	non-compiled	[CE]  cannot  find  symbol  iptMinus2	29	None	add
124	[BUG]  [BUGGY]  BOBYQOptimizer$PathIsExploredException  nfm  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQOptimizer$PathIsExploredException  nfm  =  new  BOBYQOptimizer();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQOptimizer$PathIsExploredException  nfm  =  new  BOBYQOptimizer();	      BOBYQAOptimizer$PathIsExploredException    nfm    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
125	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  fm  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  fm  =  new  BOBYQOptimizer();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  fm  =  new  BOBYQOptimizer();	      BOBYQAOptimizer$PathIsExploredException    nfm    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
126	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(jpt,    iptMinus1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	2	1	replace
127	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(jpt,    iptMinus1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	2	1	replace
128	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  tmp2,  interpolationPoints.getEntry(ipt,  jptMinus1));  [CE]  cannot  find  symbol  tmp2  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  tmp2,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  tmp2,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  cannot  find  symbol  tmp2	4	None	replace
129	[BUG]  [BUGGY]      jpt  =  jpt  +  iptMinus1;  Jpt  =  jpt  +  iptMinus1;  [CE]  cannot  find  symbol  Jpt  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  iptMinus1;  Jpt  =  jpt  +  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    +    iptMinus1;    Jpt  =  jpt  +  iptMinus1;	  	non-compiled	[CE]  cannot  find  symbol  Jpt	15	None	add
130	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	7	None	replace
131	[BUG]  [BUGGY]  interpolationPoints.setEntry(iptMinus1,  nfm.getEntry(jpt,  jptMinus1));  [CE]  int  cannot  be  dereferenced  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(iptMinus1,  nfm.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(iptMinus1,  nfm.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    	non-compiled	[CE]  int  cannot  be  dereferenced	7	None	replace
132	[BUG]  [BUGGY]      jpt  =  jpt  +  ipt;  (jpt  =  jpt  +  ipt;  [CE]  ')'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  +  ipt;  (jpt  =  jpt  +  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    +    ipt;    (jpt  =  jpt  +  ipt;	  	non-compiled	[CE]  ')'  expected	17	None	add
133	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.getHeight();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.getHeight();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.getHeight();	      final    int    iptMinus1    =    jpt.getLength();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	34	None	replace
134	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.getStart();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.getStart();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.getStart();	      final    int    iptMinus1    =    jpt.getLength();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	34	None	replace
135	[BUG]  [BUGGY]  final  int  iptMinus1  =  ipt2;  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  ipt2;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  ipt2;	      final    int    iptMinus1    =    jpt;    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	10	None	replace
136	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  fm  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  fm  =  new  BOBYQAOptimizer();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  fm  =  new  BOBYQAOptimizer();	      BOBYQAOptimizer$PathIsExploredException    nfm    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
137	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus2));  [CE]  cannot  find  symbol  jptMinus2  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus2));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus2));	  	non-compiled	[CE]  cannot  find  symbol  jptMinus2	6	None	add
138	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt  +  jpt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  ipt  +  jpt;	      jpt    =    jpt    +    ipt;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	18	1	replace
139	[BUG]  [BUGGY]  jpt  =  ipt  +  jpt;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt  +  jpt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  ipt  +  jpt;	      jpt    =    jpt    +    ipt;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	18	1	replace
140	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus2,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  cannot  find  symbol  iptMinus2  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus2,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  iptMinus2,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(tmp2,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	non-compiled	[CE]  cannot  find  symbol  iptMinus2	28	None	replace
141	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  n,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(ipt,  n,  interpolationPoints.getEntry(ipt,  iptMinus1));	  interpolationPoints.setEntry(ipt,    n1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  OutOfRangeException  	5	1	replace
142	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  n,  interpolationPoints.getEntry(ipt,  iptMinus1));  [FE]  OutOfRangeException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  n,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  n,  interpolationPoints.getEntry(ipt,  iptMinus1));	  interpolationPoints.setEntry(ipt,    n1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  OutOfRangeException  	5	1	replace
143	[BUG]  [BUGGY]  interpolationPoints.setEntry(iptMinus1,  nfm.getEntry(jpt,  iptMinus1));  [CE]  int  cannot  be  dereferenced  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(iptMinus1,  nfm.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(iptMinus1,  nfm.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	non-compiled	[CE]  int  cannot  be  dereferenced	30	None	replace
144	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	30	None	replace
145	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  fm  =(bMatrix  ==  null)?  1  :  bMatrix;  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  fm  =(bMatrix  ==  null)?  1  :  bMatrix;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  fm  =(bMatrix  ==  null)?  1  :  bMatrix;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    1    :    bMatrix;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
146	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  bfm  =(bMatrix  ==  null)?  1  :  bMatrix;  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  bfm  =(bMatrix  ==  null)?  1  :  bMatrix;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  bfm  =(bMatrix  ==  null)?  1  :  bMatrix;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    1    :    bMatrix;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
147	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  n  +  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  n  +  iptMinus1;	      jpt    =    jpt    +    iptMinus1;    	compilable	  [FE]  OutOfRangeException  	16	1	replace
148	[BUG]  [BUGGY]  jpt  =  n  +  iptMinus1;  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  n  +  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  n  +  iptMinus1;	      jpt    =    jpt    +    iptMinus1;    	compilable	  [FE]  OutOfRangeException  	16	1	replace
149	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.getLowerBound()  +  1;  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.getLowerBound()  +  1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.getLowerBound()  +  1;	      final    int    iptMinus1    =    jpt.getLowerBound();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	32	None	replace
150	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    InterpolationPoints  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  	non-compiled	[CE]  ';'  expected	3	None	add
151	[BUG]  [BUGGY]  iptMinus1  =  Math.min(iptMinus1,  upperBound);  [CE]  cannot  assign  a  value  to  final  variable  iptMinus1  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  iptMinus1  =  Math.min(iptMinus1,  upperBound);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	iptMinus1  =  Math.min(iptMinus1,  upperBound);	      nfm    =    Math.min(iptMinus1,    upperBound);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iptMinus1	33	None	replace
152	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException();  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException();	      	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	9	None	replace
153	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException( "Interpolation  points  can  not  be  deprecated. ");  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException( "Interpolation  points  can  not  be  deprecated. ");  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException( "Interpolation  points  can  not  be  deprecated. ");	      	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	9	None	replace
154	[BUG]  [BUGGY]      jpt  =  jpt  -  ipt;  final  int  jpt  =  jpt  -  ipt;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  ipt;  final  int  jpt  =  jpt  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    ipt;    final  int  jpt  =  jpt  -  ipt;	  	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	11	None	add
155	[BUG]  [BUGGY]      jpt  =  jpt  -  ipt;  (jpt  =  jpt  -  ipt;  [CE]  ')'  expected  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  ipt;  (jpt  =  jpt  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    ipt;    (jpt  =  jpt  -  ipt;	  	non-compiled	[CE]  ')'  expected	11	None	add
156	[BUG]  [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException( "Interpolation  points  can  not  be  removed ");  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException( "Interpolation  points  can  not  be  removed ");  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException( "Interpolation  points  can  not  be  removed ");	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	8	None	add
157	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	replace
158	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	replace
159	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  ipt1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  cannot  find  symbol  ipt1  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  ipt1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  ipt1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	non-compiled	[CE]  cannot  find  symbol  ipt1	27	None	replace
160	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus2));  [CE]  cannot  find  symbol  jptMinus2  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus2));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus2));	  interpolationPoints.setEntry(ipt,    nfm,    iptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  cannot  find  symbol  jptMinus2	24	None	replace
161	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,  nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(ipt,    nfm,    iptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	24	None	replace
162	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  iptMinus1,  interpolationPoints.getEntry(jpt,  nfm));  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  iptMinus1,  interpolationPoints.getEntry(jpt,  nfm));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  jptMinus1,  iptMinus1,  interpolationPoints.getEntry(jpt,  nfm));	  interpolationPoints.setEntry(ipt,    nfm,    iptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	24	None	replace
163	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix.subtract(iptMinus1,  bMatrix.doubleValue());  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix.subtract(iptMinus1,  bMatrix.doubleValue());  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix.subtract(iptMinus1,  bMatrix.doubleValue());	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    1    :    bMatrix.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
164	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  fm  =(bMatrix  ==  null)?  1  :  bMatrix.doubleValue();  [CE]  cannot  find  symbol  [FE]                  BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  fm  =(bMatrix  ==  null)?  1  :  bMatrix.doubleValue();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  fm  =(bMatrix  ==  null)?  1  :  bMatrix.doubleValue();	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    1    :    bMatrix.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
165	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.longValue();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.longValue();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.longValue();	      final    int    iptMinus1    =    jpt.intValue();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	31	None	replace
166	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt  -  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  ipt  -  iptMinus1;	      jpt    =    jpt    -    iptMinus1;    	compilable	  [FE]  OutOfRangeException  	14	1	replace
167	[BUG]  [BUGGY]  jpt  =  ipt  -  iptMinus1;  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt  -  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  ipt  -  iptMinus1;	      jpt    =    jpt    -    iptMinus1;    	compilable	  [FE]  OutOfRangeException  	14	1	replace
168	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  n  -  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  n  -  iptMinus1;	      jpt    =    jpt    -    iptMinus1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	14	1	replace
169	[BUG]  [BUGGY]  jpt  =  n  -  iptMinus1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  n  -  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  n  -  iptMinus1;	      jpt    =    jpt    -    iptMinus1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	14	1	replace
170	[BUG]  [BUGGY]  jpt  =  iptMinus2  -  jptMinus1;  [CE]  cannot  find  symbol  iptMinus2  [FE]        OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  iptMinus2  -  jptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  iptMinus2  -  jptMinus1;	      jpt    =    jpt    -    iptMinus1;    	non-compiled	[CE]  cannot  find  symbol  iptMinus2	14	None	replace
171	[BUG]  [BUGGY]  jpt  =  ipt1  -  jptMinus1;  [CE]  cannot  find  symbol  ipt1  [FE]          OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt1  -  jptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  ipt1  -  jptMinus1;	      jpt    =    jpt    -    iptMinus1;    	non-compiled	[CE]  cannot  find  symbol  ipt1	14	None	replace
172	[BUG]  [BUGGY]  final  int  iptMinus1  =  tmp2;  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  tmp2;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  tmp2;	      final    int    iptMinus1    =    jpt;    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	10	None	replace
173	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interfacepolationPoints.getEntry(jpt,  iptMinus1));  [CE]  cannot  find  symbol  interfacepolationPoints  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interfacepolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interfacepolationPoints.getEntry(jpt,  iptMinus1));	  	non-compiled	[CE]  cannot  find  symbol  interfacepolationPoints	29	None	add
174	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	replace
175	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	replace
176	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  tmp1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(nfm,  tmp1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	replace
177	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  tmp1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  tmp1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  tmp1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	replace
178	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  tmp2,  interpolationPoints.getEntry(jpt,  jptMinus1));  [CE]  cannot  find  symbol  tmp2  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  tmp2,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  tmp2,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  cannot  find  symbol  tmp2	4	None	replace
179	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(n,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(n,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(tmp2,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	28	1	replace
180	[BUG]  [BUGGY]  interpolationPoints.setEntry(n,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(n,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(n,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(tmp2,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	28	1	replace
181	[BUG]  [BUGGY]  interpolationPoints.setEntry(iptMinus1,  jptMinus1.getEntry(jpt,  iptMinus1));  [CE]  int  cannot  be  dereferenced  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(iptMinus1,  jptMinus1.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(iptMinus1,  jptMinus1.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(tmp2,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	non-compiled	[CE]  int  cannot  be  dereferenced	28	None	replace
182	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  ipt;  jpt  =  ipt  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	        jpt    =    jpt    -    ipt;    jpt  =  ipt  -  ipt;	  	compilable	  [FE]  OutOfRangeException  	11	1	add
183	[BUG]  [BUGGY]      jpt  =  jpt  -  ipt;  jpt  =  ipt  -  ipt;  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  ipt;  jpt  =  ipt  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    ipt;    jpt  =  ipt  -  ipt;	  	compilable	  [FE]  OutOfRangeException  	11	1	add
184	[BUG]  [BUGGY]  final  int  iptMinus1  =  jpt.getImplicitReturn();  [CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  final  int  iptMinus1  =  jpt.getImplicitReturn();  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	final  int  iptMinus1  =  jpt.getImplicitReturn();	      final    int    iptMinus1    =    jpt.getLength();    	non-compiled	[CE]  variable  iptMinus1  is  already  defined  in  method  prelim(double[],double[])	34	None	replace
185	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus3));  [CE]  cannot  find  symbol  jptMinus3  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus3));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus3));	  	non-compiled	[CE]  cannot  find  symbol  jptMinus3	3	None	add
186	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  iptMinus1  -  jpt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  iptMinus1  -  jpt;	      jpt    =    jpt    -    iptMinus1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	14	1	replace
187	[BUG]  [BUGGY]  jpt  =  iptMinus1  -  jpt;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  iptMinus1  -  jpt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  iptMinus1  -  jpt;	      jpt    =    jpt    -    iptMinus1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	14	1	replace
188	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQOptimizer(nfm);  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQOptimizer(nfm);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQOptimizer(nfm);	      BOBYQAOptimizer$PathIsExploredException    nfm    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
189	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interfacepolationPoints.getEntry(jpt,  jptMinus1));  [CE]  cannot  find  symbol  interfacepolationPoints  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  interpolationPoints.setEntry(nfm,  iptMinus1,  interfacepolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    interpolationPoints.setEntry(nfm,  iptMinus1,  interfacepolationPoints.getEntry(jpt,  jptMinus1));	  	non-compiled	[CE]  cannot  find  symbol  interfacepolationPoints	6	None	add
190	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix,  iptMinus1;  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix,  iptMinus1;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  1  :  bMatrix,  iptMinus1;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    1    :    bMatrix;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
191	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interfacePoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [CE]  cannot  find  symbol  interfacePoints  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interfacePoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,    iptMinus1,    interpolationPoints.getEntry(ipt,    iptMinus1));    interfacePoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  	non-compiled	[CE]  cannot  find  symbol  interfacePoints	1	None	add
192	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  InterpolationPoints  interpolationPoints  =  interpolationPoints.getInterpolationPoints(ipt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [CE]  cannot  find  symbol  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  InterpolationPoints  interpolationPoints  =  interpolationPoints.getInterpolationPoints(ipt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,    iptMinus1,    interpolationPoints.getEntry(ipt,    iptMinus1));    InterpolationPoints  interpolationPoints  =  interpolationPoints.getInterpolationPoints(ipt,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
193	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQAOptimizer(nfm);  [CE]  cannot  find  symbol  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQAOptimizer(nfm);  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQAOptimizer(nfm);	      BOBYQAOptimizer$PathIsExploredException    nfm    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
194	[BUG]  [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMinus1,;  [CE]  ';'  expected  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  jpt  -  iptMinus1;  jpt  =  jpt  -  iptMinus1,;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt    =    jpt    -    iptMinus1;    jpt  =  jpt  -  iptMinus1,;	  	non-compiled	[CE]  ';'  expected	13	None	add
195	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  nfm  -  tmp1  *  n  -  n;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  nfm  -  tmp1  *  n  -  n;	      	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	9	1	replace
196	[BUG]  [BUGGY]  jpt  =  nfm  -  tmp1  *  n  -  n;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  nfm  -  tmp1  *  n  -  n;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  nfm  -  tmp1  *  n  -  n;	      	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	9	1	replace
197	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  nfm  -  tmp1  *  n  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  nfm  -  tmp1  *  n  -  ipt;	      	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	9	1	replace
198	[BUG]  [BUGGY]  jpt  =  nfm  -  tmp1  *  n  -  ipt;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  nfm  -  tmp1  *  n  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  nfm  -  tmp1  *  n  -  ipt;	      	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	9	1	replace
199	[BUG]  [BUGGY]  jptMinus2  =  jpt;  [CE]  cannot  find  symbol  jptMinus2  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jptMinus2  =  jpt;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jptMinus2  =  jpt;	      	non-compiled	[CE]  cannot  find  symbol  jptMinus2	9	None	replace
200	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  nfm  -  tmp1  *  n  -  1;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  nfm  -  tmp1  *  n  -  1;	      	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	9	1	replace
201	[BUG]  [BUGGY]  jpt  =  nfm  -  tmp1  *  n  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  nfm  -  tmp1  *  n  -  1;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  nfm  -  tmp1  *  n  -  1;	      	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	9	1	replace
202	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  n,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(ipt,  n,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(ipt,    n1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  OutOfRangeException  	5	1	replace
203	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  n,  interpolationPoints.getEntry(ipt,  jptMinus1));  [FE]  OutOfRangeException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(ipt,  n,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(ipt,  n,  interpolationPoints.getEntry(ipt,  jptMinus1));	  interpolationPoints.setEntry(ipt,    n1,    interpolationPoints.getEntry(ipt,    iptMinus1));    	compilable	  [FE]  OutOfRangeException  	5	1	replace
204	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	replace
205	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(jpt,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    jptMinus1));    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	replace
206	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  nfm  -  tmp1  *  ipt  -  n;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	        jpt  =  nfm  -  tmp1  *  ipt  -  n;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	add
207	[BUG]  [BUGGY]      jpt  =  nfm  -  tmp1  *  ipt  -  n;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]      jpt  =  nfm  -  tmp1  *  ipt  -  n;  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	        jpt  =  nfm  -  tmp1  *  ipt  -  n;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	add
208	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  >>  null  :  bMatrix;  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  >>  null  :  bMatrix;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	BOBYQAOptimizer$PathIsExploredException  nfm  =(bMatrix  ==  null)?  bMatrix  >>  null  :  bMatrix;	      BOBYQAOptimizer$PathIsExploredException    nfm    =(bMatrix    ==    null)?    bMatrix    {    null    :    bMatrix;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
209	[BUG]  [BUGGY]  interpolationPoints.setEntry(tmp2,  nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [CE]  cannot  find  symbol  tmp2  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(tmp2,  nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(tmp2,  nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	  interpolationPoints.setEntry(ipt,    nfm,    iptMinus1,    interpolationPoints.getEntry(ipt,    jptMinus1));    	non-compiled	[CE]  cannot  find  symbol  tmp2	24	None	replace
210	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus2));  [CE]  cannot  find  symbol  iptMinus2  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus2));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,    jptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus2));	  	non-compiled	[CE]  cannot  find  symbol  iptMinus2	26	None	add
211	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  jptMinus1  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  jptMinus1  -  ipt;	      jpt    =    jpt    -    ipt;    	compilable	  [FE]  OutOfRangeException  	12	1	replace
212	[BUG]  [BUGGY]  jpt  =  jptMinus1  -  ipt;  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  jptMinus1  -  ipt;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  jptMinus1  -  ipt;	      jpt    =    jpt    -    ipt;    	compilable	  [FE]  OutOfRangeException  	12	1	replace
213	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt  -  n;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	jpt  =  ipt  -  n;	      jpt    =    jpt    -    ipt;    	compilable	  [FE]  OutOfRangeException  	12	1	replace
214	[BUG]  [BUGGY]  jpt  =  ipt  -  n;  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  jpt  =  ipt  -  n;  [BUGGY]    interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	jpt  =  ipt  -  n;	      jpt    =    jpt    -    ipt;    	compilable	  [FE]  OutOfRangeException  	12	1	replace
215	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  tmp2,  interpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  cannot  find  symbol  tmp2  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    jpt  =  nfm  -  tmp1  *  n  -  n;  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;    [BUGGY]  interpolationPoints.setEntry(nfm,  tmp2,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]    interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	interpolationPoints.setEntry(nfm,  tmp2,  interpolationPoints.getEntry(jpt,  iptMinus1));	  interpolationPoints.setEntry(nfm,    iptMinus1,    interpolationPoints.getEntry(jpt,    iptMinus1));    	non-compiled	[CE]  cannot  find  symbol  tmp2	30	None	replace
