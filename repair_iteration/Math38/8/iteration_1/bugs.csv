bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	add	    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }		compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	add
2	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }		compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	add
3	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	add	    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  }		compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	add
4	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  }		compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	add
5	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException( " ");  }		non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	16	None	add
6	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]          BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException( " ");  }		non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	16	None	add
7	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException();  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	add	    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException();  }		compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	add
8	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException();  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException();  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(jpt,  iptMinus1));  }  else  {  throw  new  PathIsExploredException();  }		compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	add
9	[BUG]  [BUGGY]  interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [CE]  cannot  find  symbol  tmp2  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	non-compiled	[CE]  cannot  find  symbol  tmp2	15	None	replace
10	[BUG]  [BUGGY]  interpolationPoints.setEntry(jpt,  n1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [CE]  cannot  find  symbol  n1  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(jpt,  n1,  interpolationPoints.getEntry(jpt,  iptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	interpolationPoints.setEntry(jpt,  n1,  interpolationPoints.getEntry(jpt,  iptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	non-compiled	[CE]  cannot  find  symbol  n1	15	None	replace
11	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	add	interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	replace
12	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	replace
13	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	add	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	replace
14	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	replace
15	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	add	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	replace
16	[BUG]  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	interpolationPoints.setEntry(ipt,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	replace
17	[BUG]  [BUGGY]  interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [CE]  cannot  find  symbol  tmp2  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	interpolationPoints.setEntry(tmp2,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	non-compiled	[CE]  cannot  find  symbol  tmp2	15	None	replace
18	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	add	interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	replace
19	[BUG]  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  [BUGGY]  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));	interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	replace
20	[BUG]  [BUGGY]    BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQAOptimizer();  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    BOBYQAOptimizer$PathIsExploredException  nfm  =  new  BOBYQAOptimizer();		non-compiled	[CE]  cannot  find  symbol	16	None	add
21	[BUG]  [BUGGY]    BOBYQAOptimizer$PathIsExploredException  nfm  =  new  PathIsExploredException();  [CE]  cannot  find  symbol  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    BOBYQAOptimizer$PathIsExploredException  nfm  =  new  PathIsExploredException();  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    BOBYQAOptimizer$PathIsExploredException  nfm  =  new  PathIsExploredException();		non-compiled	[CE]  cannot  find  symbol	16	None	add
22	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  throw  new  PathIsExploredException( "Interpolation  point  not  created  with  upperBound. ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  throw  new  PathIsExploredException( "Interpolation  point  not  created  with  upperBound. ");  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  throw  new  PathIsExploredException( "Interpolation  point  not  created  with  upperBound. ");  }		non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	16	None	add
23	[BUG]  [BUGGY]    final  int  jptMinus1  =  jpt;  [CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    final  int  jptMinus1  =  jpt;  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    final  int  jptMinus1  =  jpt;		non-compiled	[CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])	16	None	add
24	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  throw  new  PathIsExploredException( "Interpolation  point  not  created  with  lowerBound  or  lowerBound ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]            BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  throw  new  PathIsExploredException( "Interpolation  point  not  created  with  lowerBound  or  lowerBound ");  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  throw  new  PathIsExploredException( "Interpolation  point  not  created  with  lowerBound  or  lowerBound ");  }		non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	16	None	add
25	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }		non-compiled	[CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])	16	None	add
26	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  }  [CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  }		non-compiled	[CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])	16	None	add
27	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt.length;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  }  [CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt.length;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt.length;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(ipt,  jptMinus1));  }		non-compiled	[CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])	16	None	add
28	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt.length;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt.length;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt.length;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }		non-compiled	[CE]  variable  jptMinus1  is  already  defined  in  method  prelim(double[],double[])	16	None	add
29	[BUG]  [BUGGY]    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt.length;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMin  [CE]  ')'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException  [CONTEXT]  ipt  =  jpt  +  tmp1;  if  (ipt  >  n)  {  final  int  tmp2  =  jpt;  jpt  =  ipt  -  n;  ipt  =  tmp2;  throw  new  PathIsExploredException();  //  XXX  }  final  int  iptMinus1  =  ipt;  final  int  jptMinus1  =  jpt;  interpolationPoints.setEntry(nfm,  iptMinus1,  interpolationPoints.getEntry(ipt,  iptMinus1));  [BUGGY]    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt.length;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMin  [BUGGY]  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMinus1));  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	    if(interpolationPoints!=  null)  {  final  int  jptMinus1  =  jpt.length;  interpolationPoints.setEntry(nfm,  jptMinus1,  interpolationPoints.getEntry(jpt,  jptMin		non-compiled	[CE]  ')'  expected	16	None	add
