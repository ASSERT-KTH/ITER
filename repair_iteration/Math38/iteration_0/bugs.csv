bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] final int tmp1 = (nfm - np) / n; [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { [BUGGY] final int tmp1 = (nfm - np) / n; [BUGGY] jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1653	1653	1	replace	
2	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { [BUGGY] [BUGGY] final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1653	1653	1	add	
3	[BUG] [BUGGY] jpt = nfm - tmp1 * n - n; [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; [BUGGY] jpt = nfm - tmp1 * n - n; [BUGGY] ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1654	1654	1	replace	
4	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; [BUGGY] [BUGGY] jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1654	1654	1	add	
5	[BUG] [BUGGY] ipt = jpt + tmp1; [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; [BUGGY] ipt = jpt + tmp1; [BUGGY] if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1655	1655	1	replace	
6	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; [BUGGY] [BUGGY] ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1655	1655	1	add	
7	[BUG] [BUGGY] if (ipt > n) { [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; [BUGGY] if (ipt > n) { [BUGGY] final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1656	1656	1	replace	
8	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; [BUGGY] [BUGGY] if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1656	1656	1	add	
9	[BUG] [BUGGY] final int iptMinus1 = ipt; [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } [BUGGY] final int iptMinus1 = ipt; [BUGGY] final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1662	1662	1	replace	
10	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } [BUGGY] [BUGGY] final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1662	1662	1	add	
11	[BUG] [BUGGY] final int jptMinus1 = jpt; [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; [BUGGY] final int jptMinus1 = jpt; [BUGGY] interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1663	1663	1	replace	
12	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; [BUGGY] [BUGGY] final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1663	1663	1	add	
13	[BUG] [BUGGY] interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; [BUGGY] interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [BUGGY] interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	
14	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; [BUGGY] [BUGGY] interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	
15	[BUG] [BUGGY] interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [BUGGY] interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); [BUGGY] } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	
16	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [BUGGY] [BUGGY] interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	add	
17	[BUG] [BUGGY] zMatrix.setEntry(0, nfxm, recip); [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { [BUGGY] zMatrix.setEntry(0, nfxm, recip); [BUGGY] zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	
18	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT] zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { [BUGGY] [BUGGY] zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	
19	[BUG] [BUGGY] zMatrix.setEntry(nfm, nfxm, recip); [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT]  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); [BUGGY] zMatrix.setEntry(nfm, nfxm, recip); [BUGGY] zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1745	1745	1	replace	
20	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException testConstrainedRosenWithMoreInterpolationPoints [CONTEXT]  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); [BUGGY] [BUGGY] zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1745	1745	1	add	
